install/databases.js: line 1, col 1, Use the function form of "use strict".
install/databases.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/databases.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/databases.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/databases.js: line 12, col 18, 'async functions' is only available in ES8 (use 'esversion: 8').
install/databases.js: line 13, col 18, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/databases.js: line 14, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/databases.js: line 18, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
install/databases.js: line 39, col 21, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/databases.js: line 78, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/databases.js: line 81, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/databases.js: line 82, col 10, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/databases.js: line 3, col 16, 'require' is not defined.
install/databases.js: line 4, col 17, 'require' is not defined.
install/databases.js: line 7, col 12, 'require' is not defined.
install/databases.js: line 8, col 12, 'require' is not defined.
install/databases.js: line 9, col 15, 'require' is not defined.
install/databases.js: line 12, col 1, 'module' is not defined.

install/web.js: line 1, col 1, Use the function form of "use strict".
install/web.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 14, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 15, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 18, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 19, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 21, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 25, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 25, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
install/web.js: line 26, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 26, col 24, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 27, col 18, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 48, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 49, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 50, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 51, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 52, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 53, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 54, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 57, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 59, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
install/web.js: line 61, col 18, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 66, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
install/web.js: line 91, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
install/web.js: line 92, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 93, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 94, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 95, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 100, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
install/web.js: line 113, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
install/web.js: line 114, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 116, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 117, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 118, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 120, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 121, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
install/web.js: line 122, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 126, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 139, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 140, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 140, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
install/web.js: line 141, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 141, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 141, col 96, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
install/web.js: line 149, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 151, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 174, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 175, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 176, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
install/web.js: line 176, col 12, 'object spread property' is only available in ES9 (use 'esversion: 9').
install/web.js: line 179, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 185, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 185, col 67, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 186, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 186, col 67, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 187, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 187, col 71, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 188, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 188, col 75, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 189, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 189, col 71, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 190, col 34, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 190, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 197, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 200, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
install/web.js: line 205, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
install/web.js: line 213, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
install/web.js: line 216, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 236, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 244, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
install/web.js: line 260, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
install/web.js: line 261, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 262, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 263, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 265, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 267, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 267, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 278, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
install/web.js: line 280, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 281, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 282, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 290, col 23, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
install/web.js: line 295, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
install/web.js: line 298, col 60, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
install/web.js: line 302, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
install/web.js: line 303, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
install/web.js: line 3, col 17, 'require' is not defined.
install/web.js: line 4, col 17, 'require' is not defined.
install/web.js: line 5, col 20, 'require' is not defined.
install/web.js: line 6, col 12, 'require' is not defined.
install/web.js: line 7, col 14, 'require' is not defined.
install/web.js: line 8, col 22, 'require' is not defined.
install/web.js: line 10, col 17, 'require' is not defined.
install/web.js: line 11, col 15, 'require' is not defined.
install/web.js: line 13, col 20, 'require' is not defined.
install/web.js: line 14, col 20, 'require' is not defined.
install/web.js: line 15, col 19, 'require' is not defined.
install/web.js: line 16, col 14, 'require' is not defined.
install/web.js: line 92, col 18, 'require' is not defined.
install/web.js: line 93, col 24, 'require' is not defined.
install/web.js: line 118, col 14, 'require' is not defined.
install/web.js: line 141, col 27, 'require' is not defined.
install/web.js: line 149, col 22, 'require' is not defined.
install/web.js: line 197, col 19, 'require' is not defined.
install/web.js: line 26, col 56, 'global' is not defined.
install/web.js: line 48, col 13, 'module' is not defined.
install/web.js: line 64, col 49, '__dirname' is not defined.
install/web.js: line 237, col 23, '__dirname' is not defined.
install/web.js: line 238, col 23, '__dirname' is not defined.
install/web.js: line 239, col 23, '__dirname' is not defined.
install/web.js: line 261, col 34, '__dirname' is not defined.
install/web.js: line 280, col 38, '__dirname' is not defined.
install/web.js: line 284, col 27, '__dirname' is not defined.
install/web.js: line 288, col 47, '__dirname' is not defined.
install/web.js: line 297, col 19, '__dirname' is not defined.
install/web.js: line 298, col 19, '__dirname' is not defined.
install/web.js: line 303, col 41, '__dirname' is not defined.
install/web.js: line 77, col 15, 'Promise' is not defined.
install/web.js: line 242, col 19, 'Promise' is not defined.
install/web.js: line 267, col 30, 'Promise' is not defined.
install/web.js: line 272, col 11, 'Promise' is not defined.
install/web.js: line 176, col 12, 'process' is not defined.
install/web.js: line 252, col 9, 'process' is not defined.
install/web.js: line 224, col 13, 'console' is not defined.
install/web.js: line 225, col 13, 'console' is not defined.
install/web.js: line 226, col 13, 'console' is not defined.
install/web.js: line 227, col 13, 'console' is not defined.
install/web.js: line 248, col 13, 'console' is not defined.

node_modules/asn1.js/lib/asn1/api.js: line 1, col 1, Use the function form of "use strict".
node_modules/asn1.js/lib/asn1/api.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/api.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/api.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/api.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/api.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/api.js: line 3, col 18, 'require' is not defined.
node_modules/asn1.js/lib/asn1/api.js: line 4, col 18, 'require' is not defined.
node_modules/asn1.js/lib/asn1/api.js: line 5, col 18, 'require' is not defined.
node_modules/asn1.js/lib/asn1/api.js: line 7, col 13, 'exports' is not defined.

node_modules/asn1.js/lib/asn1/base/buffer.js: line 1, col 1, Use the function form of "use strict".
node_modules/asn1.js/lib/asn1/base/buffer.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/buffer.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/buffer.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/buffer.js: line 27, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/buffer.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/buffer.js: line 70, col 7, Confusing use of '!'.
node_modules/asn1.js/lib/asn1/base/buffer.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/buffer.js: line 120, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/buffer.js: line 3, col 18, 'require' is not defined.
node_modules/asn1.js/lib/asn1/base/buffer.js: line 4, col 18, 'require' is not defined.
node_modules/asn1.js/lib/asn1/base/buffer.js: line 5, col 16, 'require' is not defined.
node_modules/asn1.js/lib/asn1/base/buffer.js: line 19, col 1, 'exports' is not defined.
node_modules/asn1.js/lib/asn1/base/buffer.js: line 112, col 1, 'exports' is not defined.

node_modules/asn1.js/lib/asn1/base/index.js: line 1, col 1, Use the function form of "use strict".
node_modules/asn1.js/lib/asn1/base/index.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/index.js: line 3, col 14, 'exports' is not defined.
node_modules/asn1.js/lib/asn1/base/index.js: line 5, col 17, 'require' is not defined.
node_modules/asn1.js/lib/asn1/base/index.js: line 6, col 22, 'require' is not defined.
node_modules/asn1.js/lib/asn1/base/index.js: line 7, col 22, 'require' is not defined.
node_modules/asn1.js/lib/asn1/base/index.js: line 8, col 13, 'require' is not defined.

node_modules/asn1.js/lib/asn1/base/node.js: line 1, col 1, Use the function form of "use strict".
node_modules/asn1.js/lib/asn1/base/node.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 23, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 66, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 78, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 84, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 87, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 95, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 108, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 111, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 134, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 138, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 152, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 163, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 164, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 177, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 186, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 194, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 204, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 213, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 222, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 223, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 234, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 243, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 251, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 263, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 276, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 282, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 283, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 285, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 291, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 301, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 321, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 328, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 334, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 338, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 341, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 384, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 404, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 437, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 450, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 451, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 452, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 455, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 456, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 458, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 486, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 490, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 501, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 507, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 521, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 522, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 538, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 543, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 560, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 563, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 577, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 578, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 597, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 599, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 610, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/node.js: line 3, col 18, 'require' is not defined.
node_modules/asn1.js/lib/asn1/base/node.js: line 4, col 23, 'require' is not defined.
node_modules/asn1.js/lib/asn1/base/node.js: line 5, col 23, 'require' is not defined.
node_modules/asn1.js/lib/asn1/base/node.js: line 6, col 16, 'require' is not defined.
node_modules/asn1.js/lib/asn1/base/node.js: line 64, col 1, 'module' is not defined.

node_modules/asn1.js/lib/asn1/base/reporter.js: line 1, col 1, Use the function form of "use strict".
node_modules/asn1.js/lib/asn1/base/reporter.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/reporter.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/reporter.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/reporter.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/reporter.js: line 43, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/reporter.js: line 55, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/reporter.js: line 57, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/reporter.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/reporter.js: line 65, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/reporter.js: line 71, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/reporter.js: line 72, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/reporter.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/reporter.js: line 93, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/base/reporter.js: line 3, col 18, 'require' is not defined.
node_modules/asn1.js/lib/asn1/base/reporter.js: line 13, col 1, 'exports' is not defined.

node_modules/asn1.js/lib/asn1/constants/der.js: line 1, col 1, Use the function form of "use strict".
node_modules/asn1.js/lib/asn1/constants/der.js: line 5, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/constants/der.js: line 12, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/constants/der.js: line 19, col 1, 'exports' is not defined.
node_modules/asn1.js/lib/asn1/constants/der.js: line 25, col 1, 'exports' is not defined.
node_modules/asn1.js/lib/asn1/constants/der.js: line 25, col 34, 'exports' is not defined.
node_modules/asn1.js/lib/asn1/constants/der.js: line 27, col 1, 'exports' is not defined.
node_modules/asn1.js/lib/asn1/constants/der.js: line 58, col 1, 'exports' is not defined.
node_modules/asn1.js/lib/asn1/constants/der.js: line 58, col 29, 'exports' is not defined.

node_modules/asn1.js/lib/asn1/constants/index.js: line 1, col 1, Use the function form of "use strict".
node_modules/asn1.js/lib/asn1/constants/index.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/constants/index.js: line 7, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/constants/index.js: line 14, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/constants/index.js: line 3, col 19, 'exports' is not defined.
node_modules/asn1.js/lib/asn1/constants/index.js: line 21, col 17, 'require' is not defined.

node_modules/asn1.js/lib/asn1/decoders/der.js: line 1, col 1, Use the function form of "use strict".
node_modules/asn1.js/lib/asn1/decoders/der.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 42, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 43, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 54, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 59, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 78, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 92, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 95, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 99, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 116, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 118, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 122, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 132, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 137, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 141, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 142, col 10, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 147, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 158, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 172, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 173, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 174, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 175, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 188, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 189, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 197, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 208, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 210, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 211, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 212, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 213, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 214, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 215, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 246, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 255, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 256, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 273, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 277, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 278, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 282, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 295, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 306, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 321, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 326, col 8, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 328, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/der.js: line 3, col 18, 'require' is not defined.
node_modules/asn1.js/lib/asn1/decoders/der.js: line 5, col 16, 'require' is not defined.
node_modules/asn1.js/lib/asn1/decoders/der.js: line 6, col 23, 'require' is not defined.
node_modules/asn1.js/lib/asn1/decoders/der.js: line 7, col 14, 'require' is not defined.
node_modules/asn1.js/lib/asn1/decoders/der.js: line 10, col 13, 'require' is not defined.
node_modules/asn1.js/lib/asn1/decoders/der.js: line 21, col 1, 'module' is not defined.

node_modules/asn1.js/lib/asn1/decoders/index.js: line 1, col 1, Use the function form of "use strict".
node_modules/asn1.js/lib/asn1/decoders/index.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/index.js: line 3, col 18, 'exports' is not defined.
node_modules/asn1.js/lib/asn1/decoders/index.js: line 5, col 16, 'require' is not defined.
node_modules/asn1.js/lib/asn1/decoders/index.js: line 6, col 16, 'require' is not defined.

node_modules/asn1.js/lib/asn1/decoders/pem.js: line 1, col 1, Use the function form of "use strict".
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 21, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 22, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 23, col 8, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 24, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 45, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 3, col 18, 'require' is not defined.
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 4, col 16, 'require' is not defined.
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 6, col 20, 'require' is not defined.
node_modules/asn1.js/lib/asn1/decoders/pem.js: line 13, col 1, 'module' is not defined.

node_modules/asn1.js/lib/asn1/encoders/der.js: line 1, col 1, Use the function form of "use strict".
node_modules/asn1.js/lib/asn1/encoders/der.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 36, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 40, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 48, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 49, col 8, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 52, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 56, col 8, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 66, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 67, col 10, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 104, col 10, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 108, col 10, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 124, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 125, col 8, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 126, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 131, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 132, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 133, col 8, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 134, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 151, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 152, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 198, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 206, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 210, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 223, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 224, col 8, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 227, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 228, col 8, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 250, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 251, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 255, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 272, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/der.js: line 3, col 18, 'require' is not defined.
node_modules/asn1.js/lib/asn1/encoders/der.js: line 4, col 16, 'require' is not defined.
node_modules/asn1.js/lib/asn1/encoders/der.js: line 5, col 14, 'require' is not defined.
node_modules/asn1.js/lib/asn1/encoders/der.js: line 8, col 13, 'require' is not defined.
node_modules/asn1.js/lib/asn1/encoders/der.js: line 19, col 1, 'module' is not defined.

node_modules/asn1.js/lib/asn1/encoders/index.js: line 1, col 1, Use the function form of "use strict".
node_modules/asn1.js/lib/asn1/encoders/index.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/index.js: line 3, col 18, 'exports' is not defined.
node_modules/asn1.js/lib/asn1/encoders/index.js: line 5, col 16, 'require' is not defined.
node_modules/asn1.js/lib/asn1/encoders/index.js: line 6, col 16, 'require' is not defined.

node_modules/asn1.js/lib/asn1/encoders/pem.js: line 1, col 1, Use the function form of "use strict".
node_modules/asn1.js/lib/asn1/encoders/pem.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/pem.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/pem.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/pem.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/pem.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/pem.js: line 19, col 8, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1/encoders/pem.js: line 3, col 18, 'require' is not defined.
node_modules/asn1.js/lib/asn1/encoders/pem.js: line 5, col 20, 'require' is not defined.
node_modules/asn1.js/lib/asn1/encoders/pem.js: line 12, col 1, 'module' is not defined.

node_modules/asn1.js/lib/asn1.js: line 1, col 1, Use the function form of "use strict".
node_modules/asn1.js/lib/asn1.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/asn1.js/lib/asn1.js: line 3, col 14, 'exports' is not defined.
node_modules/asn1.js/lib/asn1.js: line 5, col 15, 'require' is not defined.
node_modules/asn1.js/lib/asn1.js: line 7, col 15, 'require' is not defined.
node_modules/asn1.js/lib/asn1.js: line 8, col 13, 'require' is not defined.
node_modules/asn1.js/lib/asn1.js: line 9, col 18, 'require' is not defined.
node_modules/asn1.js/lib/asn1.js: line 10, col 17, 'require' is not defined.
node_modules/asn1.js/lib/asn1.js: line 11, col 17, 'require' is not defined.

node_modules/base32.js/base32.js: line 1, col 1, Use the function form of "use strict".
node_modules/base32.js/base32.js: line 11, col 29, Expected an assignment or function call and instead saw an expression.
node_modules/base32.js/base32.js: line 16, col 2, Missing semicolon.
node_modules/base32.js/base32.js: line 80, col 24, 'exports' is not defined.
node_modules/base32.js/base32.js: line 83, col 24, 'exports' is not defined.
node_modules/base32.js/base32.js: line 86, col 24, 'exports' is not defined.
node_modules/base32.js/base32.js: line 192, col 25, 'exports' is not defined.
node_modules/base32.js/base32.js: line 195, col 25, 'exports' is not defined.
node_modules/base32.js/base32.js: line 198, col 25, 'exports' is not defined.
node_modules/base32.js/base32.js: line 290, col 1, 'exports' is not defined.
node_modules/base32.js/base32.js: line 302, col 1, 'exports' is not defined.
node_modules/base32.js/base32.js: line 307, col 1, 'exports' is not defined.
node_modules/base32.js/base32.js: line 308, col 1, 'exports' is not defined.
node_modules/base32.js/base32.js: line 309, col 1, 'exports' is not defined.
node_modules/base32.js/base32.js: line 310, col 1, 'exports' is not defined.
node_modules/base32.js/base32.js: line 311, col 1, 'exports' is not defined.
node_modules/base32.js/base32.js: line 312, col 1, 'exports' is not defined.

node_modules/base32.js/dist/base32.js: line 1, col 5, ['base32'] is better written in dot notation.
node_modules/base32.js/dist/base32.js: line 58, col 29, Expected an assignment or function call and instead saw an expression.
node_modules/base32.js/dist/base32.js: line 63, col 2, Missing semicolon.
node_modules/base32.js/dist/base32.js: line 363, col 12, Missing semicolon.

node_modules/base32.js/dist/base32.min.js: line 1, col 169, Missing semicolon.
node_modules/base32.js/dist/base32.min.js: line 1, col 209, Missing semicolon.
node_modules/base32.js/dist/base32.min.js: line 1, col 256, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 268, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 281, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 326, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 379, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 434, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 512, Missing semicolon.
node_modules/base32.js/dist/base32.min.js: line 1, col 525, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 547, Expected an assignment or function call and instead saw an expression.
node_modules/base32.js/dist/base32.min.js: line 1, col 548, Missing semicolon.
node_modules/base32.js/dist/base32.min.js: line 1, col 567, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 579, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 592, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 637, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 692, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 749, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 829, Missing semicolon.
node_modules/base32.js/dist/base32.min.js: line 1, col 841, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 873, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 887, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/base32.js/dist/base32.min.js: line 1, col 914, Expected an assignment or function call and instead saw an expression.
node_modules/base32.js/dist/base32.min.js: line 1, col 915, Missing semicolon.
node_modules/base32.js/dist/base32.min.js: line 1, col 1003, Expected an assignment or function call and instead saw an expression.
node_modules/base32.js/dist/base32.min.js: line 1, col 1004, Missing semicolon.
node_modules/base32.js/dist/base32.min.js: line 1, col 1008, Missing semicolon.
node_modules/base32.js/dist/base32.min.js: line 1, col 1586, Expected an assignment or function call and instead saw an expression.
node_modules/base32.js/dist/base32.min.js: line 1, col 1587, Missing semicolon.
node_modules/base32.js/dist/base32.min.js: line 1, col 1621, Missing semicolon.
node_modules/base32.js/dist/base32.min.js: line 1, col 1774, Missing semicolon.
node_modules/base32.js/dist/base32.min.js: line 1, col 2009, Expected an assignment or function call and instead saw an expression.
node_modules/base32.js/dist/base32.min.js: line 1, col 2048, Missing semicolon.
node_modules/base32.js/dist/base32.min.js: line 1, col 2198, Missing semicolon.
node_modules/base32.js/dist/base32.min.js: line 1, col 2250, Missing semicolon.
node_modules/base32.js/dist/base32.min.js: line 1, col 2302, Missing semicolon.
node_modules/base32.js/dist/base32.min.js: line 1, col 2378, Expected an assignment or function call and instead saw an expression.
node_modules/base32.js/dist/base32.min.js: line 1, col 2379, Missing semicolon.

node_modules/base32.js/index.js: line 1, col 1, Use the function form of "use strict".
node_modules/base32.js/index.js: line 4, col 14, 'require' is not defined.
node_modules/base32.js/index.js: line 11, col 14, 'Buffer' is not defined.
node_modules/base32.js/index.js: line 16, col 1, 'module' is not defined.

node_modules/base32.js/karma.conf.js: line 1, col 1, Use the function form of "use strict".
node_modules/base32.js/karma.conf.js: line 7, col 1, 'module' is not defined.
node_modules/base32.js/karma.conf.js: line 24, col 14, 'require' is not defined.

node_modules/base32.js/test/base32_test.js: line 1, col 1, Use the function form of "use strict".
node_modules/base32.js/test/base32_test.js: line 3, col 14, 'require' is not defined.
node_modules/base32.js/test/base32_test.js: line 4, col 14, 'require' is not defined.
node_modules/base32.js/test/base32_test.js: line 5, col 16, 'require' is not defined.
node_modules/base32.js/test/base32_test.js: line 7, col 1, 'describe' is not defined.
node_modules/base32.js/test/base32_test.js: line 42, col 1, 'describe' is not defined.
node_modules/base32.js/test/base32_test.js: line 13, col 7, 'it' is not defined.
node_modules/base32.js/test/base32_test.js: line 23, col 7, 'it' is not defined.
node_modules/base32.js/test/base32_test.js: line 31, col 7, 'it' is not defined.
node_modules/base32.js/test/base32_test.js: line 47, col 5, 'it' is not defined.
node_modules/base32.js/test/base32_test.js: line 56, col 5, 'it' is not defined.
node_modules/base32.js/test/base32_test.js: line 63, col 5, 'it' is not defined.
node_modules/base32.js/test/base32_test.js: line 70, col 5, 'it' is not defined.
node_modules/base32.js/test/base32_test.js: line 83, col 13, 'Buffer' is not defined.

node_modules/base32.js/test/fixtures.js: line 1, col 1, Use the function form of "use strict".
node_modules/base32.js/test/fixtures.js: line 3, col 1, 'module' is not defined.

node_modules/base32.js/webpack.config.js: line 1, col 1, Use the function form of "use strict".
node_modules/base32.js/webpack.config.js: line 7, col 1, 'exports' is not defined.
node_modules/base32.js/webpack.config.js: line 7, col 11, 'module' is not defined.

node_modules/big.js/big.js: line 224, col 19, Bad assignment.
node_modules/big.js/big.js: line 376, col 12, You might be leaking a variable (bl) here.
node_modules/big.js/big.js: line 528, col 11, Expected a conditional expression and instead saw an assignment.
node_modules/big.js/big.js: line 530, col 16, Expected a conditional expression and instead saw an assignment.
node_modules/big.js/big.js: line 662, col 11, Expected a conditional expression and instead saw an assignment.

node_modules/big.js/big.min.js: line 2, col 444, Expected an assignment or function call and instead saw an expression.
node_modules/big.js/big.min.js: line 2, col 515, Expected an assignment or function call and instead saw an expression.
node_modules/big.js/big.min.js: line 2, col 548, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 599, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 818, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 991, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 1074, Expected an assignment or function call and instead saw an expression.
node_modules/big.js/big.min.js: line 2, col 1115, Expected an assignment or function call and instead saw an expression.
node_modules/big.js/big.min.js: line 2, col 1149, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 1214, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 1505, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 1713, You might be leaking a variable (f) here.
node_modules/big.js/big.min.js: line 2, col 1961, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 1965, Confusing use of '!'.
node_modules/big.js/big.min.js: line 2, col 2053, Expected an assignment or function call and instead saw an expression.
node_modules/big.js/big.min.js: line 2, col 2055, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 2066, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 2088, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 2132, Expected an assignment or function call and instead saw an expression.
node_modules/big.js/big.min.js: line 2, col 2133, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 2228, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 2265, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 2304, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 2344, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 2383, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 2423, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 2636, Expected a conditional expression and instead saw an assignment.
node_modules/big.js/big.min.js: line 2, col 2715, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 2808, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 2959, Expected an assignment or function call and instead saw an expression.
node_modules/big.js/big.min.js: line 2, col 2961, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 2972, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 3025, Expected an assignment or function call and instead saw an expression.
node_modules/big.js/big.min.js: line 2, col 3069, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 3296, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 3500, Expected a conditional expression and instead saw an assignment.
node_modules/big.js/big.min.js: line 2, col 3571, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 3742, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 3931, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 4069, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 4144, A leading decimal point can be confused with a dot: '.5'.
node_modules/big.js/big.min.js: line 2, col 4535, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 4857, Expected an assignment or function call and instead saw an expression.
node_modules/big.js/big.min.js: line 2, col 4875, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 4940, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 4990, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 5041, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 5091, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 5129, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 5177, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 5215, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/big.js/big.min.js: line 2, col 5740, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 5762, Expected an assignment or function call and instead saw an expression.
node_modules/big.js/big.min.js: line 2, col 5763, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 5832, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 5917, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 5986, Expected an assignment or function call and instead saw an expression.
node_modules/big.js/big.min.js: line 2, col 5987, Missing semicolon.
node_modules/big.js/big.min.js: line 2, col 5993, Expected an assignment or function call and instead saw an expression.

node_modules/bignumber.js/bignumber.js: line 263, col 19, Expected a conditional expression and instead saw an assignment.
node_modules/bignumber.js/bignumber.js: line 324, col 15, Expected a conditional expression and instead saw an assignment.
node_modules/bignumber.js/bignumber.js: line 496, col 23, Confusing use of '!'.
node_modules/bignumber.js/bignumber.js: line 596, col 12, Label 'out' on if statement.
node_modules/bignumber.js/bignumber.js: line 672, col 8, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/bignumber.js/bignumber.js: line 880, col 10, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/bignumber.js/bignumber.js: line 1249, col 10, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/bignumber.js/bignumber.js: line 1391, col 8, Missing semicolon.
node_modules/bignumber.js/bignumber.js: line 1469, col 12, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/bignumber.js/bignumber.js: line 1566, col 9, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/bignumber.js/bignumber.js: line 1627, col 13, Expected a conditional expression and instead saw an assignment.
node_modules/bignumber.js/bignumber.js: line 1724, col 9, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/bignumber.js/bignumber.js: line 1976, col 13, Expected a conditional expression and instead saw an assignment.
node_modules/bignumber.js/bignumber.js: line 1978, col 18, Expected a conditional expression and instead saw an assignment.
node_modules/bignumber.js/bignumber.js: line 2275, col 13, Expected a conditional expression and instead saw an assignment.
node_modules/bignumber.js/bignumber.js: line 2336, col 32, Confusing use of '!'.
node_modules/bignumber.js/bignumber.js: line 2348, col 13, Expected a conditional expression and instead saw an assignment.
node_modules/bignumber.js/bignumber.js: line 2470, col 19, Confusing use of '!'.
node_modules/bignumber.js/bignumber.js: line 2470, col 26, Confusing use of '!'.
node_modules/bignumber.js/bignumber.js: line 2600, col 10, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/bignumber.js/bignumber.js: line 2601, col 11, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/bignumber.js/bignumber.js: line 2739, col 12, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/bignumber.js/bignumber.js: line 2854, col 10, Misleading line break before '?'; readers may interpret this as an expression boundary.

node_modules/bn.js/lib/bn.js: line 974, col 7, 'r' used out of scope.
node_modules/bn.js/lib/bn.js: line 975, col 15, 'r' used out of scope.
node_modules/bn.js/lib/bn.js: line 976, col 23, 'r' used out of scope.
node_modules/bn.js/lib/bn.js: line 979, col 7, 'r' used out of scope.
node_modules/bn.js/lib/bn.js: line 980, col 15, 'r' used out of scope.
node_modules/bn.js/lib/bn.js: line 981, col 23, 'r' used out of scope.
node_modules/bn.js/lib/bn.js: line 2041, col 12, 'i' used out of scope.
node_modules/bn.js/lib/bn.js: line 2041, col 19, 'i' used out of scope.
node_modules/bn.js/lib/bn.js: line 2041, col 36, 'i' used out of scope.
node_modules/bn.js/lib/bn.js: line 2042, col 20, 'i' used out of scope.
node_modules/bn.js/lib/bn.js: line 2042, col 36, 'i' used out of scope.
node_modules/bn.js/lib/bn.js: line 2050, col 10, 'i' used out of scope.
node_modules/bn.js/lib/bn.js: line 2050, col 31, 'i' used out of scope.
node_modules/bn.js/lib/bn.js: line 2050, col 57, 'i' used out of scope.
node_modules/bn.js/lib/bn.js: line 2050, col 66, 'i' used out of scope.
node_modules/bn.js/lib/bn.js: line 2051, col 29, 'i' used out of scope.
node_modules/bn.js/lib/bn.js: line 2052, col 18, 'i' used out of scope.

node_modules/chart.js/auto/auto.js: line 1, col 1, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/auto/auto.js: line 3, col 16, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/auto/auto.js: line 5, col 1, 'export' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/auto/auto.js: line 6, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/chart.js/dist/chart.js: line 7, col 1, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 8, col 1, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 10, col 1, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 18, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 19, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 20, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 21, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 23, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 32, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 40, col 15, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 41, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 42, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 46, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 47, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 48, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 49, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 80, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 81, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 103, col 42, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 109, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 115, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 122, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 129, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 133, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 134, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 147, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 148, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 149, col 5, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 152, col 2, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 153, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 154, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 157, col 5, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 161, col 1, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 163, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 170, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 193, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 194, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 195, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 221, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 222, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 223, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 224, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 225, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 226, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 227, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 244, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 245, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 247, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 248, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 253, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 254, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 255, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 261, col 1, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 271, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 272, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 273, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 274, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 278, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 279, col 18, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 279, col 31, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 284, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 292, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 293, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 297, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 299, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 301, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 307, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 308, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 309, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 310, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 311, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 312, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 314, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 319, col 33, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 322, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 323, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 324, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 347, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 355, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 356, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 357, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 358, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 369, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 384, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 385, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 386, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 387, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 397, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 398, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 407, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 425, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 426, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 427, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 433, col 52, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 434, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 435, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 436, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 456, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 457, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 458, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 469, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 473, col 12, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 476, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 476, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 483, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 487, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 487, col 21, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 488, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 496, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 496, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 497, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 498, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 498, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 499, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 500, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 501, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 502, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 503, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 504, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 505, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 506, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 506, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 507, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 512, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 517, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 518, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 525, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 536, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 537, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 543, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 544, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 549, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 549, col 23, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 550, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 560, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 560, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 561, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 561, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 562, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 562, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 566, col 1, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 567, col 18, Class properties must be methods. Expected '(' but instead saw '='.
node_modules/chart.js/dist/chart.js: line 567, col 21, Expected '(' and instead saw '}'.
node_modules/chart.js/dist/chart.js: line 567, col 22, Expected an identifier and instead saw ';'.
node_modules/chart.js/dist/chart.js: line 568, col 28, Class properties must be methods. Expected '(' but instead saw '='.
node_modules/chart.js/dist/chart.js: line 588, col 38, 'new.target' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 589, col 35, 'new.target' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 593, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 609, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 610, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 611, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 612, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 612, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 613, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 614, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 615, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 616, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 617, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 618, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 635, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 642, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 651, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 652, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 653, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 659, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 671, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 678, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 679, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 680, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 682, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 695, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 696, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 697, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 703, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 703, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 704, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 704, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 705, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 706, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 707, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 708, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 721, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 721, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 738, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 738, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 739, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 740, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 741, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 742, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 743, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 744, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 748, col 17, 'computed property names' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 749, col 17, 'computed property names' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 755, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 755, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 756, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 757, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 769, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 769, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 770, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 770, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 771, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 772, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 790, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 791, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 792, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 793, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 798, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 802, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 803, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 804, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 813, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 814, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 815, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 816, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 817, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 818, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 819, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 823, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 823, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 824, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 827, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 851, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 852, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 853, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 866, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 867, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 868, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 869, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 876, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 882, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 883, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 884, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 885, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 886, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 887, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 888, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 889, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 890, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 891, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 896, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 911, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 915, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 916, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 918, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 938, col 43, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 938, col 56, Regular parameters should not come after default parameters.
node_modules/chart.js/dist/chart.js: line 939, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 940, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 941, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 942, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 943, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 947, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 948, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 949, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 950, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 958, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 959, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 960, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 960, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 961, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 969, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 970, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 971, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 971, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 972, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 976, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 978, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 979, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 980, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 983, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 999, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1000, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1001, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1002, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1005, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1006, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1023, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1035, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1041, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1047, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1048, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1049, col 14, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1049, col 14, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1049, col 41, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1053, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1054, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1055, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1065, col 49, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 1066, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1067, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1068, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1069, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1070, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1070, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 1090, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1092, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1103, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1103, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1108, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 1112, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1141, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1161, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1162, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1163, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1166, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 1171, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1172, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1173, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1174, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1175, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1175, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 1196, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1197, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1207, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1212, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1213, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1214, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1215, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1216, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1223, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1224, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1228, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1232, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1233, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1234, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1235, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1236, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1237, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1244, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1245, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1248, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1249, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1261, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1262, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1263, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1264, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1265, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1266, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1285, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1303, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1304, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1305, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1306, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1307, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1311, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1312, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1326, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1326, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1356, col 37, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1359, col 1, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1360, col 15, Class properties must be methods. Expected '(' but instead saw '='.
node_modules/chart.js/dist/chart.js: line 1402, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1402, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1403, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1403, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1404, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1405, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1406, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1407, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1418, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1428, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1429, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1429, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1430, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1431, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1432, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1435, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1441, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1445, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1449, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1450, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1450, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1451, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1452, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1453, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1454, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1454, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1455, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1456, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1457, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1458, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1461, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1462, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1463, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1464, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1475, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1482, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1482, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1483, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1483, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 1484, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1485, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1486, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1486, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 1487, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1488, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1493, col 14, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1493, col 25, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1513, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1514, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1518, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1519, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1520, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1521, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1522, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1526, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1527, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1529, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1530, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1540, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1540, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1541, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1542, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1543, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1544, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1545, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1546, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1547, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1548, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1561, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1562, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1574, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1575, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1576, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1577, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1585, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1590, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1591, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1592, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1597, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1598, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1599, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1600, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1601, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1603, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1604, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1605, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1615, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1616, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1620, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1621, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1622, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1623, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1624, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1633, col 1, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1634, col 15, Class properties must be methods. Expected '(' but instead saw '='.
node_modules/chart.js/dist/chart.js: line 1665, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1666, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1672, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1673, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1674, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1680, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1681, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1682, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1688, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1689, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1690, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1696, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1697, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1698, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1698, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1699, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1700, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1701, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1702, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1709, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1713, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1714, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1714, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1715, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1715, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1716, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1717, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1718, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1719, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1720, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1721, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1722, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1723, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1735, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1736, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1742, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1752, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1753, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1754, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1755, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1757, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1758, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1759, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1760, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1761, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1762, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1763, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1763, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 1764, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1764, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 1765, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1766, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1767, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1768, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1775, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1776, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1777, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1778, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1781, col 1, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1782, col 15, Class properties must be methods. Expected '(' but instead saw '='.
node_modules/chart.js/dist/chart.js: line 1815, col 27, 'function closure expressions' is only available in Mozilla JavaScript extensions (use moz option).
node_modules/chart.js/dist/chart.js: line 1815, col 28, Expected an identifier and instead saw '=>'.
node_modules/chart.js/dist/chart.js: line 1815, col 35, Class properties must be methods. Expected '(' but instead saw '!=='.
node_modules/chart.js/dist/chart.js: line 1816, col 26, 'function closure expressions' is only available in Mozilla JavaScript extensions (use moz option).
node_modules/chart.js/dist/chart.js: line 1816, col 27, Expected an identifier and instead saw '=>'.
node_modules/chart.js/dist/chart.js: line 1816, col 34, Duplicate class method 'name'.
node_modules/chart.js/dist/chart.js: line 1816, col 34, Class properties must be methods. Expected '(' but instead saw '!=='.
node_modules/chart.js/dist/chart.js: line 1816, col 68, Expected an identifier and instead saw 'borderDash'.
node_modules/chart.js/dist/chart.js: line 1816, col 80, 'function closure expressions' is only available in Mozilla JavaScript extensions (use moz option).
node_modules/chart.js/dist/chart.js: line 1816, col 82, Expected an identifier and instead saw '&&'.
node_modules/chart.js/dist/chart.js: line 1816, col 85, Expected an operator and instead saw '!'.
node_modules/chart.js/dist/chart.js: line 1816, col 90, Duplicate class method 'name'.
node_modules/chart.js/dist/chart.js: line 1816, col 90, Class properties must be methods. Expected '(' but instead saw '.'.
node_modules/chart.js/dist/chart.js: line 1816, col 102, Expected an identifier and instead saw 'hoverBorderDash'.
node_modules/chart.js/dist/chart.js: line 1816, col 119, 'function closure expressions' is only available in Mozilla JavaScript extensions (use moz option).
node_modules/chart.js/dist/chart.js: line 1817, col 5, Expected an identifier and instead saw '}'.
node_modules/chart.js/dist/chart.js: line 1817, col 6, Unnecessary semicolon.
node_modules/chart.js/dist/chart.js: line 1818, col 19, Class properties must be methods. Expected '(' but instead saw '='.
node_modules/chart.js/dist/chart.js: line 1819, col 20, Class properties must be methods. Expected '(' but instead saw ':'.
node_modules/chart.js/dist/chart.js: line 1824, col 25, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1826, col 29, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1826, col 29, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1827, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.js: line 1828, col 33, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1829, col 33, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.js: line 1844, col 18, Expected an identifier and instead saw ','.
node_modules/chart.js/dist/chart.js: line 1844, col 18, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.js: line 1844, col 19, Missing semicolon.
node_modules/chart.js/dist/chart.js: line 1845, col 48, Missing semicolon.
node_modules/chart.js/dist/chart.js: line 1848, col 17, Unrecoverable syntax error. (16% scanned).

node_modules/chart.js/dist/chart.umd.js: line 7, col 198, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 199, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3735, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 30, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 984, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 1200, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 1319, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 4821, A leading decimal point can be confused with a dot: '.0031308'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 4858, A leading decimal point can be confused with a dot: '.055'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 4874, A leading decimal point can be confused with a dot: '.04045'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 4899, A leading decimal point can be confused with a dot: '.055'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6548, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6631, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6654, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6677, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7114, A leading decimal point can be confused with a dot: '.3'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7122, A leading decimal point can be confused with a dot: '.59'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7130, A leading decimal point can be confused with a dot: '.11'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7788, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7799, A leading decimal point can be confused with a dot: '.1'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 8803, A leading decimal point can be confused with a dot: '.8'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 16129, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 16971, A leading decimal point can be confused with a dot: '.516'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18234, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 25735, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 25741, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 25749, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 25838, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 25844, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 25853, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 25950, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 25956, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 25968, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26068, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26074, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26087, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26186, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26320, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26323, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26349, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26481, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26488, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26512, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26573, A leading decimal point can be confused with a dot: '.075'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26576, A leading decimal point can be confused with a dot: '.3'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26613, A leading decimal point can be confused with a dot: '.075'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26616, A leading decimal point can be confused with a dot: '.3'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26651, A leading decimal point can be confused with a dot: '.1125'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26671, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26674, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26687, A leading decimal point can be confused with a dot: '.45'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26691, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26694, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26709, A leading decimal point can be confused with a dot: '.45'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26870, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26901, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26904, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 27062, A leading decimal point can be confused with a dot: '.75'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 27092, A leading decimal point can be confused with a dot: '.9375'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 27117, A leading decimal point can be confused with a dot: '.984375'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 27142, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 27145, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 27169, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 27196, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 27328, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 45193, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 67134, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 72526, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105355, A leading decimal point can be confused with a dot: '.33'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 112335, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 113235, A leading decimal point can be confused with a dot: '.8'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 113252, A leading decimal point can be confused with a dot: '.9'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 119632, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 126348, A leading decimal point can be confused with a dot: '.001'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 134914, A leading decimal point can be confused with a dot: '.33'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 137378, A leading decimal point can be confused with a dot: '.1'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 137948, A leading decimal point can be confused with a dot: '.001'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 137954, A leading decimal point can be confused with a dot: '.75'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 138479, A leading decimal point can be confused with a dot: '.05'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 141067, A leading decimal point can be confused with a dot: '.001'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 155284, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 155288, A leading decimal point can be confused with a dot: '.25'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 159200, A leading decimal point can be confused with a dot: '.5'.
node_modules/chart.js/dist/chart.umd.js: line 7, col 261, The '__proto__' property is deprecated.
node_modules/chart.js/dist/chart.umd.js: line 7, col 289, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 317, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 341, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 365, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 391, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 414, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 439, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 457, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 467, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 471, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 486, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 492, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 525, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 584, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 680, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 765, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 841, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 873, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 911, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 912, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 924, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 992, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 1123, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 1144, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 1331, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 1348, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 1512, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 1560, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 1616, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 1664, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 1673, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 1749, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 1786, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 1834, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 1835, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 1854, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 1902, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 1930, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 1940, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 1982, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2009, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2049, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 2058, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 2099, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 2134, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2225, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 2226, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 2227, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2240, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 2247, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 2256, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 2277, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2303, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2316, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2324, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2386, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 2396, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 2413, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2445, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2466, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 2473, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2481, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2512, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 2521, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 2522, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 2539, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 2597, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 2598, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2607, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 2623, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 2652, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 2688, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2696, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2731, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 2813, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 2814, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 2962, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 2977, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 3018, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 3095, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3110, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 3136, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 3188, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3230, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 3246, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3301, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3318, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 3361, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3380, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 3485, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3486, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3517, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3548, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3579, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 3626, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3637, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3654, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 3701, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 3766, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3840, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3874, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3904, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 3925, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 4027, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 4078, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 4117, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 4137, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 4189, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 4216, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 4226, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 4281, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 4300, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 4301, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 4318, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 4331, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 4334, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 4382, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 4385, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 4407, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 4419, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 4453, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 4555, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 4556, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 4768, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 4771, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 4858, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 4864, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 4870, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 4932, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 4965, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 4969, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 4970, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 4975, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 4978, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 4981, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 4982, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 5000, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 5032, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 5115, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 5129, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 5150, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 5151, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 5167, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 5226, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 5227, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 5285, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 5333, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 5363, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 5399, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 5419, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 5420, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 5423, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 5424, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 5425, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 5443, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 5465, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 5535, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 5536, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 5537, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 5547, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 5604, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 5652, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 5722, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 5739, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 5765, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 5765, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 5801, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 6026, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 6027, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 6051, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 6067, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 6067, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 6190, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 6288, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 6289, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 6348, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 7, col 6389, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 6390, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 6408, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 6456, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 6535, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 6611, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 6678, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 6679, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 6682, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 6683, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 6693, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 6706, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 6740, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 6782, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 6798, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 6940, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7061, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7067, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7112, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7113, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7127, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 7148, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 7258, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7311, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7363, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 7367, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7368, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7415, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7425, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 7520, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 7, col 7566, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7567, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7606, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 7672, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7681, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 7739, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 7755, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 7, col 7849, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7850, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7890, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 7, col 7903, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 32, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 33, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 119, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 161, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 206, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 248, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 249, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 364, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 391, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 406, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 436, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 480, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 566, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 597, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 598, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 737, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 769, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 781, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 843, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 863, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 875, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 886, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 947, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 967, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 986, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 1055, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 1065, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 1081, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 1163, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 1297, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 1333, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 1414, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 1453, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 1490, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 1506, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 1525, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 1587, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 1589, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 1688, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 1745, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 1790, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 1791, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 4324, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 4365, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 4412, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 4508, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 4561, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 4562, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 4571, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 4599, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 4601, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 4685, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 4686, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 4798, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 4808, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 4863, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 4937, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 5033, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 5034, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 5086, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 5264, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 5316, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 5335, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 5370, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 5412, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 5554, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 5565, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 5566, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 5618, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 5635, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 5978, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 5979, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6010, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6066, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6093, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6149, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 6192, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 6230, Unreachable 'var' after 'return'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6235, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6287, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6344, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 6402, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 6441, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 6466, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6485, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6501, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 6526, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 6532, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 6707, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6708, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6720, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6775, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 6938, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6965, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 6997, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7036, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7076, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7089, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 7161, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7201, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7211, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 7276, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7317, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7358, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7400, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7445, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7538, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7539, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7558, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7601, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 7687, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7696, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7736, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7812, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7813, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 7910, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 7923, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 7975, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 8003, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 8073, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 8089, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 8090, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 8108, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 8122, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 8156, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 8190, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 8215, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 8335, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 8449, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 8459, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 8464, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 8465, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 8466, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 8666, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 8668, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 8706, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 8843, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 8869, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 8953, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 8978, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 9006, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 9053, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 9062, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 9133, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 9134, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 9314, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 9608, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 9659, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 9700, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 10027, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 10028, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 10057, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 10082, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 10114, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 10146, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 10162, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 10229, 'computed property names' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 10258, 'computed property names' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 10280, Missing property name.
node_modules/chart.js/dist/chart.umd.js: line 13, col 10283, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 10346, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 10351, Missing property name.
node_modules/chart.js/dist/chart.umd.js: line 13, col 10364, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 10368, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 10390, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 10401, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 10431, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 10465, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 10758, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 11211, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 11220, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 11221, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 11307, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 11502, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 11531, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 12193, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 12285, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 12420, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 12472, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 12496, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 12497, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 12577, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 12593, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 12672, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 12692, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 12794, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 12795, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 12805, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 12909, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 12910, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 12970, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 12998, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13015, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13061, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 13117, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 13118, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13133, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 13210, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13210, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13333, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13364, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13402, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13427, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13466, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 13473, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13547, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 13548, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 13570, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 13617, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13617, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13759, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 13760, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13770, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 13813, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13936, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13971, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 13991, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 14197, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 14198, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 14224, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 14236, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 14290, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 14299, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 14299, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 14355, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 14437, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 14443, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 14579, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 14691, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 14711, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 14829, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 14831, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 14918, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 14948, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 15109, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 15110, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 15130, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 15143, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 15180, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 15270, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 15271, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 15279, Value of 't' may be overwritten in IE 8 and earlier.
node_modules/chart.js/dist/chart.umd.js: line 13, col 15290, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 15311, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 15382, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 15509, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 15533, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 15608, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 15630, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 15775, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 15777, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 15785, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 15802, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 15930, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 15931, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 15965, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 16043, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 16052, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 16072, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 16163, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 16277, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 16278, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 16316, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 16340, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 16360, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 16405, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 16758, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 16939, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 17180, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 17255, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 17262, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 17267, Expected a 'break' statement before 'case'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 17446, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 17473, Expected a 'break' statement before 'case'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 17636, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 17962, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18053, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18134, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18162, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18198, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18199, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18298, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18397, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18398, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18425, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18497, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 18547, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18548, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18566, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18604, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18623, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18764, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 18821, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 19102, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 19103, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 19122, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 19216, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 19217, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 19241, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 19246, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 19303, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 19568, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 19569, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 19823, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 19836, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 19854, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 19854, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 20227, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 20228, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 20244, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 20250, Regular parameters should not come after default parameters.
node_modules/chart.js/dist/chart.umd.js: line 13, col 20252, Regular parameters should not come after default parameters.
node_modules/chart.js/dist/chart.umd.js: line 13, col 20255, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 20258, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 20268, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 20313, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 20315, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 20324, 'computed property names' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 20427, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 20435, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 20488, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 20546, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 20558, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 20579, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 20589, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 20597, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 20660, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 20702, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 20770, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 20810, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 20840, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 20851, Missing property name.
node_modules/chart.js/dist/chart.umd.js: line 13, col 20859, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 20932, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 20935, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 20957, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 21023, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 21060, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 21084, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 21150, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 21192, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 21204, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 21223, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 21223, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 21279, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 21336, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 21336, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 21479, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 21538, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 21548, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 21558, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 21597, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 21597, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 21718, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 21749, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 21768, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 21776, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 21782, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 21827, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 21837, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 21859, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 21890, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 21900, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 21940, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 22076, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 22113, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 22142, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 22174, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 22202, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 22218, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 22249, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 22249, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 22394, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 22419, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 22424, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 22425, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 22438, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 22459, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 22618, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 22645, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 22685, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 22686, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 22699, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 22702, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 22771, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 22779, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 22785, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 22816, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 22880, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 22889, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 22926, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 22935, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 22957, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23004, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 23009, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 23021, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 23034, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23152, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 23171, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23210, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 23212, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23260, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 23271, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 23327, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 23349, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23357, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23378, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23413, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 23430, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23477, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23489, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 23497, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23505, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23514, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23522, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23549, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 23601, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 23616, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 23638, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23638, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23655, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23668, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/chart.js/dist/chart.umd.js: line 13, col 23697, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23767, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 23777, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 23778, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23816, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 23852, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 23891, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23945, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 23997, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 23999, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 24114, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 24130, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 24136, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 24191, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 24259, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 24303, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 24362, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 24380, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 24397, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 24425, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 24605, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 24606, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 24629, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 24635, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 24660, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 24684, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 24736, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 24775, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 24792, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 24832, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 24849, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 24868, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 24869, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 24877, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 24878, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 24930, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 24954, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 24995, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 25059, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 25243, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 25244, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 25278, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 25514, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 25515, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 25520, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 25521, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 25522, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 25532, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 25556, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 25611, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 25666, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 25682, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 25701, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 25727, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 25777, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 25799, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 25830, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 25882, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 25906, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 25942, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 25999, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 26025, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 26060, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 26119, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 26150, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 26181, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 26217, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 26261, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 26306, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 26390, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 26434, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 26473, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 26554, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 26594, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 26618, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 26638, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 26710, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26712, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 26726, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 26764, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26766, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 26781, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 26825, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26827, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 26844, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 26938, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 26954, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 26980, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 26997, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 27117, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 27136, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 27262, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 27373, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 27395, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 27521, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 27522, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 27662, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 27776, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 27787, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 27788, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 27798, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 27823, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 27872, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 27891, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 27899, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 27908, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 27916, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 27943, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 28011, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 28089, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 28105, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 28174, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 28208, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 28213, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 28273, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 28275, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 28385, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 28387, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 28547, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 28569, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 28767, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 28787, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 28787, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 28829, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 28887, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 28945, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 28998, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 29008, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 29023, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 29036, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 29090, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 29112, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 29119, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 29130, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 29134, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 29159, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 29173, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 29195, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 29200, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 29218, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 29399, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 29400, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 29507, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 29508, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 29600, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 29618, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 29622, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 29634, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 29729, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 29765, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 29765, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 29809, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 29849, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 29897, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 29897, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 29930, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 29972, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 29979, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 30067, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 30078, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 30079, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 30135, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 30149, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 30171, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 30180, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 30210, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 30242, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 30427, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 30498, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 30516, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 30544, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 30568, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 30613, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 30617, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 30618, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 30627, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 30645, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 30709, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 30726, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 30761, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 30903, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 30917, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 30996, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 31018, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 31055, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 31179, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 31180, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 31234, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 31285, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 31351, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 31396, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 31454, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 31499, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 31637, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 31638, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 31644, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 31652, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 31672, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 31711, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 31863, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 31864, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 31888, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 31889, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 31898, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 31910, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 32145, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 32178, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 32259, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 32309, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 32341, The '__proto__' property is deprecated.
node_modules/chart.js/dist/chart.umd.js: line 13, col 32796, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 32797, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 33649, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 34397, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 34397, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 34499, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 34573, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 34639, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 34694, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 34723, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 34747, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 34799, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 34827, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 34827, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 34853, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 34885, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 34903, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 34931, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 34932, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 34958, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 35127, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 35128, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 35136, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 35162, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 35171, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 35191, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 35262, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 35361, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 35362, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 35367, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 35431, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 35476, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 35545, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 35657, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 35658, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 35663, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 35763, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 35805, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 35805, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 35875, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 35956, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 35957, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 35962, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 35975, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 35999, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 36042, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 36074, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 36161, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 36162, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 36176, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 36220, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 36235, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 36400, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 36403, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 36493, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 36494, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 36503, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 36505, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 36522, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 36578, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 36642, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 36704, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 36772, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 36781, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 36797, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 36852, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 36869, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 36957, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 36969, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 37014, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 37051, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 37127, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 37140, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 37176, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 37218, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 37255, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 37259, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 37341, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 37344, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 37362, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 37382, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 37397, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 37405, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 37411, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 37411, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 37480, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 37556, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 37557, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 37566, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 37570, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 37606, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 37651, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 37651, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 37822, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 37823, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 37832, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 37900, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 38046, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 38047, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 38069, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 38069, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 38136, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 38138, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 38259, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 38263, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 38297, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 38299, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 38491, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 38509, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 38544, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 38603, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 38630, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 38635, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 38681, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 38703, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 38714, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 38831, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 38833, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 38833, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 38909, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 38910, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 38935, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39020, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39021, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39043, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 39061, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 39061, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 39080, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 39088, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 39094, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 39195, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 39362, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39368, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39374, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 39539, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39544, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39556, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39557, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39566, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 39720, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 39737, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39740, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39756, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39757, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39759, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 39774, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 39838, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39839, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39841, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 39913, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39919, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 39921, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 39950, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 40050, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 40070, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 40081, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 40138, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 40287, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 40297, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 40318, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 40629, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 40680, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 40733, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 40734, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 40738, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 40760, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 40778, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 40980, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 41135, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 41170, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 41216, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 41267, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 41268, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 41448, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 41451, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 41542, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 41543, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 41545, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 41546, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 41549, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 41605, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 41689, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 41808, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 41831, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 41850, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 41936, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 41975, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 41977, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 42210, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 42229, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 42324, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42325, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42347, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 42355, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 42392, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42412, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 42454, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 42457, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 42470, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 42478, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 42532, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42539, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42540, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42598, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42618, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 42660, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 42663, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 42676, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 42684, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 42738, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42745, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42746, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42804, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42805, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 42818, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42822, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 42845, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 42907, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 42944, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42945, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42948, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42949, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 42969, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 43010, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 43026, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 43030, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 43078, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43079, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43113, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 43116, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 43193, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43194, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43288, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43289, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43297, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43421, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43422, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43425, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43426, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43446, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 43470, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 43503, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 43529, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 43619, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43625, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43626, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43683, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43684, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43694, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 43695, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 43735, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 43817, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 44054, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 44098, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 44099, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 44161, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 44207, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 44208, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 44223, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 44242, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 44278, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 44329, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 44332, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 44389, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 44390, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 44394, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 44446, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 44464, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 44499, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 44554, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 44644, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 44670, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 44784, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 44785, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 44838, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 44881, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 44896, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 44937, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 45038, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 45070, The '__proto__' property is deprecated.
node_modules/chart.js/dist/chart.umd.js: line 13, col 45145, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 45186, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 45198, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 45211, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 45292, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 45307, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 45321, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 45351, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 45388, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 45692, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 45693, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 45722, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 45771, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 45995, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 45996, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 46076, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 46077, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 46086, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 46175, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 46393, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 46394, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 46402, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 46470, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 46495, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 46498, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 46510, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 46557, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 46589, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 46591, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 46652, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 46672, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 46673, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 46703, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 46796, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 46799, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 46828, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 46843, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 46851, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 46913, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 46942, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 46943, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 46946, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 46949, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 46971, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 47018, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 47136, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 47146, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 47168, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 47236, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 47268, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 47292, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 47338, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 47339, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 47361, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 47395, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 47410, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 47415, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 47424, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 47448, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 47544, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 47577, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 47645, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 47683, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 47684, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 47697, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 47708, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 47773, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 47784, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 47839, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 47840, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 47849, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 47922, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48007, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 48026, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48134, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 48152, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48193, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48255, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 48275, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 48280, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48315, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48409, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 48460, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 48461, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 48470, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 48489, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48556, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 48576, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48622, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 48648, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48656, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48699, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48751, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 48763, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 48781, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48781, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48839, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48912, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 48948, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 48968, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48978, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 48995, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 49007, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 49125, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 49171, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 49190, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 49238, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 49263, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 49281, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 49359, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 49367, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 49373, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 49540, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 49541, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 49544, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 49554, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 49587, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 49614, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 49638, Class properties must be methods. Expected '(' but instead saw '='.
node_modules/chart.js/dist/chart.umd.js: line 13, col 49640, Expected '(' and instead saw '}'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 49641, Expected an identifier and instead saw ';'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 49667, Class properties must be methods. Expected '(' but instead saw '='.
node_modules/chart.js/dist/chart.umd.js: line 13, col 50122, 'new.target' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 50173, 'new.target' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 50213, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 50214, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 50228, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 50568, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 50569, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 50633, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 50634, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 50648, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 50716, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 51059, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51060, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51117, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51172, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51217, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51236, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 51298, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51328, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51340, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 51413, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51414, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51428, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 51520, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 51565, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 51625, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51635, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51672, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 51714, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51715, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51783, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51784, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51800, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 51888, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51906, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51907, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 51933, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 51978, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 52005, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 52160, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 52161, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 52174, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 52385, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 52386, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 52398, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 52398, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 52431, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 52465, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 52533, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 52579, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 52696, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 52705, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 52791, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 52804, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 52817, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 52818, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 52847, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 52847, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 52931, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 52973, 'computed property names' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 52996, 'computed property names' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 53015, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 53025, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 53050, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 53050, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 53092, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 53178, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 53188, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 53214, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 53214, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 53240, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 53302, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 53392, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 53402, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 53450, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 53500, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 53519, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 53653, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 53685, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 53703, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 53724, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 53851, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 53852, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 53868, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 53976, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 54111, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 54138, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 54138, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 54274, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 54279, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 54307, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 54354, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 54495, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 54504, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 54527, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 54565, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 54631, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 54641, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 54667, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 54688, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 54850, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 54862, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 54933, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 55047, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 55054, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 55095, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 55111, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 55194, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 55237, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 55238, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 55257, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 55429, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 55489, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 55546, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 55547, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 55585, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 55600, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 55748, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 55767, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 55793, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 55840, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 56021, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 56110, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 56111, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 56255, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 56334, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 56370, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 56467, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 56562, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 56589, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 56600, Regular parameters should not come after default parameters.
node_modules/chart.js/dist/chart.umd.js: line 13, col 56603, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 56717, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 56790, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 56924, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 57015, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 57042, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 57086, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 57124, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 57133, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 57159, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 57314, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 57315, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 57398, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 57501, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 57569, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 57593, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 57793, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 57881, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 57882, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 57965, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 57966, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 57997, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 58106, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 58162, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 58215, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 58243, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 58314, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 58315, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 58340, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 58411, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 58412, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 58432, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 58479, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 58479, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 58491, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 58540, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 58668, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 58669, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 58691, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 58696, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 58736, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 58742, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 58751, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 58803, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 58840, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 58936, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 58937, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 58984, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 59027, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 59075, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59076, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59095, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59150, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 59150, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 59177, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59219, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 59225, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59240, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 59330, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59408, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59459, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59516, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59518, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 59582, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59583, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59651, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59653, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 59677, Class properties must be methods. Expected '(' but instead saw '='.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59679, Expected '(' and instead saw '}'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59680, Expected an identifier and instead saw ';'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59701, Class properties must be methods. Expected '(' but instead saw '='.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59762, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 59762, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 59819, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59858, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59873, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 59920, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 59950, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 59994, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 59999, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 60018, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 60056, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 60168, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 60236, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 60247, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 60302, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 60312, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 60384, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 60472, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 60473, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 60488, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 60512, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 60532, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 60549, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 60632, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 60677, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 60694, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 60724, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 60752, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 60773, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 60790, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 60798, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 60944, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 60963, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 60987, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 61037, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 61132, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 61206, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 61207, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 61208, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 61223, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 61269, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 61306, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 61341, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 61396, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 61416, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 61494, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 61655, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 61704, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 61745, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 61837, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 61857, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 61915, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 61963, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 61964, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 62884, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 62885, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 63110, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 63111, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 63131, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 63148, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 63148, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 63402, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 63416, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 63421, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 63511, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 63554, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 63665, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 63733, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 63858, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 63887, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 63900, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 64007, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 64023, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 64116, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 64171, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 64172, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 64223, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 64238, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 64238, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 64898, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 64900, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 65327, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 65328, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 65341, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 65559, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 65572, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 65621, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 65686, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 65924, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 65925, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 65988, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 66073, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 66074, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 66129, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 66205, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 66260, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 66282, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 66335, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 66416, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 66439, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 66466, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 66549, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 66550, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 66629, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 66712, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 66738, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 66850, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 66966, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 67385, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 67386, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 67467, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 67529, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 67536, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 67562, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 67659, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 67806, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 67806, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 67941, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 68027, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 68033, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 68116, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 68148, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 68360, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 68361, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 68389, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 68389, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 68524, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 68621, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 68897, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 68898, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 68904, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 69032, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 69033, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 69333, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 69334, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 69377, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 69393, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 69393, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 69469, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 69511, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 69537, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 69671, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 69706, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 69724, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 69754, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 69792, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 69919, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 69920, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 69929, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 69956, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 69956, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 70028, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 70293, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 70294, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 70326, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 70378, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 70379, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 70401, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 70404, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 70430, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 70493, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 70497, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 70502, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 70504, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 70543, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 70652, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 70681, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 70714, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 70755, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 70837, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 70887, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 70889, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 70979, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 71002, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 71076, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 71141, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 71157, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 71157, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 71211, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 71226, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 71270, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 71371, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 71396, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 71488, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 71501, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 71753, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 71767, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 71856, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 71882, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 71927, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 72125, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 72127, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 72224, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 72307, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 72383, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 72466, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 72542, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 72620, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 72650, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 72651, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 72723, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 72801, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 72827, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 72832, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 72833, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 72915, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 73333, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 73334, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 73383, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 73406, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 73438, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 73496, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 73599, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 73698, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 73765, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 73787, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 73845, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 73846, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 73868, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 73926, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 73927, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 73998, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 74075, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 74108, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 74179, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 74254, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 74298, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 74352, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 74354, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 74423, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 74429, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 74575, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 74577, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 74639, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 75050, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 75109, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 75187, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 75284, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 75285, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 75358, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 75509, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 75518, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 75545, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 75545, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 75641, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 75747, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 75775, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 75775, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 75889, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 76318, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 76375, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 76589, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 76607, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 76607, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 76741, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 76742, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 76767, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 76836, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 76867, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 76941, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 76950, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 76963, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 77075, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 77083, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 77097, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 77311, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 77312, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 77355, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 77580, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 77581, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 77596, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 77596, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 77717, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 77788, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78048, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 78049, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 78102, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78155, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 78157, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78191, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78199, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78205, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78264, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 78272, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 78273, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 78286, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78286, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78364, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78409, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78529, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 78533, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78533, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78598, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78598, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78644, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78670, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78684, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78744, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78807, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 78866, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 78881, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 78944, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79026, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79027, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79075, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79205, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79326, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79327, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79338, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 79504, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 79561, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79562, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79576, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 79597, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79611, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 79632, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79648, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 79663, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79666, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79694, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 79770, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 79806, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 79858, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79859, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79868, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79961, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 79975, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 80078, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 80080, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 80178, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 80179, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 80268, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 80281, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 80314, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 80363, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 80389, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 80391, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 80527, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 80664, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 80667, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 80783, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 80786, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 80805, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 80849, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 80850, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 80906, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 80934, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 80949, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 81067, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81068, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81070, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 81306, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81307, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81312, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 81342, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81350, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 81382, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81398, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 81445, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81458, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 81502, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81514, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 81557, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81568, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 81610, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81677, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81735, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81790, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81842, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81861, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 81910, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81926, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 81972, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 81987, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 82032, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 82046, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 82090, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 82105, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 82121, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 82124, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 82229, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 82232, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 82288, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 82290, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 82291, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 82294, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 82308, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 82370, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 82371, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 82399, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 82443, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 82502, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 82522, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 82535, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 82628, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 82641, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 82644, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 82680, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 82793, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 82795, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 82974, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 83004, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83012, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83018, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83038, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 83091, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 83100, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 83176, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 83177, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 83228, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83311, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 83336, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83407, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83459, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83509, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83535, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83559, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83612, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 83613, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 83642, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 83653, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 83673, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83702, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83734, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83742, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83748, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83848, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 83849, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 83858, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 83871, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 83895, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 83942, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 83956, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 83968, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 84059, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 84060, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 84089, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 84096, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 84112, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 84126, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 84151, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 84312, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 84330, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 84429, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 84482, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 84497, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 84525, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 84533, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 84539, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 84682, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 84705, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 84789, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 84844, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 84862, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 84978, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 84981, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 85024, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 85103, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 85158, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 85215, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 85248, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 85330, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 85339, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 85413, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 85485, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 85515, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 85518, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 85614, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 85617, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 85639, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 85707, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 85791, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 85792, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 85795, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 85824, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 85827, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 85873, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 85878, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 85894, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 85969, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 85970, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86049, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86050, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 86063, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86074, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86095, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 86152, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86153, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 86168, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 86172, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 86206, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86207, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86209, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 86297, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86323, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86351, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86351, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86354, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86398, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86434, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86466, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86502, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86538, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86580, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86618, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86660, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86670, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 86713, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86714, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86779, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86780, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86815, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 86820, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 86842, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 86884, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 86909, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 86914, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 86947, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 86968, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 86990, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 87030, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87044, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87049, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87079, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87095, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87117, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 87137, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 87160, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87189, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87194, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87209, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87244, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 87264, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 87289, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 87325, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 87342, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 87366, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 87366, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 87446, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 87458, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 87474, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87502, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87529, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87555, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87589, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87616, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87629, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 87630, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 87634, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 87728, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 87749, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 87749, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 87831, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 87859, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 87866, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 87886, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 87942, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 87967, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 87967, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 88013, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 88021, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 88027, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 88099, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88108, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88176, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88181, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 88189, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 88212, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88233, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 88239, Regular parameters should not come after default parameters.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88242, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 88242, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 88318, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88339, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 88364, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88378, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88380, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 88397, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 88462, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 88511, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88512, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88521, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88522, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 88532, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 88577, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 88589, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 88717, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88794, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88795, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88811, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 88903, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88904, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 88920, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 88982, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 89108, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 89109, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 89125, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 89128, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 89176, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 89198, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 89219, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 89246, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 89254, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 89260, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 89280, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 89326, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 89327, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 89380, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 89381, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 89405, Class properties must be methods. Expected '(' but instead saw '='.
node_modules/chart.js/dist/chart.umd.js: line 13, col 89526, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 89539, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 89548, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 89549, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 89568, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 89584, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 89593, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 89594, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 89612, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 89810, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 89911, Bad constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 89911, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 89941, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 89943, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 90427, Missing '()' invoking a constructor.
node_modules/chart.js/dist/chart.umd.js: line 13, col 90560, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 90830, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 90831, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 90850, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 90850, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 90971, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 91006, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 91037, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 91072, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 91109, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 91134, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 91320, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 91365, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 91398, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 91486, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 91487, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 91501, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 91911, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 91912, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 91966, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 91976, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 91979, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 92002, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 92077, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 92097, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 92142, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 92145, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 92292, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 92304, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 92307, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 92450, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 92452, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 92569, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 92570, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 92582, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 92595, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 92612, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 92613, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 92623, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 92673, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 92674, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 92676, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 92677, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 92696, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 92773, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 92803, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 92862, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 92920, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 92951, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 92951, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 93047, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 93066, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 93119, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 93120, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 93122, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 93123, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 93151, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 93183, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 93254, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 93267, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 93296, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 93608, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 93615, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 93642, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 93836, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 93837, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 93870, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 93914, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 93959, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 93967, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 94024, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 94025, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 94036, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 94067, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 94293, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 94363, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 94446, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 94458, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 94503, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 94503, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 94629, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 94630, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 94706, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 94718, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 94821, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 94823, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 94823, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 94939, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 94940, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 94973, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 94996, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 95052, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 95053, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 95076, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 95165, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 95247, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 95248, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 95272, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 95272, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 95341, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 95341, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 95372, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 95412, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 95439, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 95510, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 95547, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 95568, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 95590, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 95635, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 95699, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 95722, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 95765, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 95786, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 95890, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 95970, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 96048, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 96063, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 96064, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 96099, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 96111, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 96147, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 96148, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 96171, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 96247, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 96341, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 96485, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 96507, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 96578, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 96711, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 96712, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 96722, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 96872, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 96873, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 96881, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 96914, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 96914, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 97002, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 97006, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 97063, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 97124, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 97302, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 97329, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 97363, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 97399, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 97435, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 97436, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 97445, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 97515, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 97535, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 97604, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 97652, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 97741, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 97758, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 97815, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 97815, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 97941, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 98000, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 98063, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 98097, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 98141, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 98173, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 98304, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 98305, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 98367, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 98403, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 98466, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 98485, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 98532, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 98549, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 98750, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 98836, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 98911, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 98932, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 98977, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 99060, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 99119, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 99190, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 99241, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 99267, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 99471, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 99502, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 99503, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 99544, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 99585, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 99609, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 99699, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 99700, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 99709, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 99816, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 99863, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 99863, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 100076, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100077, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100092, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 100127, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 100132, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100235, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100236, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100254, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 100300, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 100338, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100339, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100349, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 100397, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100398, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100424, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 100434, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100514, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100516, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 100572, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 100610, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100611, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100619, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 100673, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100674, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100682, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 100714, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100715, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100717, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 100723, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 100732, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 100807, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100808, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100813, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 100891, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100892, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100926, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100927, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 100966, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 101013, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 101069, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 101116, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 101151, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 101152, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 101177, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 101202, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 101349, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 101460, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 101461, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 101506, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 101528, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 101562, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 101587, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 101591, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 101724, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 101802, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 101803, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 101864, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 101925, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 101951, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 101978, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 102011, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 102025, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 102037, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 102212, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 102213, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 102233, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 102311, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 102380, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 102430, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 102569, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 102590, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 102590, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 102731, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 102841, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 102843, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 102940, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103016, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 103094, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103134, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 103161, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103274, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103275, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 103332, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103340, Class properties must be methods. Expected '(' but instead saw ';'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103374, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103404, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103424, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103445, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103463, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103482, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103504, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103524, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103559, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 103611, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 103648, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 103661, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 103767, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 103776, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103797, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103809, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 103833, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 103842, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 103912, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103913, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 103971, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 104040, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 104050, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 104102, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 104176, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 104291, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 104292, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 104327, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 104349, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 104406, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 104499, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 104509, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 104573, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 104595, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 104617, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 104668, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 104740, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 104740, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 104798, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 104982, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105131, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105132, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105230, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105283, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105297, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 105359, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105360, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 105389, Class properties must be methods. Expected '(' but instead saw '='.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105839, Expected an identifier and instead saw 'borderDash'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105851, 'function closure expressions' is only available in Mozilla JavaScript extensions (use moz option).
node_modules/chart.js/dist/chart.umd.js: line 13, col 105852, Expected an identifier and instead saw '&&'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105854, Expected an operator and instead saw '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105856, Class properties must be methods. Expected '(' but instead saw '.'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105868, Expected an identifier and instead saw 'hoverBorderDash'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105885, 'function closure expressions' is only available in Mozilla JavaScript extensions (use moz option).
node_modules/chart.js/dist/chart.umd.js: line 13, col 105886, Expected an identifier and instead saw '}'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105887, Unnecessary semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105904, Class properties must be methods. Expected '(' but instead saw '='.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105917, Class properties must be methods. Expected '(' but instead saw ':'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 105963, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 106017, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 106017, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 106096, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 106100, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 106307, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106310, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106319, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106321, Expected an identifier and instead saw ','.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106321, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106322, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106336, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106390, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106391, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106393, Expected ')' to match '(' from line 7 and instead saw '}'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106394, Expected ')' and instead saw '}'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106394, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106412, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106413, Super call may only be used within class method bodies.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106538, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106539, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106552, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106564, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106565, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 106618, Confusing use of '!'.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106654, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 106665, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 106685, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 106685, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 106723, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 106735, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106775, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106791, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106826, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106846, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106883, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106905, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 106906, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 106923, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 107052, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 107175, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 107176, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 107213, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 107223, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 107224, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 107242, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 107475, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 107531, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 107588, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 107616, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 107696, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 107743, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chart.umd.js: line 13, col 107869, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 107870, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 107916, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 108281, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 108282, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 108302, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 108303, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 108526, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 108550, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 108551, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 108727, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 108791, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 108882, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 109133, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109134, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109152, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109153, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 109187, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 109221, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 109324, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109325, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109334, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109360, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109361, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 109433, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109453, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109454, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 109578, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109599, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109600, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 109608, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 109627, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 109749, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109765, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109919, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109929, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109945, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 109946, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 109958, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 109986, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 110070, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 110079, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 110103, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 110104, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 110116, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chart.umd.js: line 13, col 110190, Expected an assignment or function call and instead saw an expression.
node_modules/chart.js/dist/chart.umd.js: line 13, col 110200, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 110218, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 110277, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 110309, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 110378, Missing semicolon.
node_modules/chart.js/dist/chart.umd.js: line 13, col 110378, Unrecoverable syntax error. (86% scanned).

node_modules/chart.js/dist/chunks/helpers.segment.js: line 7, col 1, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 17, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 17, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 18, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 19, col 13, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 36, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 69, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 69, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 70, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 70, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 83, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 109, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 130, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 131, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 132, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 133, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 156, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 157, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 166, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 169, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 174, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 175, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 176, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 181, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 182, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 201, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 202, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 217, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 219, col 11, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 221, col 10, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 222, col 10, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 227, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 228, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 229, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 230, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 230, col 21, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 242, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 243, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 244, col 14, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 244, col 22, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 254, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 262, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 262, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 263, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 263, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 265, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 265, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 269, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 269, col 21, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 286, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 287, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 288, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 289, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 290, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 291, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 292, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 293, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 294, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 295, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 302, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 304, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 305, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 306, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 313, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 314, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 315, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 325, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 332, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 338, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 363, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 364, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 373, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 374, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 375, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 376, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 381, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 403, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 404, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 405, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 406, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 407, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 408, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 409, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 433, col 52, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 438, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 439, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 440, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 441, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 451, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 452, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 462, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 462, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 462, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 463, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 465, col 15, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 472, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 472, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 472, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 480, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 481, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 490, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 511, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 512, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 513, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 517, col 13, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 517, col 20, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 518, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 519, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 521, col 40, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 530, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 534, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 535, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 542, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 550, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 562, col 4, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 574, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 575, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 576, col 21, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 581, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 591, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 592, col 21, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 605, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 605, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 609, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 609, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 613, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 613, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 614, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 621, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 622, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 623, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 625, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 625, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 626, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 627, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 627, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 642, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 643, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 652, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 652, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 653, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 663, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 668, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 668, col 18, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 669, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 669, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 670, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 670, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 675, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 676, col 15, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 677, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 678, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 679, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 680, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 681, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 682, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 683, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 684, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 685, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 686, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 687, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 688, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 689, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 690, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 691, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 692, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 693, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 694, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 695, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 696, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 697, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 698, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 699, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 700, col 5, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 701, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 702, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 705, col 5, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 706, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 709, col 5, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 710, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 713, col 5, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 714, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 720, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 721, col 5, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 722, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 723, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 735, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 740, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 752, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 759, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 778, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 823, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 842, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 845, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 846, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 857, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 858, col 2, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 861, col 2, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 865, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 866, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 867, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 869, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 875, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 876, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 877, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 878, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 885, col 2, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 889, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 904, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 911, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 929, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 930, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 974, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 975, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 981, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 982, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 986, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 987, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 992, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 993, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 994, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1005, col 2, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1012, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1029, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1030, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1031, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1064, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1065, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1066, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1068, col 13, 'computed property names' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1072, col 13, 'computed property names' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1074, col 21, Missing property name.
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1075, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1076, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1082, col 21, Missing property name.
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1089, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1093, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1094, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1122, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1137, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1138, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1146, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1147, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1148, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1167, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1184, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1185, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1205, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1206, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1207, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1208, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1209, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1359, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1362, col 37, Confusing use of '!'.
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1402, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1403, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1404, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1405, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1406, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1407, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1417, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1424, col 53, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1425, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1428, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1429, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1458, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1458, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1477, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1478, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1490, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1504, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1504, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1506, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1507, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1508, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1509, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1509, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1509, col 110, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1509, col 128, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1510, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1510, col 21, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1552, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1566, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1570, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1575, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1578, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1579, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1597, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1598, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1626, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1626, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1627, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1628, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1628, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1647, col 47, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1649, col 4, Regular parameters should not come after default parameters.
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1649, col 16, Regular parameters should not come after default parameters.
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1649, col 36, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1649, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1650, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1654, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1655, col 9, 'computed property names' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1661, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1663, col 17, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1669, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1677, col 13, Missing property name.
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1678, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1683, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1688, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1693, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1698, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1703, col 13, Missing property name.
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1704, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1719, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1726, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1727, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1732, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1739, col 13, Missing property name.
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1740, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1745, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1753, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1758, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1763, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1768, col 13, Missing property name.
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1777, col 43, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1781, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1781, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1786, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1787, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1790, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1790, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1791, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1791, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1796, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1802, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1802, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1803, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1818, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1818, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1823, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1832, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1832, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1837, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1838, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1838, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1840, col 14, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1840, col 25, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1841, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1850, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1850, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1852, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1852, col 23, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1853, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1856, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1871, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1872, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1873, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1874, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1875, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1877, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1879, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1891, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1900, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1904, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1912, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1913, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1913, col 23, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1921, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1921, col 22, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1925, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1932, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1939, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1940, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1940, col 22, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1941, col 14, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1941, col 24, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1941, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1948, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1948, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1949, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1949, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1950, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1951, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1962, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1963, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1963, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1964, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1964, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1969, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1970, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1971, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1972, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1973, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1974, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1975, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1979, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1980, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1995, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1996, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1997, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 1998, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2019, col 48, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2020, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2021, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2022, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2023, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2024, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2031, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2032, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2035, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2036, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2040, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2041, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2050, col 52, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2051, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2052, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2053, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2054, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2056, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2057, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2066, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2079, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2080, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2102, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2105, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2110, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2140, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2150, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2162, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2162, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2166, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2173, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2175, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2176, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2183, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2183, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2189, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2190, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2191, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2191, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2192, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2193, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2198, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2204, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2205, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2206, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2218, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2218, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2219, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2220, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2221, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2222, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2223, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2223, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2224, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2225, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2226, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2226, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2237, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2239, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2244, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2245, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2246, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2247, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2255, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2256, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2261, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2261, col 18, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2264, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2265, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2266, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2267, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2268, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2269, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2269, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2271, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2272, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2285, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2291, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2292, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2301, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2302, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2303, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2306, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2311, col 31, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2312, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2327, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2328, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2330, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2354, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2355, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2378, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2382, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2386, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2387, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2388, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2389, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2390, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2394, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2396, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2399, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2402, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2408, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2411, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2416, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2418, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2421, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2422, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2425, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2428, col 9, 'concise methods' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2437, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2465, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2466, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2469, col 26, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2474, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2478, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2478, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2479, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2479, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2480, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2481, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2481, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2482, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2500, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2501, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2502, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2512, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2512, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2513, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2514, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2514, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2515, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2515, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2516, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2517, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2518, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2519, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2520, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2520, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2521, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2521, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2522, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2522, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2523, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2523, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2524, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2541, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2542, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2543, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2553, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2554, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2555, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2556, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2562, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2563, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2564, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2565, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2567, col 25, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2573, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2574, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2592, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2593, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2597, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2598, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2599, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2600, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2601, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2603, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2610, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2626, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2632, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2633, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2634, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2638, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2639, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2639, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2643, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2644, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2645, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2649, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2650, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2660, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2661, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2662, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2662, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2663, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2664, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2665, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2666, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2667, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2669, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2691, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2691, col 24, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2693, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2694, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2696, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2703, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2732, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2733, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/chart.js/dist/chunks/helpers.segment.js: line 2745, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/chart.js/dist/helpers.js: line 7, col 1, 'export' is only available in ES6 (use 'esversion: 6').
node_modules/chart.js/dist/helpers.js: line 8, col 1, 'import' is only available in ES6 (use 'esversion: 6').

node_modules/chart.js/helpers/helpers.js: line 1, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/decimal.js/decimal.js: line 352, col 13, Expected a conditional expression and instead saw an assignment.
node_modules/decimal.js/decimal.js: line 406, col 15, Confusing use of '!'.
node_modules/decimal.js/decimal.js: line 406, col 22, Confusing use of '!'.
node_modules/decimal.js/decimal.js: line 736, col 9, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/decimal.js/decimal.js: line 1651, col 31, Confusing use of '!'.
node_modules/decimal.js/decimal.js: line 1797, col 15, Confusing use of '!'.
node_modules/decimal.js/decimal.js: line 1797, col 22, Confusing use of '!'.
node_modules/decimal.js/decimal.js: line 1889, col 9, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/decimal.js/decimal.js: line 2112, col 9, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/decimal.js/decimal.js: line 2319, col 7, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/decimal.js/decimal.js: line 2951, col 10, Label 'out' on if statement.
node_modules/decimal.js/decimal.js: line 3019, col 9, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/decimal.js/decimal.js: line 3314, col 9, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/decimal.js/decimal.js: line 3606, col 11, Confusing use of '!'.
node_modules/decimal.js/decimal.js: line 3870, col 11, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/decimal.js/decimal.js: line 3991, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4002, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4014, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4027, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4039, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4051, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4063, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4075, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4105, col 13, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4106, col 13, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4108, col 12, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4109, col 12, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4114, col 15, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4118, col 17, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4123, col 27, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4123, col 47, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4128, col 17, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4133, col 7, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4134, col 7, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4135, col 11, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4136, col 17, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4137, col 7, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4138, col 7, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4141, col 11, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4156, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4167, col 29, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4180, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4217, col 35, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4219, col 69, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4224, col 36, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4230, col 13, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4235, col 11, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4242, col 12, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4254, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4266, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4449, col 84, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4468, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4480, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4491, col 29, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4506, col 15, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4511, col 15, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4515, col 22, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4547, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4562, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4574, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4586, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4597, col 21, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4608, col 21, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4621, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4634, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4647, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4662, col 15, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4665, col 29, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4670, col 10, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4765, col 29, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4765, col 47, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4781, col 13, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4794, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4806, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4818, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4831, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4847, col 15, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4853, col 24, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4853, col 40, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4865, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4877, col 16, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4888, col 29, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/decimal.js/decimal.js: line 4913, col 63, Invalid typeof value 'symbol'

node_modules/fraction.js/bigfraction.js: line 47, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 51, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 82, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 83, col 6, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 87, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 89, col 6, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 90, col 6, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 96, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 98, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 99, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 100, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 120, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 122, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 137, col 22, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 138, col 22, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 140, col 24, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 151, col 30, 'BigInt' is only available in ES11 (use 'esversion: 11').
node_modules/fraction.js/bigfraction.js: line 170, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 172, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 173, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 175, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 178, col 18, 'Exponentiation operator' is only available in ES7 (use 'esversion: 7').
node_modules/fraction.js/bigfraction.js: line 185, col 11, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 226, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 228, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 230, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 254, col 21, 'Exponentiation operator' is only available in ES7 (use 'esversion: 7').
node_modules/fraction.js/bigfraction.js: line 261, col 21, 'Exponentiation operator' is only available in ES7 (use 'esversion: 7').
node_modules/fraction.js/bigfraction.js: line 292, col 6, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 293, col 6, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 294, col 6, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 299, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 327, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 328, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 341, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 342, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 344, col 10, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 385, col 16, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 385, col 24, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 386, col 11, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 386, col 20, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 387, col 11, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 387, col 20, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 388, col 11, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 388, col 20, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 390, col 27, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 390, col 36, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 390, col 44, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 411, col 30, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 411, col 41, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 421, col 31, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 421, col 43, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 421, col 54, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 433, col 13, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 433, col 25, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 433, col 34, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 433, col 43, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 433, col 55, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 433, col 64, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 434, col 13, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 434, col 22, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 447, col 13, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 447, col 25, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 447, col 34, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 447, col 43, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 447, col 55, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 447, col 64, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 448, col 13, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 448, col 22, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 461, col 13, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 461, col 22, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 461, col 34, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 461, col 43, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 462, col 13, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 462, col 22, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 475, col 13, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 475, col 22, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 475, col 34, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 475, col 43, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 476, col 13, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 476, col 22, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 486, col 30, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 486, col 42, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 486, col 53, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 497, col 32, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 497, col 44, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 497, col 56, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 501, col 18, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 501, col 37, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 520, col 13, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 520, col 23, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 520, col 35, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 520, col 46, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 520, col 58, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 521, col 10, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 521, col 22, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 536, col 31, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 536, col 42, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 536, col 56, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 536, col 67, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 536, col 76, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 536, col 88, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 550, col 12, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 550, col 36, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 553, col 27, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 553, col 39, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 553, col 51, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 553, col 62, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 553, col 76, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 553, col 87, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 562, col 30, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 562, col 42, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 562, col 53, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 576, col 12, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 578, col 14, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 579, col 35, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 579, col 47, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 579, col 54, 'Exponentiation operator' is only available in ES7 (use 'esversion: 7').
node_modules/fraction.js/bigfraction.js: line 579, col 58, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 579, col 69, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 579, col 75, 'Exponentiation operator' is only available in ES7 (use 'esversion: 7').
node_modules/fraction.js/bigfraction.js: line 579, col 79, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 581, col 35, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 581, col 47, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 581, col 54, 'Exponentiation operator' is only available in ES7 (use 'esversion: 7').
node_modules/fraction.js/bigfraction.js: line 581, col 58, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 581, col 69, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 581, col 75, 'Exponentiation operator' is only available in ES7 (use 'esversion: 7').
node_modules/fraction.js/bigfraction.js: line 581, col 79, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 591, col 15, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 594, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 594, col 29, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 595, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 595, col 29, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 598, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 599, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 600, col 12, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 606, col 17, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 608, col 21, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 609, col 19, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 611, col 23, 'Exponentiation operator' is only available in ES7 (use 'esversion: 7').
node_modules/fraction.js/bigfraction.js: line 614, col 12, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 616, col 17, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 618, col 21, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 619, col 19, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 621, col 23, 'Exponentiation operator' is only available in ES7 (use 'esversion: 7').
node_modules/fraction.js/bigfraction.js: line 624, col 12, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 638, col 18, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 638, col 30, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 638, col 39, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 638, col 50, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 638, col 59, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 638, col 71, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 649, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 649, col 20, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 649, col 32, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 649, col 41, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 649, col 50, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 649, col 59, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 649, col 71, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 661, col 22, 'Exponentiation operator' is only available in ES7 (use 'esversion: 7').
node_modules/fraction.js/bigfraction.js: line 663, col 30, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 663, col 51, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 663, col 63, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 664, col 23, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 664, col 35, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 664, col 57, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 675, col 22, 'Exponentiation operator' is only available in ES7 (use 'esversion: 7').
node_modules/fraction.js/bigfraction.js: line 677, col 30, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 677, col 51, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 677, col 63, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 678, col 23, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 678, col 35, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 678, col 57, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 689, col 22, 'Exponentiation operator' is only available in ES7 (use 'esversion: 7').
node_modules/fraction.js/bigfraction.js: line 706, col 30, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 706, col 51, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 706, col 63, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 707, col 13, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 707, col 27, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 707, col 85, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 707, col 97, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 707, col 110, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 719, col 19, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 719, col 31, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 719, col 16, Confusing use of '!'.
node_modules/fraction.js/bigfraction.js: line 719, col 47, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 719, col 56, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 719, col 67, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 719, col 79, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 729, col 25, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 729, col 37, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 729, col 57, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 739, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 739, col 19, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 740, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 740, col 19, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 743, col 31, 'BigInt' is only available in ES11 (use 'esversion: 11').
node_modules/fraction.js/bigfraction.js: line 748, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 749, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 751, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 751, col 21, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 764, col 14, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 770, col 14, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 777, col 14, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 793, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 793, col 19, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 794, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 794, col 19, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 795, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 795, col 21, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 800, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 821, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 821, col 19, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 822, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 822, col 19, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 823, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 823, col 21, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 828, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 850, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 850, col 19, ['n'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 851, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 851, col 19, ['d'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 852, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 856, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 868, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 868, col 27, ['abs'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 869, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 869, col 27, ['toContinued'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 871, col 12, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 873, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 874, col 14, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/fraction.js/bigfraction.js: line 875, col 16, ['inverse'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 875, col 29, ['add'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 878, col 23, ['sub'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 879, col 19, ['mul'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 879, col 31, ['s'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 886, col 45, ['amd'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 893, col 13, ['Fraction'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 894, col 11, ['exports'] is better written in dot notation.
node_modules/fraction.js/bigfraction.js: line 896, col 9, ['Fraction'] is better written in dot notation.

node_modules/fraction.js/fraction.js: line 69, col 4, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 75, col 4, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 76, col 4, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 134, col 19, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 135, col 19, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 137, col 21, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 264, col 9, Expected a 'break' statement before 'default'.
node_modules/fraction.js/fraction.js: line 273, col 4, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 274, col 4, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 275, col 4, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 354, col 2, Unnecessary semicolon.
node_modules/fraction.js/fraction.js: line 363, col 1, 'export' is only available in ES6 (use 'esversion: 6').
node_modules/fraction.js/fraction.js: line 368, col 14, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 368, col 22, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 369, col 9, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 369, col 18, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 370, col 9, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 370, col 18, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 371, col 9, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 371, col 18, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 373, col 25, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 373, col 34, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 373, col 42, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 394, col 28, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 394, col 39, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 404, col 29, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 404, col 41, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 404, col 52, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 416, col 11, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 416, col 23, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 416, col 32, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 416, col 41, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 416, col 53, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 416, col 62, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 417, col 11, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 417, col 20, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 430, col 11, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 430, col 23, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 430, col 32, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 430, col 41, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 430, col 53, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 430, col 62, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 431, col 11, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 431, col 20, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 444, col 11, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 444, col 20, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 444, col 32, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 444, col 41, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 445, col 11, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 445, col 20, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 458, col 11, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 458, col 20, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 458, col 32, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 458, col 41, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 459, col 11, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 459, col 20, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 469, col 28, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 469, col 40, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 469, col 51, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 479, col 19, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 479, col 39, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 484, col 30, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 484, col 42, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 484, col 54, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 488, col 16, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 488, col 35, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 507, col 11, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 507, col 21, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 507, col 33, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 507, col 44, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 507, col 56, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 508, col 8, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 508, col 20, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 523, col 29, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 523, col 40, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 523, col 54, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 523, col 65, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 523, col 74, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 523, col 86, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 537, col 10, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 537, col 29, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 540, col 25, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 540, col 37, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 540, col 49, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 540, col 60, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 540, col 74, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 540, col 85, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 552, col 19, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 552, col 39, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 555, col 47, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 555, col 59, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 555, col 71, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 567, col 19, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 567, col 39, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 570, col 48, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 570, col 60, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 570, col 72, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 582, col 19, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 582, col 39, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 585, col 48, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 585, col 60, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 585, col 72, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 603, col 28, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 603, col 51, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 603, col 60, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 603, col 73, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 603, col 82, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 603, col 93, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 603, col 101, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 613, col 28, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 613, col 40, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 613, col 51, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 627, col 10, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 629, col 12, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 630, col 41, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 630, col 53, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 630, col 61, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 630, col 82, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 630, col 90, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 632, col 41, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 632, col 53, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 632, col 61, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 632, col 82, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 632, col 90, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 642, col 13, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 645, col 27, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 646, col 27, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 657, col 15, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 659, col 19, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 660, col 17, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 665, col 14, 'k' is already defined.
node_modules/fraction.js/fraction.js: line 667, col 15, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 669, col 19, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 670, col 17, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 675, col 10, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 689, col 16, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 689, col 28, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 689, col 37, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 689, col 48, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 689, col 57, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 689, col 69, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 700, col 18, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 700, col 30, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 700, col 39, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 700, col 48, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 700, col 57, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 700, col 69, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 706, col 19, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 706, col 39, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 712, col 23, ['abs'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 713, col 23, ['toContinued'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 719, col 14, ['inverse'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 719, col 27, ['add'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 722, col 21, ['sub'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 723, col 17, ['mul'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 723, col 29, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 737, col 17, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 737, col 29, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 737, col 14, Confusing use of '!'.
node_modules/fraction.js/fraction.js: line 737, col 45, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 737, col 54, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 737, col 65, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 737, col 77, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 747, col 16, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 747, col 28, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 747, col 40, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 758, col 17, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 759, col 17, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 760, col 13, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 789, col 17, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 790, col 17, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 791, col 13, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 821, col 17, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 822, col 17, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 846, col 17, ['n'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 847, col 17, ['d'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 858, col 19, ['s'] is better written in dot notation.
node_modules/fraction.js/fraction.js: line 876, col 16, 'i' is already defined.
node_modules/fraction.js/fraction.js: line 883, col 16, 'i' is already defined.

node_modules/fraction.js/fraction.min.js: line 16, col 36, A leading decimal point can be confused with a dot: '.001'.
node_modules/fraction.js/fraction.min.js: line 8, col 59, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 8, col 105, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 8, col 374, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 8, col 413, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 8, col 470, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 9, col 60, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 9, col 152, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 9, col 159, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 9, col 217, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 9, col 223, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 9, col 356, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 9, col 451, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 10, col 68, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 10, col 173, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 10, col 174, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 10, col 312, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 10, col 355, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 10, col 355, Expected a 'break' statement before 'default'.
node_modules/fraction.js/fraction.min.js: line 10, col 438, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 10, col 502, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 11, col 130, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 11, col 211, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 11, col 223, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 11, col 269, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 11, col 279, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 11, col 373, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 11, col 467, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 11, col 495, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 12, col 78, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 12, col 126, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 12, col 206, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 12, col 286, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 12, col 355, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 12, col 424, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 12, col 473, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 13, col 171, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 13, col 246, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 13, col 348, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 13, col 472, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 14, col 93, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 14, col 219, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 14, col 310, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 14, col 361, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 15, col 113, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 15, col 186, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 15, col 282, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 15, col 309, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 15, col 380, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 15, col 467, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 16, col 211, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 16, col 223, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 16, col 264, Confusing use of '!'.
node_modules/fraction.js/fraction.min.js: line 16, col 303, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 16, col 351, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 16, col 422, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 16, col 493, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 16, col 503, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 17, col 67, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 17, col 148, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 17, col 158, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 17, col 285, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 17, col 307, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 18, col 10, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 18, col 14, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 18, col 75, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 18, col 121, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 18, col 139, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 18, col 143, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 18, col 190, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 18, col 228, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 18, col 268, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 18, col 277, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 18, col 320, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 18, col 331, Missing semicolon.
node_modules/fraction.js/fraction.min.js: line 18, col 19, 'f' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 103, 'f' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 122, 'f' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 127, 'f' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 144, 'f' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 162, 'f' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 184, 'f' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 211, 'f' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 231, 'f' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 251, 'f' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 271, 'f' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 303, 'f' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 330, 'f' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 23, 'l' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 48, 'l' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 50, 'l' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 52, 'l' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 72, 'l' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 77, 'l' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 107, 'l' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 110, 'l' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 131, 'l' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 136, 'l' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 140, 'l' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 204, 'l' used out of scope.
node_modules/fraction.js/fraction.min.js: line 18, col 466, Expected an assignment or function call and instead saw an expression.
node_modules/fraction.js/fraction.min.js: line 18, col 467, Missing semicolon.

node_modules/hash.js/lib/hash/common.js: line 1, col 1, Use the function form of "use strict".
node_modules/hash.js/lib/hash/common.js: line 87, col 10, 't' used out of scope.
node_modules/hash.js/lib/hash/common.js: line 87, col 17, 't' used out of scope.
node_modules/hash.js/lib/hash/common.js: line 87, col 37, 't' used out of scope.
node_modules/hash.js/lib/hash/common.js: line 3, col 13, 'require' is not defined.
node_modules/hash.js/lib/hash/common.js: line 4, col 14, 'require' is not defined.
node_modules/hash.js/lib/hash/common.js: line 18, col 1, 'exports' is not defined.

node_modules/hash.js/lib/hash/hmac.js: line 1, col 1, Use the function form of "use strict".
node_modules/hash.js/lib/hash/hmac.js: line 3, col 13, 'require' is not defined.
node_modules/hash.js/lib/hash/hmac.js: line 4, col 14, 'require' is not defined.
node_modules/hash.js/lib/hash/hmac.js: line 17, col 1, 'module' is not defined.

node_modules/hash.js/lib/hash/ripemd.js: line 1, col 1, Use the function form of "use strict".
node_modules/hash.js/lib/hash/ripemd.js: line 62, col 3, 'T' used out of scope.
node_modules/hash.js/lib/hash/ripemd.js: line 67, col 15, 'T' used out of scope.
node_modules/hash.js/lib/hash/ripemd.js: line 3, col 13, 'require' is not defined.
node_modules/hash.js/lib/hash/ripemd.js: line 4, col 14, 'require' is not defined.
node_modules/hash.js/lib/hash/ripemd.js: line 22, col 1, 'exports' is not defined.

node_modules/hash.js/lib/hash/sha/1.js: line 1, col 1, Use the function form of "use strict".
node_modules/hash.js/lib/hash/sha/1.js: line 3, col 13, 'require' is not defined.
node_modules/hash.js/lib/hash/sha/1.js: line 4, col 14, 'require' is not defined.
node_modules/hash.js/lib/hash/sha/1.js: line 5, col 17, 'require' is not defined.
node_modules/hash.js/lib/hash/sha/1.js: line 30, col 1, 'module' is not defined.

node_modules/hash.js/lib/hash/sha/224.js: line 1, col 1, Use the function form of "use strict".
node_modules/hash.js/lib/hash/sha/224.js: line 3, col 13, 'require' is not defined.
node_modules/hash.js/lib/hash/sha/224.js: line 4, col 14, 'require' is not defined.
node_modules/hash.js/lib/hash/sha/224.js: line 16, col 1, 'module' is not defined.

node_modules/hash.js/lib/hash/sha/256.js: line 1, col 1, Use the function form of "use strict".
node_modules/hash.js/lib/hash/sha/256.js: line 3, col 13, 'require' is not defined.
node_modules/hash.js/lib/hash/sha/256.js: line 4, col 14, 'require' is not defined.
node_modules/hash.js/lib/hash/sha/256.js: line 5, col 17, 'require' is not defined.
node_modules/hash.js/lib/hash/sha/256.js: line 6, col 14, 'require' is not defined.
node_modules/hash.js/lib/hash/sha/256.js: line 52, col 1, 'module' is not defined.

node_modules/hash.js/lib/hash/sha/384.js: line 1, col 1, Use the function form of "use strict".
node_modules/hash.js/lib/hash/sha/384.js: line 3, col 13, 'require' is not defined.
node_modules/hash.js/lib/hash/sha/384.js: line 5, col 14, 'require' is not defined.
node_modules/hash.js/lib/hash/sha/384.js: line 23, col 1, 'module' is not defined.

node_modules/hash.js/lib/hash/sha/512.js: line 1, col 1, Use the function form of "use strict".
node_modules/hash.js/lib/hash/sha/512.js: line 3, col 13, 'require' is not defined.
node_modules/hash.js/lib/hash/sha/512.js: line 4, col 14, 'require' is not defined.
node_modules/hash.js/lib/hash/sha/512.js: line 5, col 14, 'require' is not defined.
node_modules/hash.js/lib/hash/sha/512.js: line 82, col 1, 'module' is not defined.

node_modules/hash.js/lib/hash/sha/common.js: line 1, col 1, Use the function form of "use strict".
node_modules/hash.js/lib/hash/sha/common.js: line 3, col 13, 'require' is not defined.
node_modules/hash.js/lib/hash/sha/common.js: line 14, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/sha/common.js: line 19, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/sha/common.js: line 24, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/sha/common.js: line 29, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/sha/common.js: line 34, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/sha/common.js: line 39, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/sha/common.js: line 44, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/sha/common.js: line 49, col 1, 'exports' is not defined.

node_modules/hash.js/lib/hash/sha.js: line 1, col 1, Use the function form of "use strict".
node_modules/hash.js/lib/hash/sha.js: line 3, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/sha.js: line 4, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/sha.js: line 5, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/sha.js: line 6, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/sha.js: line 7, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/sha.js: line 3, col 16, 'require' is not defined.
node_modules/hash.js/lib/hash/sha.js: line 4, col 18, 'require' is not defined.
node_modules/hash.js/lib/hash/sha.js: line 5, col 18, 'require' is not defined.
node_modules/hash.js/lib/hash/sha.js: line 6, col 18, 'require' is not defined.
node_modules/hash.js/lib/hash/sha.js: line 7, col 18, 'require' is not defined.

node_modules/hash.js/lib/hash/utils.js: line 1, col 1, Use the function form of "use strict".
node_modules/hash.js/lib/hash/utils.js: line 54, col 12, 'i' used out of scope.
node_modules/hash.js/lib/hash/utils.js: line 54, col 19, 'i' used out of scope.
node_modules/hash.js/lib/hash/utils.js: line 54, col 35, 'i' used out of scope.
node_modules/hash.js/lib/hash/utils.js: line 55, col 31, 'i' used out of scope.
node_modules/hash.js/lib/hash/utils.js: line 55, col 40, 'i' used out of scope.
node_modules/hash.js/lib/hash/utils.js: line 58, col 10, 'i' used out of scope.
node_modules/hash.js/lib/hash/utils.js: line 58, col 17, 'i' used out of scope.
node_modules/hash.js/lib/hash/utils.js: line 58, col 33, 'i' used out of scope.
node_modules/hash.js/lib/hash/utils.js: line 59, col 11, 'i' used out of scope.
node_modules/hash.js/lib/hash/utils.js: line 59, col 20, 'i' used out of scope.
node_modules/hash.js/lib/hash/utils.js: line 3, col 14, 'require' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 4, col 16, 'require' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 6, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 63, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 71, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 80, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 92, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 100, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 120, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 136, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 156, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 161, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 166, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 171, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 176, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 181, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 186, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 197, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 204, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 210, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 225, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 231, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 248, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 255, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 261, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 267, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 272, col 1, 'exports' is not defined.
node_modules/hash.js/lib/hash/utils.js: line 278, col 1, 'exports' is not defined.

node_modules/hash.js/test/hash-test.js: line 1, col 1, Use the function form of "use strict".
node_modules/hash.js/test/hash-test.js: line 127, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/hash.js/test/hash-test.js: line 134, col 15, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/hash.js/test/hash-test.js: line 4, col 14, 'require' is not defined.
node_modules/hash.js/test/hash-test.js: line 5, col 14, 'require' is not defined.
node_modules/hash.js/test/hash-test.js: line 6, col 12, 'require' is not defined.
node_modules/hash.js/test/hash-test.js: line 8, col 1, 'describe' is not defined.
node_modules/hash.js/test/hash-test.js: line 26, col 3, 'it' is not defined.
node_modules/hash.js/test/hash-test.js: line 41, col 3, 'it' is not defined.
node_modules/hash.js/test/hash-test.js: line 56, col 3, 'it' is not defined.
node_modules/hash.js/test/hash-test.js: line 73, col 3, 'it' is not defined.
node_modules/hash.js/test/hash-test.js: line 90, col 3, 'it' is not defined.
node_modules/hash.js/test/hash-test.js: line 108, col 3, 'it' is not defined.
node_modules/hash.js/test/hash-test.js: line 126, col 3, 'it' is not defined.

node_modules/hash.js/test/hmac-test.js: line 1, col 1, Use the function form of "use strict".
node_modules/hash.js/test/hmac-test.js: line 4, col 14, 'require' is not defined.
node_modules/hash.js/test/hmac-test.js: line 5, col 12, 'require' is not defined.
node_modules/hash.js/test/hmac-test.js: line 7, col 1, 'describe' is not defined.
node_modules/hash.js/test/hmac-test.js: line 8, col 3, 'describe' is not defined.
node_modules/hash.js/test/hmac-test.js: line 51, col 7, 'it' is not defined.

node_modules/highlight.js/es/common.js: line 2, col 1, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/common.js: line 3, col 1, 'export' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/common.js: line 4, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/core.js: line 2, col 1, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/core.js: line 3, col 1, 'export' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/core.js: line 4, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/index.js: line 2, col 1, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/index.js: line 3, col 1, 'export' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/index.js: line 4, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/1c.js: line 521, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/1c.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/1c.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/abnf.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/abnf.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/abnf.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/abnf.js: line 32, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/abnf.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/abnf.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/abnf.js: line 44, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/abnf.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/abnf.js: line 54, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/abnf.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/abnf.js: line 82, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/abnf.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/abnf.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/accesslog.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/accesslog.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/accesslog.js: line 43, col 47, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/accesslog.js: line 92, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/accesslog.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/accesslog.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/actionscript.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/actionscript.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/actionscript.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/actionscript.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/actionscript.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/actionscript.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/actionscript.js: line 77, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/actionscript.js: line 153, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/actionscript.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/actionscript.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ada.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ada.js: line 27, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ada.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ada.js: line 31, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ada.js: line 32, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ada.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ada.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ada.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ada.js: line 40, col 21, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/ada.js: line 43, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ada.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ada.js: line 78, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ada.js: line 263, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ada.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/ada.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/angelscript.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/angelscript.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/angelscript.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/angelscript.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/angelscript.js: line 178, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/angelscript.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/angelscript.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/apache.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/apache.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/apache.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/apache.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/apache.js: line 103, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/apache.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/apache.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/applescript.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/applescript.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/applescript.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/applescript.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/applescript.js: line 27, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/applescript.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/applescript.js: line 43, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/applescript.js: line 60, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/applescript.js: line 118, col 24, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/applescript.js: line 135, col 24, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/applescript.js: line 147, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/applescript.js: line 153, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/applescript.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/applescript.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/arcade.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arcade.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arcade.js: line 231, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arcade.js: line 235, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arcade.js: line 244, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arcade.js: line 251, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arcade.js: line 267, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arcade.js: line 361, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/arcade.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/arcade.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/arduino.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 36, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 58, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 100, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 106, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 109, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 200, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 219, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 277, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 380, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 389, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 393, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 401, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 419, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 429, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 460, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 598, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 965, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 967, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/arduino.js: line 969, col 16, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/arduino.js: line 969, col 29, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/arduino.js: line 970, col 19, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/arduino.js: line 970, col 35, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/arduino.js: line 971, col 20, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/arduino.js: line 971, col 37, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/arduino.js: line 981, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/arduino.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/arduino.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/armasm.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/armasm.js: line 131, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/armasm.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/armasm.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/asciidoc.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/asciidoc.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/asciidoc.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/asciidoc.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/asciidoc.js: line 70, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/asciidoc.js: line 113, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/asciidoc.js: line 118, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/asciidoc.js: line 213, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/asciidoc.js: line 214, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/asciidoc.js: line 215, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/asciidoc.js: line 279, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/asciidoc.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/asciidoc.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/aspectj.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/aspectj.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/aspectj.js: line 88, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/aspectj.js: line 234, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/aspectj.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/aspectj.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/autohotkey.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/autohotkey.js: line 84, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/autohotkey.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/autohotkey.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/autoit.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/autoit.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/autoit.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/autoit.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/autoit.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/autoit.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/autoit.js: line 52, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/autoit.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/autoit.js: line 81, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/autoit.js: line 133, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/autoit.js: line 142, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/autoit.js: line 182, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/autoit.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/autoit.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/avrasm.js: line 80, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/avrasm.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/avrasm.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/awk.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/awk.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/awk.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/awk.js: line 73, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/awk.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/awk.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/axapta.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/axapta.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/axapta.js: line 32, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/axapta.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/axapta.js: line 142, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/axapta.js: line 148, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/axapta.js: line 192, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/axapta.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/axapta.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/bash.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 30, col 9, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/bash.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 52, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 62, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 67, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 71, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 80, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 91, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 92, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/bash.js: line 95, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 103, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 119, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 125, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 130, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 151, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 175, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 246, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/bash.js: line 360, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/bash.js: line 361, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/bash.js: line 365, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/bash.js: line 366, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/bash.js: line 385, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/bash.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/bash.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/basic.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/basic.js: line 233, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/basic.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/basic.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/bnf.js: line 38, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/bnf.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/bnf.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/brainfuck.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/brainfuck.js: line 46, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/brainfuck.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/brainfuck.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/c.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 41, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 42, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 105, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 111, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 113, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 156, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 181, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 197, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 206, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 237, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/c.js: line 340, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/c.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/c.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/cal.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cal.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cal.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cal.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cal.js: line 57, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cal.js: line 65, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cal.js: line 69, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cal.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cal.js: line 80, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cal.js: line 103, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/cal.js: line 107, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cal.js: line 118, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cal.js: line 122, col 20, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/cal.js: line 138, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cal.js: line 165, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/cal.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/cal.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/capnproto.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/capnproto.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/capnproto.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/capnproto.js: line 54, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/capnproto.js: line 101, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/capnproto.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/capnproto.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ceylon.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ceylon.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ceylon.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ceylon.js: line 81, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ceylon.js: line 90, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ceylon.js: line 141, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ceylon.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/ceylon.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/clean.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clean.js: line 68, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/clean.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/clean.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/clojure-repl.js: line 27, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/clojure-repl.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/clojure-repl.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/clojure.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 52, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 64, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 82, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 87, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 98, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 103, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 107, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 111, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 115, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 122, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 136, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/clojure.js: line 182, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/clojure.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/clojure.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/cmake.js: line 64, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/cmake.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/cmake.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/coffeescript.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 44, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 54, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 106, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 117, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 139, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 156, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 160, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 166, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 179, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 186, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 186, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/coffeescript.js: line 187, col 8, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/coffeescript.js: line 188, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 193, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 194, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 200, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 282, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 285, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 286, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 300, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coffeescript.js: line 334, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/coffeescript.js: line 371, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/coffeescript.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/coffeescript.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/coq.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coq.js: line 248, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/coq.js: line 446, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/coq.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/coq.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/cos.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cos.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cos.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cos.js: line 138, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/cos.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/cos.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/cpp.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 36, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 58, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 100, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 106, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 109, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 200, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 219, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 277, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 380, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 389, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 393, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 401, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 419, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 429, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 460, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/cpp.js: line 589, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/cpp.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/cpp.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/crmsh.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crmsh.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crmsh.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crmsh.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crmsh.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crmsh.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crmsh.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crmsh.js: line 102, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/crmsh.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/crmsh.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/crystal.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 34, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/crystal.js: line 36, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 52, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 62, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 112, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 146, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 170, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 204, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 214, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/crystal.js: line 334, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/crystal.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/crystal.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/csharp.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 114, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 151, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 156, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 159, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 174, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 184, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 187, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 193, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 196, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 212, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 229, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 264, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 274, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 284, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 285, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csharp.js: line 445, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/csharp.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/csharp.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/csp.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/csp.js: line 57, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/csp.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/csp.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/css.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/css.js: line 1, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/css.js: line 46, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/css.js: line 121, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/css.js: line 159, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/css.js: line 222, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/css.js: line 239, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/css.js: line 564, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/css.js: line 565, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/css.js: line 566, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/css.js: line 569, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/css.js: line 570, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/css.js: line 571, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/css.js: line 572, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/css.js: line 637, col 11, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/css.js: line 687, col 15, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/css.js: line 701, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/css.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/css.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/d.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 57, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 58, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 60, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 61, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 64, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 68, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 89, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 103, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 113, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 127, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 139, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 149, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 161, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 173, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 184, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 195, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 206, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 218, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 230, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 240, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/d.js: line 271, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/d.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/d.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/dart.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dart.js: line 19, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dart.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dart.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dart.js: line 124, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dart.js: line 124, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/dart.js: line 124, col 61, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/dart.js: line 126, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dart.js: line 192, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dart.js: line 262, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/dart.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/dart.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/delphi.js: line 8, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/delphi.js: line 137, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/delphi.js: line 146, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/delphi.js: line 159, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/delphi.js: line 167, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/delphi.js: line 186, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/delphi.js: line 190, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/delphi.js: line 195, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/delphi.js: line 239, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/delphi.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/delphi.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/diff.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/diff.js: line 64, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/diff.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/diff.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/django.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/django.js: line 77, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/django.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/django.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/dns.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dns.js: line 82, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/dns.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/dns.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/dockerfile.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dockerfile.js: line 44, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/dockerfile.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/dockerfile.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/dos.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dos.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dos.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dos.js: line 41, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dos.js: line 170, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/dos.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/dos.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/dsconfig.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dsconfig.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dsconfig.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dsconfig.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dsconfig.js: line 66, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/dsconfig.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/dsconfig.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/dts.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dts.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dts.js: line 43, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dts.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dts.js: line 84, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dts.js: line 89, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dts.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dts.js: line 105, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dts.js: line 110, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dts.js: line 118, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dts.js: line 123, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dts.js: line 136, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dts.js: line 168, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/dts.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/dts.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/dust.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/dust.js: line 45, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/dust.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/dust.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ebnf.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ebnf.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ebnf.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ebnf.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ebnf.js: line 53, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ebnf.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/ebnf.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/elixir.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 46, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 51, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 62, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 72, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 80, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 114, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 114, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/elixir.js: line 121, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 124, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/elixir.js: line 135, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 138, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/elixir.js: line 145, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 150, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/elixir.js: line 163, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/elixir.js: line 173, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 218, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 229, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 234, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elixir.js: line 278, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/elixir.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/elixir.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/elm.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elm.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elm.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elm.js: line 42, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elm.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elm.js: line 55, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/elm.js: line 150, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/elm.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/elm.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/erb.js: line 29, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/erb.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/erb.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/erlang-repl.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang-repl.js: line 62, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/erlang-repl.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/erlang-repl.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/erlang.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang.js: line 27, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang.js: line 60, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang.js: line 64, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang.js: line 82, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang.js: line 103, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang.js: line 119, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang.js: line 143, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/erlang.js: line 182, col 40, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/erlang.js: line 182, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/erlang.js: line 199, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/erlang.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/erlang.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/excel.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/excel.js: line 544, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/excel.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/excel.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/fix.js: line 37, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/fix.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/fix.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/flix.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/flix.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/flix.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/flix.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/flix.js: line 77, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/flix.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/flix.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/fortran.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fortran.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fortran.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fortran.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fortran.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fortran.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fortran.js: line 51, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fortran.js: line 61, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fortran.js: line 70, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fortran.js: line 273, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fortran.js: line 277, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fortran.js: line 587, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/fortran.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/fortran.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/fsharp.js: line 32, col 17, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/fsharp.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 33, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/fsharp.js: line 42, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 61, col 17, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/fsharp.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 64, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 65, col 5, Misleading line break before '+'; readers may interpret this as an expression boundary.
node_modules/highlight.js/es/languages/fsharp.js: line 66, col 5, Misleading line break before '+'; readers may interpret this as an expression boundary.
node_modules/highlight.js/es/languages/fsharp.js: line 66, col 18, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/fsharp.js: line 80, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 147, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 153, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 169, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 183, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 191, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 234, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 275, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 283, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 288, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 296, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 298, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 305, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 306, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 317, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 317, col 36, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 319, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 324, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 325, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 325, col 42, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/fsharp.js: line 327, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 329, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 330, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 332, col 36, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
node_modules/highlight.js/es/languages/fsharp.js: line 351, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 353, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 355, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 369, col 20, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
node_modules/highlight.js/es/languages/fsharp.js: line 393, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 394, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 397, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 423, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 430, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 434, col 26, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/fsharp.js: line 443, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 454, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 463, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 475, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 481, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 488, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 504, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 523, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 539, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 569, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/fsharp.js: line 626, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/fsharp.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/fsharp.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/gams.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gams.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gams.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gams.js: line 45, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gams.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gams.js: line 71, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gams.js: line 84, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gams.js: line 85, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gams.js: line 185, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/gams.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/gams.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/gauss.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gauss.js: line 112, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gauss.js: line 114, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gauss.js: line 148, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gauss.js: line 163, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gauss.js: line 185, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gauss.js: line 192, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gauss.js: line 193, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gauss.js: line 210, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gauss.js: line 216, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gauss.js: line 225, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gauss.js: line 245, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gauss.js: line 316, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/gauss.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/gauss.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/gcode.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gcode.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gcode.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gcode.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gcode.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gcode.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gcode.js: line 88, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/gcode.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/gcode.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/gherkin.js: line 49, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/gherkin.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/gherkin.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/glsl.js: line 128, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/glsl.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/glsl.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/gml.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gml.js: line 45, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gml.js: line 1874, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gml.js: line 1884, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gml.js: line 2592, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gml.js: line 2805, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/gml.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/gml.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/go.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/go.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/go.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/go.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/go.js: line 83, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/go.js: line 142, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/go.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/go.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/golo.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/golo.js: line 80, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/golo.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/golo.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/gradle.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/gradle.js: line 189, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/gradle.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/gradle.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/groovy.js: line 8, col 33, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/groovy.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/groovy.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/groovy.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/groovy.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/groovy.js: line 43, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/groovy.js: line 47, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/groovy.js: line 69, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/groovy.js: line 80, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/groovy.js: line 91, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/groovy.js: line 190, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/groovy.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/groovy.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/haml.js: line 115, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/haml.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/haml.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/handlebars.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 47, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 61, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 62, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 64, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 65, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 66, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 83, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 90, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 98, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 104, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 124, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 139, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 155, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 165, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 173, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 178, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 186, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 190, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/handlebars.js: line 273, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/handlebars.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/handlebars.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/haskell.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/haskell.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/haskell.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/haskell.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/haskell.js: line 41, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/haskell.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/haskell.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/haskell.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/haskell.js: line 75, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/haskell.js: line 76, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/haskell.js: line 78, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/haskell.js: line 84, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/haskell.js: line 84, col 66, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/haskell.js: line 88, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/haskell.js: line 88, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/haskell.js: line 92, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/haskell.js: line 96, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/haskell.js: line 209, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/haskell.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/haskell.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/haxe.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/haxe.js: line 157, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/haxe.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/haxe.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/hsp.js: line 65, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/hsp.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/hsp.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/http.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/http.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/http.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/http.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/http.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/http.js: line 97, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/http.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/http.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/hy.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 47, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 53, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 58, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 61, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 68, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 72, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 77, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 81, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 82, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 86, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 90, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 101, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/hy.js: line 141, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/hy.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/hy.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/inform7.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/inform7.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/inform7.js: line 70, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/inform7.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/inform7.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ini.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ini.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ini.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ini.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ini.js: line 45, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ini.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ini.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ini.js: line 87, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ini.js: line 88, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ini.js: line 89, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ini.js: line 90, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ini.js: line 93, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ini.js: line 129, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ini.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/ini.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/irpf90.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/irpf90.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/irpf90.js: line 19, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/irpf90.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/irpf90.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/irpf90.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/irpf90.js: line 117, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/irpf90.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/irpf90.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/isbl.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 798, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 801, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 805, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 810, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 815, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 839, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 842, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 846, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 856, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 860, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 872, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 888, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 920, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 926, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 995, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1016, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1038, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1044, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1051, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1058, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1271, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1274, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1296, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1304, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1337, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1345, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1366, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1446, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1452, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1467, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1478, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1484, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1497, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1501, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1510, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1522, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1561, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1564, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1572, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1575, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1578, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1586, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1589, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1592, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1595, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1598, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1614, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1617, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1620, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1633, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1670, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1680, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1683, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1712, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1715, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1718, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1721, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1724, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1727, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1730, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1779, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1782, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1785, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1788, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1791, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1794, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1797, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1800, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1804, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1807, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1810, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1813, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1816, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1819, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1830, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1842, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1845, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1848, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1857, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1860, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1863, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1867, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1920, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1923, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1926, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1929, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1932, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1935, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1945, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1948, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1962, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1966, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1970, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1983, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 1986, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2000, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2003, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2006, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2010, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2013, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2016, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2019, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2022, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2025, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2049, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2052, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2055, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2067, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2076, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2080, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2083, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2087, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2091, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2112, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2116, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2137, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2146, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2154, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2157, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2172, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2209, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2212, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2215, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2224, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2228, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2319, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2754, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 2802, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3052, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3055, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3058, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3061, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3068, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3083, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3090, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3102, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3114, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3122, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3131, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3138, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3146, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3158, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3160, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3173, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/isbl.js: line 3207, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/isbl.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/isbl.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/java.js: line 3, col 12, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/java.js: line 10, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/java.js: line 11, col 7, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/java.js: line 13, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/java.js: line 14, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/java.js: line 15, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/java.js: line 18, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/java.js: line 19, col 7, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/java.js: line 25, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/java.js: line 57, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/java.js: line 64, col 8, Expected an assignment or function call and instead saw an expression.
node_modules/highlight.js/es/languages/java.js: line 65, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/java.js: line 66, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/java.js: line 68, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/java.js: line 111, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/java.js: line 116, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/java.js: line 122, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/java.js: line 133, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/java.js: line 140, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/java.js: line 151, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/java.js: line 290, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/java.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/java.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/javascript.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 2, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 45, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 55, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 107, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 118, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 140, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 152, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 167, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 175, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 175, col 31, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 175, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/javascript.js: line 176, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 177, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 181, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 182, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 187, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 188, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 195, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/javascript.js: line 196, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 197, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 225, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 226, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 237, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 246, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 247, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 247, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/javascript.js: line 250, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 250, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/javascript.js: line 251, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 255, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/javascript.js: line 256, col 9, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/javascript.js: line 257, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/javascript.js: line 260, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/javascript.js: line 274, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 281, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 294, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 307, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 316, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 355, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 363, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 385, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 386, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 395, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 406, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 442, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 453, col 57, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
node_modules/highlight.js/es/languages/javascript.js: line 463, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/javascript.js: line 464, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/javascript.js: line 469, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 476, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 503, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 513, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 517, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/javascript.js: line 525, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 536, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 555, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 563, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 586, col 16, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 586, col 33, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/javascript.js: line 735, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/javascript.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/javascript.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/jboss-cli.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/jboss-cli.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/jboss-cli.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/jboss-cli.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/jboss-cli.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/jboss-cli.js: line 63, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/jboss-cli.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/jboss-cli.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/json.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/json.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/json.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/json.js: line 48, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/json.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/json.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/julia-repl.js: line 47, col 4, Missing semicolon.
node_modules/highlight.js/es/languages/julia-repl.js: line 50, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/julia-repl.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/julia-repl.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/julia.js: line 416, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/julia.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/julia.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/kotlin.js: line 3, col 12, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/kotlin.js: line 10, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/kotlin.js: line 11, col 7, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/kotlin.js: line 13, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/kotlin.js: line 14, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/kotlin.js: line 15, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/kotlin.js: line 18, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/kotlin.js: line 19, col 7, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/kotlin.js: line 25, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/kotlin.js: line 45, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/kotlin.js: line 57, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/kotlin.js: line 69, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/kotlin.js: line 75, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/kotlin.js: line 81, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/kotlin.js: line 85, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/kotlin.js: line 119, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/kotlin.js: line 123, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/kotlin.js: line 142, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/kotlin.js: line 143, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/kotlin.js: line 149, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/kotlin.js: line 162, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/kotlin.js: line 284, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/kotlin.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/kotlin.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/lasso.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/lasso.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/lasso.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/lasso.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/lasso.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/lasso.js: line 47, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/lasso.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/lasso.js: line 60, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/lasso.js: line 64, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/lasso.js: line 187, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/lasso.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/lasso.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/latex.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 11, col 44, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 32, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 54, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 55, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 67, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 91, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 96, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 100, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 105, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 111, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 118, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 126, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 129, col 24, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 131, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 136, col 43, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 139, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 144, col 41, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 146, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 150, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 151, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 152, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 162, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 171, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 181, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 181, col 47, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 181, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 191, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 198, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 198, col 48, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 198, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 222, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/latex.js: line 223, col 5, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 223, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 229, col 5, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 229, col 18, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 229, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 232, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 232, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 243, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 244, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js: line 249, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/latex.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/latex.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ldif.js: line 31, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ldif.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/ldif.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/leaf.js: line 49, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/leaf.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/leaf.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/less.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 1, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/less.js: line 46, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 121, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 159, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 222, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 239, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 557, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 569, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 570, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 572, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 573, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 574, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 578, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 578, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 580, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 588, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 596, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 602, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 641, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 647, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 659, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 683, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 696, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 718, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 773, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/less.js: line 774, col 33, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/less.js: line 797, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/less.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/less.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/lisp.js: line 111, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/lisp.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/lisp.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/livecodeserver.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livecodeserver.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livecodeserver.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livecodeserver.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livecodeserver.js: line 189, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/livecodeserver.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/livecodeserver.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/livescript.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 44, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 54, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 106, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 117, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 139, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 156, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 160, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 169, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 200, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 205, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 206, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 209, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 215, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 221, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 301, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 317, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 321, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/livescript.js: line 388, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/livescript.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/livescript.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/llvm.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/llvm.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/llvm.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/llvm.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/llvm.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/llvm.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/llvm.js: line 36, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/llvm.js: line 43, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/llvm.js: line 51, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/llvm.js: line 130, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/llvm.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/llvm.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/lsl.js: line 95, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/lsl.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/lsl.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/lua.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/lua.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/lua.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/lua.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/lua.js: line 82, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/lua.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/lua.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/makefile.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/makefile.js: line 24, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/makefile.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/makefile.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/makefile.js: line 52, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/makefile.js: line 62, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/makefile.js: line 92, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/makefile.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/makefile.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/markdown.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/markdown.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/markdown.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/markdown.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/markdown.js: line 57, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/markdown.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/markdown.js: line 82, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/markdown.js: line 83, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/markdown.js: line 143, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/markdown.js: line 157, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/markdown.js: line 175, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/markdown.js: line 185, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/markdown.js: line 209, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/markdown.js: line 238, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/markdown.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/markdown.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/mathematica.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6638, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6643, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6644, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6645, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6646, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6648, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6649, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6650, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6652, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6654, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6660, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6666, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6667, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6669, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6675, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/mathematica.js: line 6687, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6692, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6697, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6703, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6709, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6715, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mathematica.js: line 6753, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/mathematica.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/mathematica.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/matlab.js: line 104, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/matlab.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/matlab.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/maxima.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/maxima.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/maxima.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/maxima.js: line 367, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/maxima.js: line 417, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/maxima.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/maxima.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/mel.js: line 236, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/mel.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/mel.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/mercury.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mercury.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mercury.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mercury.js: line 45, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mercury.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mercury.js: line 51, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mercury.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mercury.js: line 82, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/mercury.js: line 121, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/mercury.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/mercury.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/mipsasm.js: line 109, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/mipsasm.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/mipsasm.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/mizar.js: line 29, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/mizar.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/mizar.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/mojolicious.js: line 36, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/mojolicious.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/mojolicious.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/monkey.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/monkey.js: line 19, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/monkey.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/monkey.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/monkey.js: line 89, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/monkey.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/monkey.js: line 193, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/monkey.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/monkey.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/moonscript.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/moonscript.js: line 24, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/moonscript.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/moonscript.js: line 31, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/moonscript.js: line 70, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/moonscript.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/moonscript.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/moonscript.js: line 147, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/moonscript.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/moonscript.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/n1ql.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/n1ql.js: line 181, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/n1ql.js: line 188, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/n1ql.js: line 364, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/n1ql.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/n1ql.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/nestedtext.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nestedtext.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nestedtext.js: line 36, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nestedtext.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nestedtext.js: line 87, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/nestedtext.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/nestedtext.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/nginx.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nginx.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nginx.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nginx.js: line 52, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nginx.js: line 165, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/nginx.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/nginx.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/nim.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nim.js: line 57, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nim.js: line 128, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nim.js: line 134, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nim.js: line 197, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/nim.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/nim.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/nix.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nix.js: line 42, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nix.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nix.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nix.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nix.js: line 89, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/nix.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/nix.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/node-repl.js: line 37, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/node-repl.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/node-repl.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/nsis.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 57, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 111, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 147, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 149, col 44, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/nsis.js: line 152, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 158, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 165, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 171, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 174, col 25, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/nsis.js: line 177, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 182, col 20, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/nsis.js: line 186, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 192, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 198, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 224, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 439, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 495, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 509, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 510, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/nsis.js: line 558, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/nsis.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/nsis.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/objectivec.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/objectivec.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/objectivec.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/objectivec.js: line 145, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/objectivec.js: line 155, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/objectivec.js: line 163, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/objectivec.js: line 169, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/objectivec.js: line 250, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/objectivec.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/objectivec.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ocaml.js: line 79, col 4, Missing semicolon.
node_modules/highlight.js/es/languages/ocaml.js: line 82, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ocaml.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/ocaml.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/openscad.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/openscad.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/openscad.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/openscad.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/openscad.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/openscad.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/openscad.js: line 46, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/openscad.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/openscad.js: line 81, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/openscad.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/openscad.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/oxygene.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/oxygene.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/oxygene.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/oxygene.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/oxygene.js: line 45, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/oxygene.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/oxygene.js: line 70, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/oxygene.js: line 94, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/oxygene.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/oxygene.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/parser3.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/parser3.js: line 57, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/parser3.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/parser3.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/perl.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/perl.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/perl.js: line 245, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/perl.js: line 246, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/perl.js: line 250, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/perl.js: line 256, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/perl.js: line 261, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/perl.js: line 271, col 11, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/perl.js: line 280, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/perl.js: line 285, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/perl.js: line 299, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/perl.js: line 299, col 49, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/perl.js: line 299, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/perl.js: line 300, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/perl.js: line 301, col 7, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/highlight.js/es/languages/perl.js: line 318, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/perl.js: line 318, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/perl.js: line 327, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/perl.js: line 411, col 62, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/perl.js: line 431, col 53, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/perl.js: line 479, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/perl.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/perl.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/pf.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pf.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pf.js: line 59, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/pf.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/pf.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/pgsql.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pgsql.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pgsql.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pgsql.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pgsql.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pgsql.js: line 71, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pgsql.js: line 75, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pgsql.js: line 80, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pgsql.js: line 97, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pgsql.js: line 103, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pgsql.js: line 107, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pgsql.js: line 115, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pgsql.js: line 193, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pgsql.js: line 284, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pgsql.js: line 631, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/pgsql.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/pgsql.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/php-template.js: line 54, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/php-template.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/php-template.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/php.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 19, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 41, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 44, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 54, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 55, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 66, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/php.js: line 67, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/php.js: line 68, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/php.js: line 70, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/php.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 181, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 284, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 284, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/php.js: line 286, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 287, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/php.js: line 298, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 306, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 306, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/php.js: line 307, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/php.js: line 312, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 331, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 346, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 348, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/php.js: line 528, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/php.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/php.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/plaintext.js: line 19, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/plaintext.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/plaintext.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/pony.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pony.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pony.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pony.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pony.js: line 45, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pony.js: line 51, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pony.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/pony.js: line 89, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/pony.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/pony.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/powershell.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 41, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 69, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 71, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 76, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 92, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 97, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 120, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 134, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 148, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 167, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 176, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 185, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 215, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 230, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 245, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 253, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 274, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 289, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/powershell.js: line 332, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/powershell.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/powershell.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/processing.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/processing.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/processing.js: line 274, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/processing.js: line 275, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/processing.js: line 278, col 42, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/processing.js: line 290, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/processing.js: line 300, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/processing.js: line 310, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/processing.js: line 339, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/processing.js: line 350, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/processing.js: line 373, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/processing.js: line 419, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/processing.js: line 425, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/processing.js: line 426, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/processing.js: line 444, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/processing.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/processing.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/profile.js: line 43, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/profile.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/profile.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/prolog.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/prolog.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/prolog.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/prolog.js: line 36, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/prolog.js: line 42, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/prolog.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/prolog.js: line 58, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/prolog.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/prolog.js: line 68, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/prolog.js: line 72, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/prolog.js: line 102, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/prolog.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/prolog.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/properties.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/properties.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/properties.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/properties.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/properties.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/properties.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/properties.js: line 19, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/properties.js: line 76, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/properties.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/properties.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/protobuf.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/protobuf.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/protobuf.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/protobuf.js: line 75, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/protobuf.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/protobuf.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/puppet.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/puppet.js: line 46, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/puppet.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/puppet.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/puppet.js: line 54, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/puppet.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/puppet.js: line 147, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/puppet.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/puppet.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/purebasic.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/purebasic.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/purebasic.js: line 101, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/purebasic.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/purebasic.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/python-repl.js: line 36, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/python-repl.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/python-repl.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/python.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 10, col 20, 'Unicode property escape' is only available in ES9 (use 'esversion: 9').
node_modules/highlight.js/es/languages/python.js: line 10, col 20, 'Unicode property escape' is only available in ES9 (use 'esversion: 9').
node_modules/highlight.js/es/languages/python.js: line 10, col 20, 'Unicode RegExp flag' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/python.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 46, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 118, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 130, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 146, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 154, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 159, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 167, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 172, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 256, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 257, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 257, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/python.js: line 263, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 263, col 21, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/python.js: line 264, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 279, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/python.js: line 282, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/python.js: line 292, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/python.js: line 295, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/python.js: line 298, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/python.js: line 301, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/python.js: line 307, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/python.js: line 311, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 328, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/python.js: line 432, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/python.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/python.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/q.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/q.js: line 37, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/q.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/q.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/qml.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/qml.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/qml.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/qml.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/qml.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/qml.js: line 62, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/qml.js: line 76, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/qml.js: line 93, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/qml.js: line 201, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/qml.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/qml.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/r.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/r.js: line 19, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/r.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/r.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/r.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/r.js: line 235, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/r.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/r.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/reasonml.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 27, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 41, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 53, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 58, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 71, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 76, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 86, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 105, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 122, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 139, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 186, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 202, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 220, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/reasonml.js: line 324, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/reasonml.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/reasonml.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/rib.js: line 37, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/rib.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/rib.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/roboconf.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/roboconf.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/roboconf.js: line 82, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/roboconf.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/roboconf.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/routeros.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/routeros.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/routeros.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/routeros.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/routeros.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/routeros.js: line 27, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/routeros.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/routeros.js: line 55, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/routeros.js: line 172, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/routeros.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/routeros.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/rsl.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/rsl.js: line 88, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/rsl.js: line 97, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/rsl.js: line 109, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/rsl.js: line 149, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/rsl.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/rsl.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ruby.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 27, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 31, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 55, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 151, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 152, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 153, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 159, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/ruby.js: line 184, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 192, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 257, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/ruby.js: line 310, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 312, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 313, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 315, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/ruby.js: line 357, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ruby.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/ruby.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ruleslanguage.js: line 78, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/ruleslanguage.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/ruleslanguage.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/rust.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/rust.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/rust.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/rust.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/rust.js: line 75, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/rust.js: line 83, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/rust.js: line 150, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/rust.js: line 316, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/rust.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/rust.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/sas.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sas.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sas.js: line 125, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sas.js: line 408, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sas.js: line 471, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sas.js: line 529, col 35, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sas.js: line 541, col 29, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sas.js: line 556, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/sas.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sas.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/scala.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scala.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scala.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scala.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scala.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scala.js: line 69, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scala.js: line 75, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scala.js: line 108, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scala.js: line 115, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scala.js: line 126, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scala.js: line 141, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scala.js: line 149, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scala.js: line 176, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/scala.js: line 183, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/scala.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/scala.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/scheme.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scheme.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scheme.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scheme.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scheme.js: line 54, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scheme.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scheme.js: line 82, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scheme.js: line 84, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scheme.js: line 95, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scheme.js: line 100, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scheme.js: line 105, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scheme.js: line 110, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scheme.js: line 135, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scheme.js: line 142, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scheme.js: line 165, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scheme.js: line 207, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/scheme.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/scheme.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/scilab.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scilab.js: line 73, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/scilab.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/scilab.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/scss.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scss.js: line 1, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/scss.js: line 46, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scss.js: line 121, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scss.js: line 159, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scss.js: line 222, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scss.js: line 239, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scss.js: line 566, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scss.js: line 567, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scss.js: line 568, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scss.js: line 570, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scss.js: line 571, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scss.js: line 572, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scss.js: line 573, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/scss.js: line 680, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/scss.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/scss.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/shell.js: line 30, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/shell.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/shell.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/smali.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/smali.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/smali.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/smali.js: line 135, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/smali.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/smali.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/smalltalk.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/smalltalk.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/smalltalk.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/smalltalk.js: line 70, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/smalltalk.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/smalltalk.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/sml.js: line 81, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/sml.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sml.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/sqf.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sqf.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sqf.js: line 27, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sqf.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sqf.js: line 61, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sqf.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sqf.js: line 2461, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sqf.js: line 2509, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/sqf.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sqf.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/sql.js: line 24, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 44, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 52, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 89, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 101, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 473, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 562, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 582, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 601, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 603, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 603, col 21, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sql.js: line 603, col 40, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sql.js: line 603, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sql.js: line 607, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 612, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 618, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 619, col 44, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sql.js: line 627, col 32, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 627, col 53, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sql.js: line 628, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/sql.js: line 630, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sql.js: line 634, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sql.js: line 649, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sql.js: line 656, col 29, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sql.js: line 667, col 29, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sql.js: line 681, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/sql.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/sql.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/stan.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stan.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stan.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stan.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stan.js: line 60, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stan.js: line 296, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stan.js: line 363, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stan.js: line 377, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stan.js: line 390, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stan.js: line 418, col 53, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/stan.js: line 429, col 24, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/stan.js: line 442, col 49, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/stan.js: line 449, col 37, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/stan.js: line 458, col 38, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/stan.js: line 493, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/stan.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/stan.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/stata.js: line 60, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/stata.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/stata.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/step21.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/step21.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/step21.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/step21.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/step21.js: line 70, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/step21.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/step21.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/stylus.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stylus.js: line 1, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/stylus.js: line 46, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stylus.js: line 121, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stylus.js: line 159, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stylus.js: line 222, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stylus.js: line 239, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stylus.js: line 566, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stylus.js: line 568, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stylus.js: line 569, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stylus.js: line 574, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stylus.js: line 591, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stylus.js: line 594, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/stylus.js: line 740, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/stylus.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/stylus.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/subunit.js: line 8, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/subunit.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/subunit.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/subunit.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/subunit.js: line 51, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/subunit.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/subunit.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/swift.js: line 29, col 17, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 30, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 58, col 17, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 60, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 61, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 62, col 5, Misleading line break before '+'; readers may interpret this as an expression boundary.
node_modules/highlight.js/es/languages/swift.js: line 63, col 5, Misleading line break before '+'; readers may interpret this as an expression boundary.
node_modules/highlight.js/es/languages/swift.js: line 63, col 18, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 67, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 67, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 74, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 80, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 86, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 92, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 187, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 194, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 206, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 230, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 268, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 290, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 302, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 305, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 325, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 332, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 335, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 339, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 372, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 397, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 402, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 409, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 416, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 419, col 14, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 419, col 30, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 425, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 427, col 32, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 430, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 431, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 433, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 434, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 437, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 441, col 23, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 441, col 42, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 446, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 455, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 462, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 464, col 32, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 467, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 469, col 32, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 471, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 477, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 482, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 493, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 497, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 504, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 505, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 506, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 512, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 512, col 66, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 516, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 516, col 60, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 530, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 530, col 43, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 530, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 541, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 541, col 41, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 541, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 545, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 545, col 39, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 545, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 551, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 551, col 42, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 551, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 560, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 560, col 44, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 560, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 568, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 583, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 586, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 590, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 592, col 12, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 594, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 601, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 611, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 619, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 621, col 31, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 623, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 627, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 634, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 661, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 666, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 667, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 668, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 677, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 683, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 691, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 692, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 693, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 694, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 697, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 698, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 703, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 707, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 711, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 729, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 735, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 736, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 737, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 740, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 748, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 771, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 787, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 800, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 812, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 813, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 819, col 8, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 819, col 22, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 820, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 820, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 823, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/swift.js: line 824, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 825, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 826, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 829, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 832, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 838, col 11, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 848, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 861, col 11, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 869, col 21, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 872, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 873, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 874, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 877, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 878, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js: line 885, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/swift.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/swift.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/taggerscript.js: line 8, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/taggerscript.js: line 24, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/taggerscript.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/taggerscript.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/taggerscript.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/taggerscript.js: line 56, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/taggerscript.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/taggerscript.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/tap.js: line 55, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/tap.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/tap.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/tcl.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/tcl.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/tcl.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/tcl.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/tcl.js: line 190, col 4, Missing semicolon.
node_modules/highlight.js/es/languages/tcl.js: line 193, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/tcl.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/tcl.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/thrift.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/thrift.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/thrift.js: line 66, col 18, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/thrift.js: line 75, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/thrift.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/thrift.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/tp.js: line 8, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/tp.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/tp.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/tp.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/tp.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/tp.js: line 110, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/tp.js: line 171, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/tp.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/tp.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/twig.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/twig.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/twig.js: line 31, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/twig.js: line 89, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/twig.js: line 113, col 51, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/twig.js: line 113, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/twig.js: line 115, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/twig.js: line 129, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/twig.js: line 134, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/twig.js: line 146, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/twig.js: line 153, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/twig.js: line 165, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/twig.js: line 165, col 29, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/twig.js: line 165, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/twig.js: line 176, col 22, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/twig.js: line 189, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/twig.js: line 190, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/twig.js: line 191, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/twig.js: line 218, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/twig.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/twig.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/typescript.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 2, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 45, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 55, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 107, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 118, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 140, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 152, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 167, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 175, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 175, col 31, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 175, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/typescript.js: line 176, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 177, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 181, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 182, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 187, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 188, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 195, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/typescript.js: line 196, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 197, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 225, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 226, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 237, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 246, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 247, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 247, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/typescript.js: line 250, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 250, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/typescript.js: line 251, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 255, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/typescript.js: line 256, col 9, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/typescript.js: line 257, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/typescript.js: line 260, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/typescript.js: line 274, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 281, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 294, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 307, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 316, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 355, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 363, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 385, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 386, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 395, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 406, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 442, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 453, col 57, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
node_modules/highlight.js/es/languages/typescript.js: line 463, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/typescript.js: line 464, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/typescript.js: line 469, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 476, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 503, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 513, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 517, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/typescript.js: line 525, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 536, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 555, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 563, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 586, col 16, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 586, col 33, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 746, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 748, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 749, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 759, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 767, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 779, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 784, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 797, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 804, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 809, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 809, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/typescript.js: line 810, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 810, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/typescript.js: line 832, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/typescript.js: line 832, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/typescript.js: line 843, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/typescript.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/typescript.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/vala.js: line 60, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/vala.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/vala.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/vbnet.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbnet.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbnet.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbnet.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbnet.js: line 36, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbnet.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbnet.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbnet.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbnet.js: line 67, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbnet.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbnet.js: line 99, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbnet.js: line 109, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbnet.js: line 121, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbnet.js: line 178, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/vbnet.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/vbnet.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/vbscript-html.js: line 24, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/vbscript-html.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/vbscript-html.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/vbscript.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbscript.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbscript.js: line 111, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbscript.js: line 122, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbscript.js: line 123, col 38, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/vbscript.js: line 131, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbscript.js: line 139, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vbscript.js: line 224, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/vbscript.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/vbscript.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/verilog.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/verilog.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/verilog.js: line 465, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/verilog.js: line 469, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/verilog.js: line 542, col 47, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/verilog.js: line 546, col 47, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/verilog.js: line 555, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/verilog.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/verilog.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/vhdl.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vhdl.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vhdl.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vhdl.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vhdl.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vhdl.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vhdl.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vhdl.js: line 140, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vhdl.js: line 168, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/vhdl.js: line 215, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/vhdl.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/vhdl.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/vim.js: line 129, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/vim.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/vim.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/wasm.js: line 11, col 8, Expected an assignment or function call and instead saw an expression.
node_modules/highlight.js/es/languages/wasm.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wasm.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wasm.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wasm.js: line 64, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wasm.js: line 76, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wasm.js: line 81, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wasm.js: line 87, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wasm.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wasm.js: line 100, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wasm.js: line 106, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wasm.js: line 139, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/wasm.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/wasm.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/wren.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 32, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 41, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 84, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 88, col 22, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/wren.js: line 108, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 132, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 134, col 25, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/wren.js: line 138, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 144, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 152, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 159, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 169, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 171, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 184, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 197, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 209, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 228, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 228, col 20, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/wren.js: line 228, col 33, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/wren.js: line 228, col 51, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/wren.js: line 229, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 241, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/wren.js: line 297, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/wren.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/wren.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/x86asm.js: line 163, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/x86asm.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/x86asm.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/xl.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xl.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xl.js: line 114, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xl.js: line 136, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xl.js: line 141, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xl.js: line 148, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xl.js: line 154, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xl.js: line 160, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xl.js: line 165, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xl.js: line 169, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xl.js: line 175, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xl.js: line 207, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/xl.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/xl.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/xml.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xml.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xml.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xml.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xml.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xml.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xml.js: line 32, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xml.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xml.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xml.js: line 234, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/xml.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/xml.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/xquery.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xquery.js: line 115, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xquery.js: line 176, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xquery.js: line 200, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xquery.js: line 246, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xquery.js: line 252, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xquery.js: line 257, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xquery.js: line 263, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xquery.js: line 289, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xquery.js: line 294, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xquery.js: line 310, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xquery.js: line 317, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xquery.js: line 331, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/xquery.js: line 361, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/xquery.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/xquery.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/yaml.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 72, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 88, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 89, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 90, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 91, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 92, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 97, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 104, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 111, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 119, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 193, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/yaml.js: line 193, col 25, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/yaml.js: line 206, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/yaml.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/yaml.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/zephir.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/zephir.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/zephir.js: line 24, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/zephir.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/languages/zephir.js: line 140, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/languages/zephir.js.js: line 10, col 5, 'import' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/languages/zephir.js.js: line 11, col 5, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/es/utils/regex.js: line 48, col 17, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/utils/regex.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/utils/regex.js: line 49, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/utils/regex.js: line 58, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/utils/regex.js: line 77, col 17, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/utils/regex.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/utils/regex.js: line 80, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/utils/regex.js: line 81, col 5, Misleading line break before '+'; readers may interpret this as an expression boundary.
node_modules/highlight.js/es/utils/regex.js: line 82, col 5, Misleading line break before '+'; readers may interpret this as an expression boundary.
node_modules/highlight.js/es/utils/regex.js: line 82, col 18, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/utils/regex.js: line 100, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/utils/regex.js: line 111, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/utils/regex.js: line 124, col 40, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/utils/regex.js: line 125, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/utils/regex.js: line 127, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/utils/regex.js: line 129, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/utils/regex.js: line 130, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/utils/regex.js: line 131, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/utils/regex.js: line 134, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/es/utils/regex.js: line 152, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/utils/regex.js: line 152, col 13, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/es/utils/regex.js: line 155, col 1, 'export' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/common.js: line 38, col 24, Missing semicolon.
node_modules/highlight.js/lib/common.js: line 39, col 20, Missing semicolon.

node_modules/highlight.js/lib/core.js: line 38, col 1, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 76, col 30, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 78, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 80, col 8, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 84, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 103, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 109, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 109, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 118, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 118, col 30, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 118, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 120, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 122, col 7, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 123, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 123, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 123, col 32, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 126, col 10, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 130, col 1, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 158, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 160, col 15, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 191, col 20, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 200, col 1, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 221, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 221, col 20, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 262, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 275, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 280, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 307, col 1, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 343, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 350, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 403, col 17, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 404, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 404, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 413, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 432, col 17, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 434, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 435, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 436, col 5, Misleading line break before '+'; readers may interpret this as an expression boundary.
node_modules/highlight.js/lib/core.js: line 437, col 5, Misleading line break before '+'; readers may interpret this as an expression boundary.
node_modules/highlight.js/lib/core.js: line 437, col 18, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 455, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 466, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 479, col 40, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 480, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 482, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 484, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 485, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 486, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 489, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 507, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 507, col 13, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 514, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 515, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 516, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 517, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 518, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 519, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 520, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 525, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 525, col 23, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 525, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 526, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 540, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 547, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 550, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 557, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 564, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 575, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 575, col 50, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 576, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 579, col 7, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 580, col 7, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 594, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 640, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 641, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 642, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 643, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 648, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 653, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 658, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 682, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 687, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 692, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 705, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 709, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 711, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 716, col 14, The '__proto__' property is deprecated.
node_modules/highlight.js/lib/core.js: line 773, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 822, col 25, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 848, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 848, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 854, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 855, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 871, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 885, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 893, col 66, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 895, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 926, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 929, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 971, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 976, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 976, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 984, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 984, col 24, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 984, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 985, col 15, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 985, col 35, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 992, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 992, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 993, col 24, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 995, col 15, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 996, col 20, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 1005, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1035, col 39, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1036, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1037, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1039, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1041, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1043, col 8, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1159, col 7, Misleading line break before '+'; readers may interpret this as an expression boundary.
node_modules/highlight.js/lib/core.js: line 1160, col 7, Misleading line break before '+'; readers may interpret this as an expression boundary.
node_modules/highlight.js/lib/core.js: line 1161, col 7, Misleading line break before '+'; readers may interpret this as an expression boundary.
node_modules/highlight.js/lib/core.js: line 1178, col 3, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1200, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 1202, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1202, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 1210, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1214, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1214, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 1216, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1256, col 3, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1272, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1273, col 39, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1273, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 1295, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1297, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1332, col 11, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1358, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1360, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 1412, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1422, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 1424, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 1436, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 1440, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1470, col 31, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 1555, col 1, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1590, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1591, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1592, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1593, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1599, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1602, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1604, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1606, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1610, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1611, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1613, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1618, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1645, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1650, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1652, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1662, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 1687, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1688, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1706, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1707, col 7, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1716, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1717, col 7, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/highlight.js/lib/core.js: line 1737, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1755, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1757, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1758, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1762, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1763, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1765, col 11, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1765, col 11, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1776, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1792, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1829, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1833, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1834, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1877, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1881, col 11, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1926, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1927, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1929, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1931, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1932, col 12, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1932, col 21, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1959, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1960, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1962, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1965, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 1999, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2000, col 12, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2005, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 2009, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2018, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2037, col 11, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2037, col 33, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 2051, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2055, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2074, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2090, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2096, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2097, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2099, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2101, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2102, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2104, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2105, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2106, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2107, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2108, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2124, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2129, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2130, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2186, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2213, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2215, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2215, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 2220, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2220, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 2241, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2241, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2244, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2258, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2261, col 27, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 2271, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2272, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2292, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2301, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2302, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2302, col 49, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2319, col 51, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2319, col 59, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2332, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2332, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 2343, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2355, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2376, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2395, col 39, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2406, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2406, col 22, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2434, col 37, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2438, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 2446, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2458, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 2465, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/core.js: line 2487, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2508, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2509, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2510, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2511, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2514, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2515, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2516, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2517, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2518, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2519, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2520, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2521, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2522, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2523, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2524, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/core.js: line 2539, col 8, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/index.js: line 195, col 24, Missing semicolon.
node_modules/highlight.js/lib/index.js: line 196, col 20, Missing semicolon.

node_modules/highlight.js/lib/languages/abnf.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/abnf.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/abnf.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/abnf.js: line 32, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/abnf.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/abnf.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/abnf.js: line 44, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/abnf.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/abnf.js: line 54, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/abnf.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/accesslog.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/accesslog.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/accesslog.js: line 43, col 47, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/actionscript.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/actionscript.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/actionscript.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/actionscript.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/actionscript.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/actionscript.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/actionscript.js: line 77, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/ada.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ada.js: line 27, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ada.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ada.js: line 31, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ada.js: line 32, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ada.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ada.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ada.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ada.js: line 40, col 21, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/ada.js: line 43, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ada.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ada.js: line 78, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/angelscript.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/angelscript.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/angelscript.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/angelscript.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/apache.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/apache.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/apache.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/apache.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/applescript.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/applescript.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/applescript.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/applescript.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/applescript.js: line 27, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/applescript.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/applescript.js: line 43, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/applescript.js: line 60, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/applescript.js: line 118, col 24, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/applescript.js: line 135, col 24, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/applescript.js: line 147, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/arcade.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arcade.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arcade.js: line 231, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arcade.js: line 235, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arcade.js: line 244, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arcade.js: line 251, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arcade.js: line 267, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/arduino.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 36, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 58, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 100, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 106, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 109, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 200, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 219, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 277, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 380, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 389, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 393, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 401, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 419, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 429, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 460, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 598, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 965, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 967, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/arduino.js: line 969, col 16, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/arduino.js: line 969, col 29, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/arduino.js: line 970, col 19, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/arduino.js: line 970, col 35, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/arduino.js: line 971, col 20, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/arduino.js: line 971, col 37, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/armasm.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/asciidoc.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/asciidoc.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/asciidoc.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/asciidoc.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/asciidoc.js: line 70, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/asciidoc.js: line 113, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/asciidoc.js: line 118, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/asciidoc.js: line 213, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/asciidoc.js: line 214, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/asciidoc.js: line 215, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/aspectj.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/aspectj.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/aspectj.js: line 88, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/autohotkey.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/autoit.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/autoit.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/autoit.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/autoit.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/autoit.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/autoit.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/autoit.js: line 52, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/autoit.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/autoit.js: line 81, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/autoit.js: line 133, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/autoit.js: line 142, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/awk.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/awk.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/awk.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/axapta.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/axapta.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/axapta.js: line 32, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/axapta.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/axapta.js: line 142, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/axapta.js: line 148, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/bash.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 30, col 9, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/bash.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 52, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 62, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 67, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 71, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 80, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 91, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 92, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/bash.js: line 95, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 103, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 119, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 125, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 130, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 151, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 175, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 246, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/bash.js: line 360, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/bash.js: line 361, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/bash.js: line 365, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/bash.js: line 366, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/basic.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/brainfuck.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/c.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 41, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 42, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 105, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 111, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 113, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 156, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 181, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 197, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 206, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/c.js: line 237, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/cal.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cal.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cal.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cal.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cal.js: line 57, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cal.js: line 65, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cal.js: line 69, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cal.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cal.js: line 80, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cal.js: line 103, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/cal.js: line 107, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cal.js: line 118, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cal.js: line 122, col 20, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/cal.js: line 138, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/capnproto.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/capnproto.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/capnproto.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/capnproto.js: line 54, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/ceylon.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ceylon.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ceylon.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ceylon.js: line 81, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ceylon.js: line 90, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/clean.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/clojure.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 52, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 64, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 82, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 87, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 98, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 103, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 107, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 111, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 115, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 122, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/clojure.js: line 136, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/coffeescript.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 44, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 54, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 106, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 117, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 139, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 156, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 160, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 166, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 179, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 186, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 186, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/coffeescript.js: line 187, col 8, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/coffeescript.js: line 188, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 193, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 194, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 200, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 282, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 285, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 286, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 300, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coffeescript.js: line 334, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/coq.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/coq.js: line 248, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/cos.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cos.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cos.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/cpp.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 36, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 58, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 100, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 106, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 109, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 200, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 219, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 277, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 380, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 389, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 393, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 401, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 419, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 429, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/cpp.js: line 460, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/crmsh.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crmsh.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crmsh.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crmsh.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crmsh.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crmsh.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crmsh.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/crystal.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crystal.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crystal.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crystal.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crystal.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crystal.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crystal.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crystal.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crystal.js: line 34, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/crystal.js: line 36, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crystal.js: line 52, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crystal.js: line 62, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crystal.js: line 112, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crystal.js: line 146, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crystal.js: line 170, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crystal.js: line 204, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/crystal.js: line 214, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/csharp.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 114, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 151, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 156, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 159, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 174, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 184, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 187, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 193, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 196, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 212, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 229, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 264, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 274, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 284, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/csharp.js: line 285, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/csp.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/css.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/css.js: line 1, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/css.js: line 46, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/css.js: line 121, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/css.js: line 159, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/css.js: line 222, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/css.js: line 239, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/css.js: line 564, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/css.js: line 565, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/css.js: line 566, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/css.js: line 569, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/css.js: line 570, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/css.js: line 571, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/css.js: line 572, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/css.js: line 637, col 11, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/css.js: line 687, col 15, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/d.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 57, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 58, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 60, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 61, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 64, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 68, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 89, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 103, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 113, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 127, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 139, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 149, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 161, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 173, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 184, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 195, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 206, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 218, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 230, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/d.js: line 240, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/dart.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dart.js: line 19, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dart.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dart.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dart.js: line 124, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dart.js: line 124, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/dart.js: line 124, col 61, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/dart.js: line 126, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dart.js: line 192, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/delphi.js: line 8, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/delphi.js: line 137, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/delphi.js: line 146, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/delphi.js: line 159, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/delphi.js: line 167, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/delphi.js: line 186, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/delphi.js: line 190, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/delphi.js: line 195, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/diff.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/django.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/dns.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/dockerfile.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/dos.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dos.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dos.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dos.js: line 41, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/dsconfig.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dsconfig.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dsconfig.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dsconfig.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/dts.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dts.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dts.js: line 43, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dts.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dts.js: line 84, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dts.js: line 89, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dts.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dts.js: line 105, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dts.js: line 110, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dts.js: line 118, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dts.js: line 123, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/dts.js: line 136, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/dust.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/ebnf.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ebnf.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ebnf.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ebnf.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/elixir.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 46, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 51, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 62, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 72, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 80, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 114, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 114, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/elixir.js: line 121, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 124, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/elixir.js: line 135, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 138, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/elixir.js: line 145, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 150, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/elixir.js: line 163, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/elixir.js: line 173, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 218, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 229, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elixir.js: line 234, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/elm.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elm.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elm.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elm.js: line 42, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elm.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/elm.js: line 55, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/erlang-repl.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/erlang.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/erlang.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/erlang.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/erlang.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/erlang.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/erlang.js: line 27, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/erlang.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/erlang.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/erlang.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/erlang.js: line 60, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/erlang.js: line 64, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/erlang.js: line 82, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/erlang.js: line 103, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/erlang.js: line 119, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/erlang.js: line 143, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/erlang.js: line 182, col 40, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/erlang.js: line 182, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/excel.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/flix.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/flix.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/flix.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/flix.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/fortran.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fortran.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fortran.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fortran.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fortran.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fortran.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fortran.js: line 51, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fortran.js: line 61, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fortran.js: line 70, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fortran.js: line 273, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fortran.js: line 277, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/fsharp.js: line 32, col 17, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/fsharp.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 33, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/fsharp.js: line 42, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 61, col 17, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/fsharp.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 64, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 65, col 5, Misleading line break before '+'; readers may interpret this as an expression boundary.
node_modules/highlight.js/lib/languages/fsharp.js: line 66, col 5, Misleading line break before '+'; readers may interpret this as an expression boundary.
node_modules/highlight.js/lib/languages/fsharp.js: line 66, col 18, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/fsharp.js: line 80, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 147, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 153, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 169, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 183, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 191, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 234, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 275, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 283, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 288, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 296, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 298, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 305, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 306, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 317, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 317, col 36, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 319, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 324, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 325, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 325, col 42, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/fsharp.js: line 327, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 329, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 330, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 332, col 36, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
node_modules/highlight.js/lib/languages/fsharp.js: line 351, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 353, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 355, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 369, col 20, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
node_modules/highlight.js/lib/languages/fsharp.js: line 393, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 394, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 397, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 423, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 430, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 434, col 26, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/fsharp.js: line 443, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 454, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 463, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 475, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 481, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 488, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 504, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 523, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 539, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/fsharp.js: line 569, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/gams.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gams.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gams.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gams.js: line 45, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gams.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gams.js: line 71, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gams.js: line 84, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gams.js: line 85, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/gauss.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gauss.js: line 112, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gauss.js: line 114, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gauss.js: line 148, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gauss.js: line 163, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gauss.js: line 185, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gauss.js: line 192, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gauss.js: line 193, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gauss.js: line 210, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gauss.js: line 216, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gauss.js: line 225, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gauss.js: line 245, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/gcode.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gcode.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gcode.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gcode.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gcode.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gcode.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/gml.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gml.js: line 45, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gml.js: line 1874, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gml.js: line 1884, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/gml.js: line 2592, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/go.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/go.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/go.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/go.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/go.js: line 83, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/golo.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/gradle.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/groovy.js: line 8, col 33, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/groovy.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/groovy.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/groovy.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/groovy.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/groovy.js: line 43, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/groovy.js: line 47, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/groovy.js: line 69, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/groovy.js: line 80, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/groovy.js: line 91, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/handlebars.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 47, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 61, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 62, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 64, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 65, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 66, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 83, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 90, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 98, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 104, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 124, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 139, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 155, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 165, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 173, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 178, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 186, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/handlebars.js: line 190, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/haskell.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/haskell.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/haskell.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/haskell.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/haskell.js: line 41, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/haskell.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/haskell.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/haskell.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/haskell.js: line 75, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/haskell.js: line 76, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/haskell.js: line 78, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/haskell.js: line 84, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/haskell.js: line 84, col 66, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/haskell.js: line 88, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/haskell.js: line 88, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/haskell.js: line 92, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/haskell.js: line 96, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/haxe.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/http.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/http.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/http.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/http.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/http.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/hy.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 47, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 53, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 58, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 61, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 68, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 72, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 77, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 81, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 82, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 86, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 90, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/hy.js: line 101, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/inform7.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/inform7.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/ini.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ini.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ini.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ini.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ini.js: line 45, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ini.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ini.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ini.js: line 87, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ini.js: line 88, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ini.js: line 89, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ini.js: line 90, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ini.js: line 93, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/irpf90.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/irpf90.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/irpf90.js: line 19, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/irpf90.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/irpf90.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/irpf90.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/isbl.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 798, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 801, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 805, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 810, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 815, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 839, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 842, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 846, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 856, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 860, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 872, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 888, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 920, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 926, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 995, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1016, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1038, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1044, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1051, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1058, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1271, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1274, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1296, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1304, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1337, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1345, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1366, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1446, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1452, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1467, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1478, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1484, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1497, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1501, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1510, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1522, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1561, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1564, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1572, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1575, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1578, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1586, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1589, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1592, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1595, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1598, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1614, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1617, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1620, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1633, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1670, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1680, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1683, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1712, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1715, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1718, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1721, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1724, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1727, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1730, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1779, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1782, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1785, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1788, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1791, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1794, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1797, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1800, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1804, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1807, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1810, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1813, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1816, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1819, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1830, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1842, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1845, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1848, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1857, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1860, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1863, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1867, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1920, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1923, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1926, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1929, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1932, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1935, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1945, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1948, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1962, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1966, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1970, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1983, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 1986, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2000, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2003, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2006, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2010, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2013, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2016, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2019, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2022, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2025, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2049, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2052, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2055, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2067, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2076, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2080, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2083, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2087, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2091, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2112, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2116, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2137, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2146, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2154, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2157, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2172, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2209, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2212, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2215, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2224, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2228, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2319, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2754, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 2802, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3052, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3055, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3058, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3061, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3068, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3083, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3090, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3102, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3114, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3122, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3131, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3138, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3146, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3158, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3160, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/isbl.js: line 3173, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/java.js: line 3, col 12, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/java.js: line 10, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/java.js: line 11, col 7, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/java.js: line 13, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/java.js: line 14, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/java.js: line 15, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/java.js: line 18, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/java.js: line 19, col 7, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/java.js: line 25, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/java.js: line 57, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/java.js: line 64, col 8, Expected an assignment or function call and instead saw an expression.
node_modules/highlight.js/lib/languages/java.js: line 65, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/java.js: line 66, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/java.js: line 68, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/java.js: line 111, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/java.js: line 116, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/java.js: line 122, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/java.js: line 133, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/java.js: line 140, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/java.js: line 151, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/javascript.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 2, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 45, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 55, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 107, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 118, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 140, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 152, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 167, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 175, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 175, col 31, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 175, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/javascript.js: line 176, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 177, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 181, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 182, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 187, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 188, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 195, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/javascript.js: line 196, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 197, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 225, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 226, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 237, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 246, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 247, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 247, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/javascript.js: line 250, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 250, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/javascript.js: line 251, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 255, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/javascript.js: line 256, col 9, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/javascript.js: line 257, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/javascript.js: line 260, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/javascript.js: line 274, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 281, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 294, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 307, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 316, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 355, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 363, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 385, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 386, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 395, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 406, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 442, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 453, col 57, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
node_modules/highlight.js/lib/languages/javascript.js: line 463, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/javascript.js: line 464, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/javascript.js: line 469, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 476, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 503, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 513, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 517, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/javascript.js: line 525, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 536, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 555, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 563, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 586, col 16, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/javascript.js: line 586, col 33, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/jboss-cli.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/jboss-cli.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/jboss-cli.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/jboss-cli.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/jboss-cli.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/json.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/json.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/json.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/julia-repl.js: line 47, col 4, Missing semicolon.

node_modules/highlight.js/lib/languages/kotlin.js: line 3, col 12, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/kotlin.js: line 10, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/kotlin.js: line 11, col 7, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/kotlin.js: line 13, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/kotlin.js: line 14, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/kotlin.js: line 15, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/kotlin.js: line 18, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/kotlin.js: line 19, col 7, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/kotlin.js: line 25, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/kotlin.js: line 45, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/kotlin.js: line 57, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/kotlin.js: line 69, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/kotlin.js: line 75, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/kotlin.js: line 81, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/kotlin.js: line 85, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/kotlin.js: line 119, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/kotlin.js: line 123, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/kotlin.js: line 142, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/kotlin.js: line 143, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/kotlin.js: line 149, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/kotlin.js: line 162, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/lasso.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/lasso.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/lasso.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/lasso.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/lasso.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/lasso.js: line 47, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/lasso.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/lasso.js: line 60, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/lasso.js: line 64, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/latex.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 11, col 44, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 32, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 54, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 55, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 67, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 91, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 96, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 100, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 105, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 111, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 118, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 126, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 129, col 24, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 131, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 136, col 43, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 139, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 144, col 41, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 146, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 150, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 151, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 152, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 162, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 171, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 181, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 181, col 47, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 181, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 191, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 198, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 198, col 48, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 198, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 222, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/latex.js: line 223, col 5, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 223, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 229, col 5, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 229, col 18, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 229, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 232, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 232, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 243, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/latex.js: line 244, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/less.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 1, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/less.js: line 46, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 121, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 159, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 222, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 239, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 557, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 569, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 570, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 572, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 573, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 574, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 578, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 578, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 580, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 588, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 596, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 602, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 641, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 647, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 659, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 683, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 696, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 718, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 773, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/less.js: line 774, col 33, 'template literal syntax' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/livecodeserver.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livecodeserver.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livecodeserver.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livecodeserver.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/livescript.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 44, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 54, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 106, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 117, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 139, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 156, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 160, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 169, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 200, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 205, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 206, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 209, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 215, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 221, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 301, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 317, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/livescript.js: line 321, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/llvm.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/llvm.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/llvm.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/llvm.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/llvm.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/llvm.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/llvm.js: line 36, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/llvm.js: line 43, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/llvm.js: line 51, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/lua.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/lua.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/lua.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/lua.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/makefile.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/makefile.js: line 24, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/makefile.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/makefile.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/makefile.js: line 52, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/makefile.js: line 62, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/markdown.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/markdown.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/markdown.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/markdown.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/markdown.js: line 57, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/markdown.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/markdown.js: line 82, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/markdown.js: line 83, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/markdown.js: line 143, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/markdown.js: line 157, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/markdown.js: line 175, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/markdown.js: line 185, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/markdown.js: line 209, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/mathematica.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6638, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6643, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6644, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6645, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6646, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6648, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6649, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6650, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6652, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6654, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6660, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6666, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6667, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6669, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6675, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/mathematica.js: line 6687, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6692, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6697, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6703, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6709, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mathematica.js: line 6715, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/maxima.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/maxima.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/maxima.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/maxima.js: line 367, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/mercury.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mercury.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mercury.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mercury.js: line 45, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mercury.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mercury.js: line 51, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mercury.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/mercury.js: line 82, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/monkey.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/monkey.js: line 19, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/monkey.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/monkey.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/monkey.js: line 89, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/monkey.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/moonscript.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/moonscript.js: line 24, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/moonscript.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/moonscript.js: line 31, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/moonscript.js: line 70, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/moonscript.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/moonscript.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/n1ql.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/n1ql.js: line 181, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/n1ql.js: line 188, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/nestedtext.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nestedtext.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nestedtext.js: line 36, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nestedtext.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/nginx.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nginx.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nginx.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nginx.js: line 52, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/nim.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nim.js: line 57, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nim.js: line 128, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nim.js: line 134, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/nix.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nix.js: line 42, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nix.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nix.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nix.js: line 73, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/nsis.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 57, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 111, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 147, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 149, col 44, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/nsis.js: line 152, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 158, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 165, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 171, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 174, col 25, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/nsis.js: line 177, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 182, col 20, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/nsis.js: line 186, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 192, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 198, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 224, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 439, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 495, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 509, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/nsis.js: line 510, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/objectivec.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/objectivec.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/objectivec.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/objectivec.js: line 145, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/objectivec.js: line 155, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/objectivec.js: line 163, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/objectivec.js: line 169, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/ocaml.js: line 79, col 4, Missing semicolon.

node_modules/highlight.js/lib/languages/openscad.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/openscad.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/openscad.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/openscad.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/openscad.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/openscad.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/openscad.js: line 46, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/openscad.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/oxygene.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/oxygene.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/oxygene.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/oxygene.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/oxygene.js: line 45, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/oxygene.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/oxygene.js: line 70, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/parser3.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/perl.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/perl.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/perl.js: line 245, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/perl.js: line 246, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/perl.js: line 250, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/perl.js: line 256, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/perl.js: line 261, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/perl.js: line 271, col 11, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/perl.js: line 280, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/perl.js: line 285, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/perl.js: line 299, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/perl.js: line 299, col 49, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/perl.js: line 299, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/perl.js: line 300, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/perl.js: line 301, col 7, Misleading line break before '?'; readers may interpret this as an expression boundary.
node_modules/highlight.js/lib/languages/perl.js: line 318, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/perl.js: line 318, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/perl.js: line 327, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/perl.js: line 411, col 62, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/perl.js: line 431, col 53, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/pf.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pf.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/pgsql.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pgsql.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pgsql.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pgsql.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pgsql.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pgsql.js: line 71, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pgsql.js: line 75, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pgsql.js: line 80, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pgsql.js: line 97, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pgsql.js: line 103, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pgsql.js: line 107, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pgsql.js: line 115, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pgsql.js: line 193, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pgsql.js: line 284, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/php.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 19, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 41, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 44, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 54, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 55, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 66, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/php.js: line 67, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/php.js: line 68, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/php.js: line 70, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/php.js: line 74, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 181, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 284, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 284, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/php.js: line 286, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 287, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/php.js: line 298, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 306, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 306, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/php.js: line 307, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/php.js: line 312, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 331, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 346, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/php.js: line 348, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/pony.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pony.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pony.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pony.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pony.js: line 45, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pony.js: line 51, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/pony.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/powershell.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 41, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 69, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 71, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 76, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 92, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 97, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 120, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 134, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 148, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 167, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 176, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 185, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 215, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 230, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 245, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 253, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 274, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/powershell.js: line 289, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/processing.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/processing.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/processing.js: line 274, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/processing.js: line 275, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/processing.js: line 278, col 42, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/processing.js: line 290, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/processing.js: line 300, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/processing.js: line 310, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/processing.js: line 339, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/processing.js: line 350, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/processing.js: line 373, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/processing.js: line 419, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/processing.js: line 425, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/processing.js: line 426, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/prolog.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/prolog.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/prolog.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/prolog.js: line 36, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/prolog.js: line 42, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/prolog.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/prolog.js: line 58, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/prolog.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/prolog.js: line 68, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/prolog.js: line 72, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/properties.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/properties.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/properties.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/properties.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/properties.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/properties.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/properties.js: line 19, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/protobuf.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/protobuf.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/protobuf.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/puppet.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/puppet.js: line 46, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/puppet.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/puppet.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/puppet.js: line 54, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/puppet.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/purebasic.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/purebasic.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/python.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 10, col 20, 'Unicode property escape' is only available in ES9 (use 'esversion: 9').
node_modules/highlight.js/lib/languages/python.js: line 10, col 20, 'Unicode property escape' is only available in ES9 (use 'esversion: 9').
node_modules/highlight.js/lib/languages/python.js: line 10, col 20, 'Unicode RegExp flag' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/python.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 46, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 118, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 130, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 146, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 154, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 159, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 167, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 172, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 256, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 257, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 257, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/python.js: line 263, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 263, col 21, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/python.js: line 264, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 279, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/python.js: line 282, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/python.js: line 292, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/python.js: line 295, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/python.js: line 298, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/python.js: line 301, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/python.js: line 307, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/python.js: line 311, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/python.js: line 328, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/q.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/qml.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/qml.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/qml.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/qml.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/qml.js: line 50, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/qml.js: line 62, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/qml.js: line 76, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/qml.js: line 93, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/r.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/r.js: line 19, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/r.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/r.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/r.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/reasonml.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 27, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 41, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 53, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 58, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 71, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 76, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 86, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 105, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 122, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 139, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 186, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 202, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/reasonml.js: line 220, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/roboconf.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/roboconf.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/routeros.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/routeros.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/routeros.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/routeros.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/routeros.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/routeros.js: line 27, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/routeros.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/routeros.js: line 55, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/rsl.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/rsl.js: line 88, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/rsl.js: line 97, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/rsl.js: line 109, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/ruby.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 27, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 31, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 55, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 151, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 152, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 153, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 159, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/ruby.js: line 184, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 192, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 257, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/ruby.js: line 310, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 312, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 313, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/ruby.js: line 315, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/rust.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/rust.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/rust.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/rust.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/rust.js: line 75, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/rust.js: line 83, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/rust.js: line 150, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/sas.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sas.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sas.js: line 125, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sas.js: line 408, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sas.js: line 471, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sas.js: line 529, col 35, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/sas.js: line 541, col 29, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/scala.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scala.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scala.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scala.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scala.js: line 63, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scala.js: line 69, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scala.js: line 75, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scala.js: line 108, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scala.js: line 115, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scala.js: line 126, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scala.js: line 141, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scala.js: line 149, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scala.js: line 176, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/scheme.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scheme.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scheme.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scheme.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scheme.js: line 54, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scheme.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scheme.js: line 82, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scheme.js: line 84, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scheme.js: line 95, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scheme.js: line 100, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scheme.js: line 105, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scheme.js: line 110, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scheme.js: line 135, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scheme.js: line 142, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scheme.js: line 165, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/scilab.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/scss.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scss.js: line 1, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/scss.js: line 46, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scss.js: line 121, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scss.js: line 159, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scss.js: line 222, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scss.js: line 239, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scss.js: line 566, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scss.js: line 567, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scss.js: line 568, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scss.js: line 570, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scss.js: line 571, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scss.js: line 572, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/scss.js: line 573, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/smali.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/smali.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/smali.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/smalltalk.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/smalltalk.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/smalltalk.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/sqf.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sqf.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sqf.js: line 27, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sqf.js: line 49, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sqf.js: line 61, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sqf.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sqf.js: line 2461, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/sql.js: line 24, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 25, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 26, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 44, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 52, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 59, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 89, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 101, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 473, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 562, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 582, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 601, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 603, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 603, col 21, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/sql.js: line 603, col 40, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/sql.js: line 603, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/sql.js: line 607, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 612, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 618, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 619, col 44, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/sql.js: line 627, col 32, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 627, col 53, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/sql.js: line 628, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/sql.js: line 630, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/sql.js: line 634, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/sql.js: line 649, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/sql.js: line 656, col 29, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/sql.js: line 667, col 29, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/stan.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stan.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stan.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stan.js: line 33, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stan.js: line 60, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stan.js: line 296, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stan.js: line 363, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stan.js: line 377, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stan.js: line 390, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stan.js: line 418, col 53, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/stan.js: line 429, col 24, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/stan.js: line 442, col 49, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/stan.js: line 449, col 37, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/stan.js: line 458, col 38, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/step21.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/step21.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/step21.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/step21.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/stylus.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stylus.js: line 1, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/stylus.js: line 46, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stylus.js: line 121, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stylus.js: line 159, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stylus.js: line 222, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stylus.js: line 239, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stylus.js: line 566, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stylus.js: line 568, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stylus.js: line 569, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stylus.js: line 574, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stylus.js: line 591, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/stylus.js: line 594, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/subunit.js: line 8, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/subunit.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/subunit.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/subunit.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/swift.js: line 29, col 17, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 30, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 58, col 17, 'rest operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 60, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 61, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 62, col 5, Misleading line break before '+'; readers may interpret this as an expression boundary.
node_modules/highlight.js/lib/languages/swift.js: line 63, col 5, Misleading line break before '+'; readers may interpret this as an expression boundary.
node_modules/highlight.js/lib/languages/swift.js: line 63, col 18, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 67, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 67, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 74, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 80, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 86, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 92, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 187, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 194, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 206, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 230, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 268, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 290, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 302, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 305, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 325, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 332, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 335, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 339, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 372, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 397, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 402, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 409, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 416, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 419, col 14, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 419, col 30, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 425, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 427, col 32, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 430, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 431, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 433, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 434, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 437, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 441, col 23, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 441, col 42, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 446, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 455, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 462, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 464, col 32, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 467, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 469, col 32, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 471, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 477, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 482, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 493, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 497, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 504, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 505, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 506, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 512, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 512, col 66, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 516, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 516, col 60, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 530, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 530, col 43, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 530, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 541, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 541, col 41, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 541, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 545, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 545, col 39, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 545, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 551, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 551, col 42, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 551, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 560, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 560, col 44, 'default parameters' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 560, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 568, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 583, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 586, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 590, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 592, col 12, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 594, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 601, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 611, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 619, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 621, col 31, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 623, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 627, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 634, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 661, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 666, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 667, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 668, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 677, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 683, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 691, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 692, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 693, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 694, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 697, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 698, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 703, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 707, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 711, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 729, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 735, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 736, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 737, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 740, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 748, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 771, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 787, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 800, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 812, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 813, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 819, col 8, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 819, col 22, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 820, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 820, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 823, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/swift.js: line 824, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 825, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 826, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 829, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 832, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 838, col 11, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 848, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 861, col 11, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 869, col 21, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 872, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 873, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 874, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 877, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/swift.js: line 878, col 7, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/taggerscript.js: line 8, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/taggerscript.js: line 24, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/taggerscript.js: line 29, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/taggerscript.js: line 34, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/taggerscript.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/tcl.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/tcl.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/tcl.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/tcl.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/tcl.js: line 190, col 4, Missing semicolon.

node_modules/highlight.js/lib/languages/thrift.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/thrift.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/thrift.js: line 66, col 18, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/tp.js: line 8, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/tp.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/tp.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/tp.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/tp.js: line 40, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/tp.js: line 110, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/twig.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/twig.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/twig.js: line 31, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/twig.js: line 89, col 3, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/twig.js: line 113, col 51, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/twig.js: line 113, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/twig.js: line 115, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/twig.js: line 129, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/twig.js: line 134, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/twig.js: line 146, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/twig.js: line 153, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/twig.js: line 165, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/twig.js: line 165, col 29, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/twig.js: line 165, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/twig.js: line 176, col 22, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/twig.js: line 189, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/twig.js: line 190, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/twig.js: line 191, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/typescript.js: line 1, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 2, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 45, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 55, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 107, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 118, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 140, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 152, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 167, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 175, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 175, col 31, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 175, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/typescript.js: line 176, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 177, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 181, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 182, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 187, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 188, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 195, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/typescript.js: line 196, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 197, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 225, col 7, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 226, col 7, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 237, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 246, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 247, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 247, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/typescript.js: line 250, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 250, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/typescript.js: line 251, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 255, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/typescript.js: line 256, col 9, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/typescript.js: line 257, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/typescript.js: line 260, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/typescript.js: line 274, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 281, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 294, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 307, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 316, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 355, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 363, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 385, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 386, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 395, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 406, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 442, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 453, col 57, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
node_modules/highlight.js/lib/languages/typescript.js: line 463, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/typescript.js: line 464, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/typescript.js: line 469, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 476, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 503, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 513, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 517, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/typescript.js: line 525, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 536, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 555, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 563, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 586, col 16, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 586, col 33, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 746, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 748, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 749, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 759, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 767, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 779, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 784, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 797, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 804, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 809, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 809, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/typescript.js: line 810, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 810, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/typescript.js: line 832, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/typescript.js: line 832, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/vbnet.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbnet.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbnet.js: line 21, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbnet.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbnet.js: line 36, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbnet.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbnet.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbnet.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbnet.js: line 67, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbnet.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbnet.js: line 99, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbnet.js: line 109, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbnet.js: line 121, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/vbscript.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbscript.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbscript.js: line 111, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbscript.js: line 122, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbscript.js: line 123, col 38, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/vbscript.js: line 131, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vbscript.js: line 139, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/verilog.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/verilog.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/verilog.js: line 465, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/verilog.js: line 469, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/verilog.js: line 542, col 47, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/verilog.js: line 546, col 47, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/vhdl.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vhdl.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vhdl.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vhdl.js: line 17, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vhdl.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vhdl.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vhdl.js: line 22, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vhdl.js: line 140, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/vhdl.js: line 168, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/wasm.js: line 11, col 8, Expected an assignment or function call and instead saw an expression.
node_modules/highlight.js/lib/languages/wasm.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wasm.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wasm.js: line 16, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wasm.js: line 64, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wasm.js: line 76, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wasm.js: line 81, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wasm.js: line 87, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wasm.js: line 94, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wasm.js: line 100, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wasm.js: line 106, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/wren.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 32, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 37, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 41, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 56, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 79, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 84, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 88, col 22, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/wren.js: line 108, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 132, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 134, col 25, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/wren.js: line 138, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 144, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 152, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 159, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 169, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 171, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 184, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 197, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 209, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 228, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 228, col 20, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/wren.js: line 228, col 33, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/wren.js: line 228, col 51, 'spread operator' is only available in ES6 (use 'esversion: 6').
node_modules/highlight.js/lib/languages/wren.js: line 229, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/wren.js: line 241, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/xl.js: line 9, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xl.js: line 39, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xl.js: line 114, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xl.js: line 136, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xl.js: line 141, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xl.js: line 148, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xl.js: line 154, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xl.js: line 160, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xl.js: line 165, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xl.js: line 169, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xl.js: line 175, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/xml.js: line 10, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xml.js: line 12, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xml.js: line 13, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xml.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xml.js: line 18, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xml.js: line 28, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xml.js: line 32, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xml.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xml.js: line 38, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/xquery.js: line 15, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xquery.js: line 115, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xquery.js: line 176, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xquery.js: line 200, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xquery.js: line 246, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xquery.js: line 252, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xquery.js: line 257, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xquery.js: line 263, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xquery.js: line 289, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xquery.js: line 294, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xquery.js: line 310, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xquery.js: line 317, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/xquery.js: line 331, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlight.js/lib/languages/yaml.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 14, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 20, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 35, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 48, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 72, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 88, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 89, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 90, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 91, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 92, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 97, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 104, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 111, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 119, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 193, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/yaml.js: line 193, col 25, 'spread operator' is only available in ES6 (use 'esversion: 6').

node_modules/highlight.js/lib/languages/zephir.js: line 11, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/zephir.js: line 23, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/zephir.js: line 24, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/highlight.js/lib/languages/zephir.js: line 30, col 3, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 612, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 705, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 722, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 879, Expected an assignment or function call and instead saw an expression.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 880, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 888, Value of 'e' may be overwritten in IE 8 and earlier.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 930, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 1010, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 1013, Expected an assignment or function call and instead saw an expression.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 1014, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 1104, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 1188, Expected an assignment or function call and instead saw an expression.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 1257, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 1370, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 1379, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 1569, Expected an assignment or function call and instead saw an expression.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 1570, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 1634, Expected an assignment or function call and instead saw an expression.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 1922, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 1931, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 1947, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 2115, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 2136, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 2185, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 2273, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 2275, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 2439, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 2440, Expected an assignment or function call and instead saw an expression.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 2441, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 2600, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 3031, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 3176, Expected an assignment or function call and instead saw an expression.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 3177, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 3178, Expected an assignment or function call and instead saw an expression.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 3179, Missing semicolon.
node_modules/highlightjs-line-numbers.js/dist/highlightjs-line-numbers.min.js: line 1, col 3196, Expected an assignment or function call and instead saw an expression.

node_modules/highlightjs-line-numbers.js/src/highlightjs-line-numbers.js: line 187, col 53, Missing semicolon.
node_modules/highlightjs-line-numbers.js/src/highlightjs-line-numbers.js: line 188, col 34, Missing semicolon.

node_modules/ipaddr.js/ipaddr.min.js: line 1, col 40, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 95, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 152, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 200, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 242, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 406, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 495, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 578, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 725, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1067, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1097, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1154, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1167, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1291, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1366, Expected an assignment or function call and instead saw an expression.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1367, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1376, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1518, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1555, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1577, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1613, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1629, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1630, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1745, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1861, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 1874, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 2541, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 2575, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 2739, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 2791, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 2804, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 2866, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 2984, Expected an assignment or function call and instead saw an expression.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 2985, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 2997, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3073, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3137, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3202, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3230, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3296, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3358, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3361, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3413, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3519, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3586, Expected an assignment or function call and instead saw an expression.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3607, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3615, Value of 't' may be overwritten in IE 8 and earlier.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3686, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3743, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3810, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3818, Value of 't' may be overwritten in IE 8 and earlier.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3828, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3893, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3901, Value of 't' may be overwritten in IE 8 and earlier.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 3911, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4030, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4074, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4250, Expected an assignment or function call and instead saw an expression.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4271, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4279, Value of 't' may be overwritten in IE 8 and earlier.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4350, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4378, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4503, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4534, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4544, Expected a conditional expression and instead saw an assignment.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4571, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4610, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4720, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4725, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4801, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4829, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4843, Expected a conditional expression and instead saw an assignment.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4883, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4913, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4954, Expected an assignment or function call and instead saw an expression.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4964, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 4972, Expected a conditional expression and instead saw an assignment.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5101, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5112, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5162, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5175, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5217, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5402, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5443, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5623, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5631, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5760, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5778, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5786, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5830, Expected an assignment or function call and instead saw an expression.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5888, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5924, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5953, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 5982, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 6096, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 6108, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 6119, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 6152, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 6241, If a strict mode function is executed using function invocation, its 'this' value will be undefined.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 6254, Expected an assignment or function call and instead saw an expression.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 6255, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 7232, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 7274, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 7308, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 7471, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 7523, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 7536, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 7685, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 7697, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 7805, Expected an assignment or function call and instead saw an expression.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 7806, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 7819, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 7895, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 7932, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 7938, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 7966, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8021, Expected an assignment or function call and instead saw an expression.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8031, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8076, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8095, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8110, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8190, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8213, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8245, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8267, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8413, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8498, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8542, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8561, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8576, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8651, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8674, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8706, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8728, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8769, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8828, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8849, Expected a conditional expression and instead saw an assignment.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8900, Expected an assignment or function call and instead saw an expression.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8915, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 8957, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9020, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9023, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9075, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9181, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9249, Expected an assignment or function call and instead saw an expression.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9270, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9278, Value of 't' may be overwritten in IE 8 and earlier.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9296, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9356, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9413, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9498, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9557, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9565, Value of 't' may be overwritten in IE 8 and earlier.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9575, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9692, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9700, Value of 't' may be overwritten in IE 8 and earlier.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9710, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9755, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9932, Expected an assignment or function call and instead saw an expression.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9953, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9961, Value of 't' may be overwritten in IE 8 and earlier.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 9979, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 10039, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 10067, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 10213, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 10244, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 10421, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 10501, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 10529, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 10549, Expected a conditional expression and instead saw an assignment.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 10603, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 10983, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 10995, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 11125, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 11167, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 11175, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 11219, Expected an assignment or function call and instead saw an expression.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 11278, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 11308, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 11465, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 11532, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 11611, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 11792, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 11848, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 11888, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 11896, Value of 't' may be overwritten in IE 8 and earlier.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 11974, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 12000, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 12090, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 12122, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 12363, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 12434, Expected an assignment or function call and instead saw an expression.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 12435, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 12441, Expected an assignment or function call and instead saw an expression.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 12442, Missing semicolon.
node_modules/ipaddr.js/ipaddr.min.js: line 1, col 12487, Expected an assignment or function call and instead saw an expression.

node_modules/ipaddr.js/lib/ipaddr.js: line 6, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 7, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 8, col 31, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 9, col 32, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 10, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 11, col 31, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 15, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 15, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 16, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 16, col 33, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 18, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 24, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 25, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 27, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 28, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 29, col 34, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 39, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 40, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 41, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 42, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 90, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 91, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 93, col 18, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 112, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 113, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 144, col 29, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 152, col 20, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 158, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 170, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 229, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 247, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 249, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 251, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 262, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 297, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 317, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 318, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 319, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 320, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 321, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 370, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 393, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 404, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 407, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 409, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 426, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 431, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 432, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 434, col 22, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 448, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 449, col 17, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 459, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 460, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 476, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 477, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 503, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 504, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 505, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 525, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 600, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 619, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 621, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 623, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 642, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 644, col 18, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 673, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 674, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 675, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 676, col 18, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 688, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 689, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 690, col 22, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 697, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 700, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 713, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 714, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 715, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 725, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 726, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 728, col 22, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 735, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 738, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 748, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 749, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 750, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 751, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 752, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 765, col 20, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 782, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 783, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 784, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 785, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 786, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 795, col 29, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 814, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 840, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 856, col 29, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 863, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 873, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 893, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 896, col 32, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
node_modules/ipaddr.js/lib/ipaddr.js: line 903, col 28, Missing semicolon.
node_modules/ipaddr.js/lib/ipaddr.js: line 905, col 41, Missing semicolon.
node_modules/ipaddr.js/lib/ipaddr.js: line 941, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 942, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 943, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 959, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 1009, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
node_modules/ipaddr.js/lib/ipaddr.js: line 1022, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).

src/als.js: line 1, col 1, Use the function form of "use strict".
src/als.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/als.js: line 3, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/als.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/als.js: line 3, col 31, 'require' is not defined.
src/als.js: line 7, col 1, 'module' is not defined.

src/analytics.js: line 1, col 1, Use the function form of "use strict".
src/analytics.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 19, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 21, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 23, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 32, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 33, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 35, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 37, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 39, col 18, 'async functions' is only available in ES8 (use 'esversion: 8').
src/analytics.js: line 45, col 36, 'async functions' is only available in ES8 (use 'esversion: 8').
src/analytics.js: line 45, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 54, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 68, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 68, col 10, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 68, col 29, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 83, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 93, col 21, 'async functions' is only available in ES8 (use 'esversion: 8').
src/analytics.js: line 93, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 95, col 22, 'async functions' is only available in ES8 (use 'esversion: 8').
src/analytics.js: line 108, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 114, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 118, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 127, col 23, 'async functions' is only available in ES8 (use 'esversion: 8').
src/analytics.js: line 128, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 129, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 130, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 131, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 134, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 138, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 139, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 139, col 66, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 139, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 140, col 20, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 140, col 32, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 182, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 182, col 10, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 182, col 29, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 183, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 193, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 198, col 23, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 202, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
src/analytics.js: line 205, col 15, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 208, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 209, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 214, col 10, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 218, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 220, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 224, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 227, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 234, col 33, 'async functions' is only available in ES8 (use 'esversion: 8').
src/analytics.js: line 237, col 15, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 245, col 5, 'async functions' is only available in ES8 (use 'esversion: 8').
src/analytics.js: line 246, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 251, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 253, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 266, col 24, 'async functions' is only available in ES8 (use 'esversion: 8').
src/analytics.js: line 267, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 270, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 270, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/analytics.js: line 276, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 277, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 281, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
src/analytics.js: line 283, col 60, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 284, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 285, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 286, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/analytics.js: line 290, col 31, 'async functions' is only available in ES8 (use 'esversion: 8').
src/analytics.js: line 297, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
src/analytics.js: line 3, col 17, 'require' is not defined.
src/analytics.js: line 4, col 17, 'require' is not defined.
src/analytics.js: line 5, col 15, 'require' is not defined.
src/analytics.js: line 6, col 16, 'require' is not defined.
src/analytics.js: line 7, col 14, 'require' is not defined.
src/analytics.js: line 8, col 11, 'require' is not defined.
src/analytics.js: line 12, col 12, 'require' is not defined.
src/analytics.js: line 13, col 15, 'require' is not defined.
src/analytics.js: line 14, col 17, 'require' is not defined.
src/analytics.js: line 15, col 14, 'require' is not defined.
src/analytics.js: line 16, col 16, 'require' is not defined.
src/analytics.js: line 17, col 21, 'require' is not defined.
src/analytics.js: line 304, col 1, 'require' is not defined.
src/analytics.js: line 10, col 30, 'setTimeout' is not defined.
src/analytics.js: line 19, col 19, 'module' is not defined.
src/analytics.js: line 196, col 15, 'Promise' is not defined.
src/analytics.js: line 259, col 18, 'Promise' is not defined.
src/analytics.js: line 270, col 35, 'Promise' is not defined.

src/batch.js: line 2, col 1, Use the function form of "use strict".
src/batch.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 13, col 28, 'async functions' is only available in ES8 (use 'esversion: 8').
src/batch.js: line 36, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 37, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 43, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 44, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 45, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 46, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 47, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 48, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 48, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/batch.js: line 51, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 56, col 56, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
src/batch.js: line 72, col 24, 'async functions' is only available in ES8 (use 'esversion: 8').
src/batch.js: line 82, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 83, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 87, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 89, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/batch.js: line 4, col 14, 'require' is not defined.
src/batch.js: line 6, col 12, 'require' is not defined.
src/batch.js: line 7, col 15, 'require' is not defined.
src/batch.js: line 104, col 1, 'require' is not defined.
src/batch.js: line 11, col 30, 'setTimeout' is not defined.
src/batch.js: line 13, col 1, 'exports' is not defined.
src/batch.js: line 72, col 1, 'exports' is not defined.
src/batch.js: line 104, col 24, 'exports' is not defined.

src/cache.js: line 1, col 1, Use the function form of "use strict".
src/cache.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/cache.js: line 3, col 21, 'require' is not defined.
src/cache.js: line 5, col 1, 'module' is not defined.

src/cacheCreate.js: line 1, col 1, Use the function form of "use strict".
src/cacheCreate.js: line 3, col 1, 'module' is not defined.
src/cacheCreate.js: line 3, col 18, 'require' is not defined.

src/constants.js: line 1, col 1, Use the function form of "use strict".
src/constants.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 15, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 16, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 17, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 18, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 19, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 20, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 21, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 22, col 5, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/constants.js: line 3, col 14, 'require' is not defined.
src/constants.js: line 5, col 27, '__dirname' is not defined.
src/constants.js: line 14, col 1, 'exports' is not defined.
src/constants.js: line 25, col 1, 'exports' is not defined.
src/constants.js: line 26, col 1, 'exports' is not defined.

src/coverPhoto.js: line 1, col 1, Use the function form of "use strict".
src/coverPhoto.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/coverPhoto.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/coverPhoto.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/coverPhoto.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/coverPhoto.js: line 20, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/coverPhoto.js: line 20, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/coverPhoto.js: line 21, col 21, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/coverPhoto.js: line 22, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/coverPhoto.js: line 22, col 43, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/coverPhoto.js: line 23, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/coverPhoto.js: line 4, col 15, 'require' is not defined.
src/coverPhoto.js: line 5, col 14, 'require' is not defined.
src/coverPhoto.js: line 9, col 20, 'module' is not defined.

src/emailer.js: line 1, col 1, Use the function form of "use strict".
src/emailer.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 8, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 18, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 19, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 20, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 22, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 23, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 25, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 26, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 38, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 41, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 41, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 42, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 53, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 56, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 56, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 57, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 58, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 62, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 62, col 30, 'async functions' is only available in ES8 (use 'esversion: 8').
src/emailer.js: line 62, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 65, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 67, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 68, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 74, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 74, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 79, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 79, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 80, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 80, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 81, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 85, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
src/emailer.js: line 85, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 86, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 87, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 94, col 23, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 98, col 24, 'async functions' is only available in ES8 (use 'esversion: 8').
src/emailer.js: line 98, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 99, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 100, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 101, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 103, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 103, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
src/emailer.js: line 103, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 104, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 105, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 110, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 112, col 32, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 118, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 122, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 163, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 166, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 187, col 20, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 187, col 23, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/emailer.js: line 189, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 209, col 28, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 209, col 31, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/emailer.js: line 209, col 43, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 209, col 46, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/emailer.js: line 216, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
src/emailer.js: line 216, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 221, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 228, col 6, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 228, col 90, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 228, col 100, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 228, col 105, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 228, col 115, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 232, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 239, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 244, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 247, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 251, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 253, col 16, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 253, col 19, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/emailer.js: line 253, col 44, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 253, col 47, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/emailer.js: line 258, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 270, col 23, 'async functions' is only available in ES8 (use 'esversion: 8').
src/emailer.js: line 270, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 271, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 272, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 275, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 288, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 290, col 24, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 291, col 33, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 293, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 293, col 16, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/emailer.js: line 298, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 309, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 309, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 314, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 317, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 319, col 18, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 331, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 352, col 27, 'async functions' is only available in ES8 (use 'esversion: 8').
src/emailer.js: line 352, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 358, col 17, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 363, col 30, 'async functions' is only available in ES8 (use 'esversion: 8').
src/emailer.js: line 363, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 364, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/emailer.js: line 364, col 40, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/emailer.js: line 3, col 17, 'require' is not defined.
src/emailer.js: line 4, col 15, 'require' is not defined.
src/emailer.js: line 5, col 20, 'require' is not defined.
src/emailer.js: line 6, col 20, 'require' is not defined.
src/emailer.js: line 7, col 27, 'require' is not defined.
src/emailer.js: line 8, col 24, 'require' is not defined.
src/emailer.js: line 9, col 13, 'require' is not defined.
src/emailer.js: line 10, col 14, 'require' is not defined.
src/emailer.js: line 11, col 12, 'require' is not defined.
src/emailer.js: line 12, col 11, 'require' is not defined.
src/emailer.js: line 13, col 13, 'require' is not defined.
src/emailer.js: line 15, col 14, 'require' is not defined.
src/emailer.js: line 16, col 17, 'require' is not defined.
src/emailer.js: line 17, col 14, 'require' is not defined.
src/emailer.js: line 18, col 20, 'require' is not defined.
src/emailer.js: line 19, col 16, 'require' is not defined.
src/emailer.js: line 20, col 14, 'require' is not defined.
src/emailer.js: line 368, col 1, 'require' is not defined.
src/emailer.js: line 23, col 17, 'module' is not defined.
src/emailer.js: line 74, col 45, 'Promise' is not defined.
src/emailer.js: line 85, col 15, 'Promise' is not defined.
src/emailer.js: line 103, col 29, 'Promise' is not defined.
src/emailer.js: line 309, col 35, 'Promise' is not defined.
src/emailer.js: line 238, col 13, 'process' is not defined.
src/emailer.js: line 246, col 13, 'process' is not defined.

src/events.js: line 2, col 1, Use the function form of "use strict".
src/events.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 86, col 14, 'async functions' is only available in ES8 (use 'esversion: 8').
src/events.js: line 87, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 90, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 92, col 9, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 95, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 99, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 105, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
src/events.js: line 109, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 119, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 120, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 121, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 121, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 122, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 127, col 33, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 127, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 136, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 137, col 32, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 137, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 148, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 150, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 152, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 156, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 156, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 167, col 24, 'async functions' is only available in ES8 (use 'esversion: 8').
src/events.js: line 167, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 168, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 168, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 172, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 173, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 173, col 51, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 175, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 178, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 180, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 181, col 28, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 181, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 191, col 15, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 195, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 195, col 59, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 198, col 30, 'async functions' is only available in ES8 (use 'esversion: 8').
src/events.js: line 198, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 199, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 199, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 199, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 203, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 204, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 209, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 221, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/events.js: line 222, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 222, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 228, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 228, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 233, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 234, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 239, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 247, col 23, 'async functions' is only available in ES8 (use 'esversion: 8').
src/events.js: line 248, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 248, col 34, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 248, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 249, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 250, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/events.js: line 252, col 40, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 252, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 253, col 40, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/events.js: line 253, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 261, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
src/events.js: line 262, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
src/events.js: line 262, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/events.js: line 4, col 19, 'require' is not defined.
src/events.js: line 5, col 11, 'require' is not defined.
src/events.js: line 7, col 12, 'require' is not defined.
src/events.js: line 8, col 15, 'require' is not defined.
src/events.js: line 9, col 14, 'require' is not defined.
src/events.js: line 10, col 15, 'require' is not defined.
src/events.js: line 11, col 17, 'require' is not defined.
src/events.js: line 267, col 1, 'require' is not defined.
src/events.js: line 13, col 16, 'module' is not defined.
src/events.js: line 97, col 11, 'Promise' is not defined.
src/events.js: line 134, col 26, 'Promise' is not defined.
src/events.js: line 172, col 34, 'Promise' is not defined.
src/events.js: line 178, col 28, 'Promise' is not defined.
src/events.js: line 228, col 39, 'Promise' is not defined.
src/events.js: line 255, col 11, 'Promise' is not defined.

src/file.js: line 1, col 1, Use the function form of "use strict".
src/file.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 7, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 17, col 24, 'async functions' is only available in ES8 (use 'esversion: 8').
src/file.js: line 21, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/file.js: line 23, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 28, col 21, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/file.js: line 32, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/file.js: line 32, col 42, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/file.js: line 37, col 22, 'async functions' is only available in ES8 (use 'esversion: 8').
src/file.js: line 38, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 49, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 57, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 58, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 63, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/file.js: line 66, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/file.js: line 78, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
src/file.js: line 103, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
src/file.js: line 111, col 29, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/file.js: line 119, col 13, 'async functions' is only available in ES8 (use 'esversion: 8').
src/file.js: line 131, col 17, 'async functions' is only available in ES8 (use 'esversion: 8').
src/file.js: line 136, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 141, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 143, col 21, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/file.js: line 149, col 13, 'async functions' is only available in ES8 (use 'esversion: 8').
src/file.js: line 150, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 151, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 151, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
src/file.js: line 151, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/file.js: line 152, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/file.js: line 155, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/file.js: line 3, col 12, 'require' is not defined.
src/file.js: line 4, col 15, 'require' is not defined.
src/file.js: line 5, col 14, 'require' is not defined.
src/file.js: line 6, col 17, 'require' is not defined.
src/file.js: line 7, col 20, 'require' is not defined.
src/file.js: line 8, col 14, 'require' is not defined.
src/file.js: line 9, col 18, 'require' is not defined.
src/file.js: line 11, col 17, 'require' is not defined.
src/file.js: line 57, col 18, 'require' is not defined.
src/file.js: line 158, col 1, 'require' is not defined.
src/file.js: line 15, col 14, 'module' is not defined.
src/file.js: line 38, col 20, 'Buffer' is not defined.
src/file.js: line 120, col 21, 'process' is not defined.
src/file.js: line 124, col 9, 'process' is not defined.
src/file.js: line 132, col 21, 'process' is not defined.
src/file.js: line 136, col 19, 'process' is not defined.
src/file.js: line 151, col 25, 'Promise' is not defined.

src/flags.js: line 1, col 1, Use the function form of "use strict".
src/flags.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 18, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 19, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 21, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 42, col 14, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 51, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 56, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 81, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 97, col 10, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 98, col 10, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 100, col 23, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 105, col 13, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 106, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 106, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 107, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 114, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 117, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 117, col 12, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/flags.js: line 119, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 121, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 122, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 125, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 131, col 18, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 131, col 33, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 133, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 133, col 57, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 133, col 66, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 133, col 71, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 137, col 31, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 137, col 46, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 138, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 139, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 145, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 145, col 21, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 149, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 154, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 162, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 162, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 162, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 165, col 35, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 177, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 178, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 179, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 180, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 181, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 186, col 14, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 187, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 188, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 189, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 194, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 197, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 198, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 201, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 201, col 72, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 201, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 203, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 203, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 203, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 204, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 204, col 42, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 209, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 209, col 16, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/flags.js: line 214, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 219, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 227, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 233, col 14, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 234, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 234, col 25, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 234, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 235, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 235, col 40, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 235, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 236, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 237, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 247, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 247, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 247, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 248, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 249, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 249, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 252, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 253, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 261, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 261, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 261, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 262, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 262, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 263, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 263, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 264, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 264, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 269, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 276, col 18, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 277, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 277, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 293, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 293, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 302, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 304, col 29, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 310, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 312, col 29, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 319, col 18, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 320, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 320, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 325, col 17, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 331, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 331, col 61, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 340, col 27, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 341, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 358, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 359, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 360, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 361, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 370, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 371, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 378, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 384, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 384, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 389, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 392, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 392, col 76, 'default parameters' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 393, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 398, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 398, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 410, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 417, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 429, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 430, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 433, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 442, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 448, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 452, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 457, col 29, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 475, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 481, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 482, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 482, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 482, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 483, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 483, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 484, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 484, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 485, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 485, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 487, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 487, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 488, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 488, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 491, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 491, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 491, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 492, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 493, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 495, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 496, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 497, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 503, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 503, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 503, col 42, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 504, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 504, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 504, col 42, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 505, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 506, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 506, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 506, col 43, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 507, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 507, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 507, col 47, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 508, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 508, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 508, col 43, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 510, col 56, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 510, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 511, col 56, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 511, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 513, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 513, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 513, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 514, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 514, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 514, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 515, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 515, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 515, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 516, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 516, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 516, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 518, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 518, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 522, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 527, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 528, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 528, col 61, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 529, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 529, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 529, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 530, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 538, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 538, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 549, col 19, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 551, col 10, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 552, col 10, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 557, col 52, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 557, col 60, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 557, col 66, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 557, col 70, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 557, col 75, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 557, col 83, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 560, col 23, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 560, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 561, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 566, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 567, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 567, col 50, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 568, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 569, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 571, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 571, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 583, col 10, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 584, col 10, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 590, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 590, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 599, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 603, col 17, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 603, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 604, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 609, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 609, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 610, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 615, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 616, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 624, col 17, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 624, col 63, 'default parameters' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 625, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 627, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 627, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 629, col 29, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 632, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 633, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 634, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 634, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 635, col 37, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 639, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 639, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 641, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 641, col 64, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 641, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 642, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 642, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 644, col 29, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 663, col 19, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 665, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 669, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 680, col 22, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 689, col 23, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 693, col 22, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 700, col 22, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 707, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 708, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 708, col 46, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 712, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 713, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 713, col 28, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 717, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 719, col 24, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 721, col 19, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 722, col 18, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 727, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 727, col 26, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 728, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 733, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 740, col 5, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 741, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 741, col 79, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 746, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 747, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 747, col 21, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 754, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 755, col 47, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 757, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 760, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 765, col 47, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 770, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 780, col 29, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 787, col 21, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 788, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 794, col 30, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 796, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 796, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 796, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 797, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 798, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 799, col 18, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 799, col 32, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 809, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 810, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 811, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 811, col 59, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 812, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 812, col 47, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 814, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 820, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 822, col 68, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 825, col 32, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 837, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 837, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 848, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 849, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 852, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 857, col 23, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 858, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 860, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 861, col 27, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 864, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 870, col 17, Confusing use of '!'.
src/flags.js: line 877, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 878, col 27, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 885, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 885, col 57, 'default parameters' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 886, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 886, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 890, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 891, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 893, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 893, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 896, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 896, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 901, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 902, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 906, col 24, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 909, col 19, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 910, col 18, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 912, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 917, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 920, col 24, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 922, col 19, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 923, col 18, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 925, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 938, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 943, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 945, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 952, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 954, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 961, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 962, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 965, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 989, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/flags.js: line 990, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 990, col 51, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 991, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/flags.js: line 991, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 993, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 1009, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/flags.js: line 3, col 11, 'require' is not defined.
src/flags.js: line 4, col 17, 'require' is not defined.
src/flags.js: line 5, col 19, 'require' is not defined.
src/flags.js: line 7, col 12, 'require' is not defined.
src/flags.js: line 8, col 14, 'require' is not defined.
src/flags.js: line 9, col 16, 'require' is not defined.
src/flags.js: line 10, col 14, 'require' is not defined.
src/flags.js: line 11, col 23, 'require' is not defined.
src/flags.js: line 12, col 19, 'require' is not defined.
src/flags.js: line 13, col 20, 'require' is not defined.
src/flags.js: line 14, col 16, 'require' is not defined.
src/flags.js: line 15, col 15, 'require' is not defined.
src/flags.js: line 16, col 20, 'require' is not defined.
src/flags.js: line 17, col 17, 'require' is not defined.
src/flags.js: line 18, col 15, 'require' is not defined.
src/flags.js: line 19, col 15, 'require' is not defined.
src/flags.js: line 1028, col 1, 'require' is not defined.
src/flags.js: line 21, col 15, 'module' is not defined.
src/flags.js: line 23, col 21, 'Map' is not defined.
src/flags.js: line 106, col 42, 'Promise' is not defined.
src/flags.js: line 162, col 30, 'Promise' is not defined.
src/flags.js: line 203, col 25, 'Promise' is not defined.
src/flags.js: line 277, col 38, 'Promise' is not defined.
src/flags.js: line 293, col 58, 'Promise' is not defined.
src/flags.js: line 398, col 84, 'Promise' is not defined.
src/flags.js: line 418, col 15, 'Promise' is not defined.
src/flags.js: line 469, col 11, 'Promise' is not defined.
src/flags.js: line 487, col 38, 'Promise' is not defined.
src/flags.js: line 501, col 11, 'Promise' is not defined.
src/flags.js: line 538, col 11, 'Promise' is not defined.
src/flags.js: line 609, col 60, 'Promise' is not defined.
src/flags.js: line 634, col 52, 'Promise' is not defined.
src/flags.js: line 782, col 11, 'Promise' is not defined.
src/flags.js: line 837, col 11, 'Promise' is not defined.
src/flags.js: line 886, col 40, 'Promise' is not defined.
src/flags.js: line 896, col 36, 'Promise' is not defined.

src/helpers.js: line 1, col 1, Use the function form of "use strict".
src/helpers.js: line 6, col 42, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
src/helpers.js: line 3, col 1, 'module' is not defined.
src/helpers.js: line 3, col 18, 'require' is not defined.
src/helpers.js: line 4, col 5, 'require' is not defined.
src/helpers.js: line 5, col 5, 'require' is not defined.
src/helpers.js: line 6, col 5, 'require' is not defined.

src/image.js: line 1, col 1, Use the function form of "use strict".
src/image.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 16, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 24, col 27, 'async functions' is only available in ES8 (use 'esversion: 8').
src/image.js: line 25, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 29, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 35, col 21, 'async functions' is only available in ES8 (use 'esversion: 8').
src/image.js: line 45, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 46, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 47, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 51, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 80, col 19, 'async functions' is only available in ES8 (use 'esversion: 8').
src/image.js: line 86, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 87, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/image.js: line 89, col 12, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/image.js: line 92, col 14, 'async functions' is only available in ES8 (use 'esversion: 8').
src/image.js: line 93, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 99, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 105, col 19, 'async functions' is only available in ES8 (use 'esversion: 8').
src/image.js: line 116, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 117, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 124, col 25, 'async functions' is only available in ES8 (use 'esversion: 8').
src/image.js: line 125, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 126, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 135, col 30, 'async functions' is only available in ES8 (use 'esversion: 8').
src/image.js: line 147, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
src/image.js: line 148, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 150, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 151, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 153, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 155, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 165, col 21, 'async functions' is only available in ES8 (use 'esversion: 8').
src/image.js: line 174, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/image.js: line 3, col 12, 'require' is not defined.
src/image.js: line 4, col 12, 'require' is not defined.
src/image.js: line 5, col 14, 'require' is not defined.
src/image.js: line 6, col 16, 'require' is not defined.
src/image.js: line 7, col 17, 'require' is not defined.
src/image.js: line 9, col 14, 'require' is not defined.
src/image.js: line 10, col 17, 'require' is not defined.
src/image.js: line 11, col 14, 'require' is not defined.
src/image.js: line 16, col 19, 'require' is not defined.
src/image.js: line 25, col 21, 'require' is not defined.
src/image.js: line 29, col 19, 'require' is not defined.
src/image.js: line 125, col 18, 'require' is not defined.
src/image.js: line 182, col 1, 'require' is not defined.
src/image.js: line 13, col 15, 'module' is not defined.
src/image.js: line 155, col 20, 'Buffer' is not defined.
src/image.js: line 162, col 12, 'Buffer' is not defined.

src/install.js: line 1, col 1, Use the function form of "use strict".
src/install.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 12, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 51, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 53, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 71, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 72, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/install.js: line 76, col 45, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 76, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/install.js: line 78, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/install.js: line 92, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 93, col 26, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/install.js: line 93, col 29, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/install.js: line 93, col 39, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/install.js: line 93, col 42, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/install.js: line 126, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 153, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 154, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 161, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 165, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 166, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 167, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 168, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 169, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/install.js: line 170, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/install.js: line 171, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/install.js: line 172, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/install.js: line 173, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/install.js: line 176, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/install.js: line 192, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 195, col 34, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/install.js: line 195, col 37, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/install.js: line 203, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 211, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/install.js: line 215, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 231, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 238, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 240, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 241, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 247, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 248, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 250, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 256, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 257, col 17, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/install.js: line 264, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 265, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 266, col 5, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 277, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 277, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 293, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 294, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 295, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 303, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 304, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 305, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 306, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 310, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 321, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 335, col 5, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 348, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 348, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 350, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 350, col 59, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/install.js: line 356, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/install.js: line 360, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 372, col 5, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 374, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 388, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 398, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 408, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 409, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 410, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 426, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 427, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 428, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 441, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 442, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 443, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 444, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 446, col 21, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/install.js: line 452, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 455, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 455, col 29, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 461, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 462, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 464, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 468, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 469, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 473, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 474, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 475, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 477, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 477, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 493, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 496, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 505, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 507, col 18, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/install.js: line 523, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 524, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 524, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/install.js: line 528, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 529, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 530, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 530, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 540, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 541, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 542, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 543, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 544, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 545, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 551, col 27, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/install.js: line 556, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 557, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 569, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 570, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 571, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 572, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 572, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/install.js: line 574, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 579, col 17, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 588, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 599, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 600, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/install.js: line 600, col 16, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/install.js: line 605, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/install.js: line 611, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
src/install.js: line 612, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 618, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/install.js: line 627, col 68, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/install.js: line 627, col 71, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/install.js: line 627, col 86, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/install.js: line 627, col 89, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/install.js: line 3, col 12, 'require' is not defined.
src/install.js: line 4, col 13, 'require' is not defined.
src/install.js: line 5, col 14, 'require' is not defined.
src/install.js: line 6, col 16, 'require' is not defined.
src/install.js: line 7, col 17, 'require' is not defined.
src/install.js: line 8, col 15, 'require' is not defined.
src/install.js: line 9, col 11, 'require' is not defined.
src/install.js: line 11, col 15, 'require' is not defined.
src/install.js: line 12, col 19, 'require' is not defined.
src/install.js: line 154, col 32, 'require' is not defined.
src/install.js: line 165, col 32, 'require' is not defined.
src/install.js: line 166, col 32, 'require' is not defined.
src/install.js: line 167, col 35, 'require' is not defined.
src/install.js: line 203, col 16, 'require' is not defined.
src/install.js: line 231, col 18, 'require' is not defined.
src/install.js: line 240, col 18, 'require' is not defined.
src/install.js: line 241, col 22, 'require' is not defined.
src/install.js: line 248, col 18, 'require' is not defined.
src/install.js: line 265, col 20, 'require' is not defined.
src/install.js: line 294, col 20, 'require' is not defined.
src/install.js: line 304, col 18, 'require' is not defined.
src/install.js: line 305, col 20, 'require' is not defined.
src/install.js: line 350, col 30, 'require' is not defined.
src/install.js: line 409, col 20, 'require' is not defined.
src/install.js: line 427, col 24, 'require' is not defined.
src/install.js: line 442, col 24, 'require' is not defined.
src/install.js: line 443, col 16, 'require' is not defined.
src/install.js: line 462, col 16, 'require' is not defined.
src/install.js: line 468, col 24, 'require' is not defined.
src/install.js: line 469, col 18, 'require' is not defined.
src/install.js: line 474, col 16, 'require' is not defined.
src/install.js: line 475, col 20, 'require' is not defined.
src/install.js: line 523, col 16, 'require' is not defined.
src/install.js: line 529, col 16, 'require' is not defined.
src/install.js: line 541, col 18, 'require' is not defined.
src/install.js: line 557, col 21, 'require' is not defined.
src/install.js: line 570, col 27, 'require' is not defined.
src/install.js: line 571, col 24, 'require' is not defined.
src/install.js: line 620, col 25, 'require' is not defined.
src/install.js: line 14, col 17, 'module' is not defined.
src/install.js: line 71, col 33, 'process' is not defined.
src/install.js: line 76, col 24, 'process' is not defined.
src/install.js: line 78, col 29, 'process' is not defined.
src/install.js: line 117, col 13, 'process' is not defined.
src/install.js: line 148, col 13, 'process' is not defined.
src/install.js: line 606, col 13, 'process' is not defined.
src/install.js: line 239, col 5, 'console' is not defined.
src/install.js: line 252, col 9, 'console' is not defined.
src/install.js: line 257, col 5, 'console' is not defined.
src/install.js: line 297, col 9, 'console' is not defined.
src/install.js: line 394, col 9, 'console' is not defined.
src/install.js: line 446, col 9, 'console' is not defined.
src/install.js: line 450, col 5, 'console' is not defined.
src/install.js: line 483, col 9, 'console' is not defined.
src/install.js: line 494, col 5, 'console' is not defined.
src/install.js: line 628, col 5, 'console' is not defined.
src/install.js: line 241, col 40, '__dirname' is not defined.
src/install.js: line 350, col 48, '__dirname' is not defined.
src/install.js: line 453, col 46, '__dirname' is not defined.
src/install.js: line 478, col 40, '__dirname' is not defined.
src/install.js: line 531, col 40, '__dirname' is not defined.
src/install.js: line 612, col 38, '__dirname' is not defined.
src/install.js: line 615, col 41, '__dirname' is not defined.
src/install.js: line 477, col 40, 'Promise' is not defined.
src/install.js: line 530, col 40, 'Promise' is not defined.
src/install.js: line 572, col 11, 'Promise' is not defined.

src/languages.js: line 1, col 1, Use the function form of "use strict".
src/languages.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 6, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 13, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/languages.js: line 13, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/languages.js: line 15, col 17, 'async functions' is only available in ES8 (use 'esversion: 8').
src/languages.js: line 16, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 16, col 67, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/languages.js: line 20, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 21, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 22, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 23, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 24, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 30, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 31, col 23, 'async functions' is only available in ES8 (use 'esversion: 8').
src/languages.js: line 36, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 37, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 49, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 50, col 18, 'async functions' is only available in ES8 (use 'esversion: 8').
src/languages.js: line 55, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 57, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 57, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
src/languages.js: line 57, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/languages.js: line 59, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 60, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 61, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 72, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/languages.js: line 78, col 29, 'async functions' is only available in ES8 (use 'esversion: 8').
src/languages.js: line 79, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 80, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/languages.js: line 3, col 12, 'require' is not defined.
src/languages.js: line 4, col 14, 'require' is not defined.
src/languages.js: line 5, col 15, 'require' is not defined.
src/languages.js: line 6, col 19, 'require' is not defined.
src/languages.js: line 7, col 17, 'require' is not defined.
src/languages.js: line 87, col 1, 'require' is not defined.
src/languages.js: line 9, col 19, 'module' is not defined.
src/languages.js: line 10, col 33, '__dirname' is not defined.
src/languages.js: line 57, col 27, 'Promise' is not defined.

src/logger.js: line 1, col 1, Use the function form of "use strict".
src/logger.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 32, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 61, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 74, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 77, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 90, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/logger.js: line 146, col 16, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/logger.js: line 161, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 163, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 163, col 10, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 163, col 27, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 183, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 184, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 184, col 10, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 184, col 30, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 194, col 17, 'rest operator' is only available in ES6 (use 'esversion: 6').
src/logger.js: line 194, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/logger.js: line 210, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 210, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 214, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/logger.js: line 7, col 12, 'require' is not defined.
src/logger.js: line 8, col 14, 'require' is not defined.
src/logger.js: line 9, col 17, 'require' is not defined.
src/logger.js: line 10, col 14, 'require' is not defined.
src/logger.js: line 11, col 16, 'require' is not defined.
src/logger.js: line 13, col 14, 'require' is not defined.
src/logger.js: line 14, col 14, 'require' is not defined.
src/logger.js: line 27, col 19, 'process' is not defined.
src/logger.js: line 65, col 34, 'process' is not defined.
src/logger.js: line 95, col 18, 'process' is not defined.
src/logger.js: line 101, col 22, 'process' is not defined.
src/logger.js: line 32, col 16, 'module' is not defined.

src/notifications.js: line 1, col 1, Use the function form of "use strict".
src/notifications.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 18, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 19, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 21, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 24, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 54, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 56, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 58, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 59, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 71, col 21, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 72, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 76, col 29, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 81, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 81, col 34, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 81, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 82, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 84, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 84, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 85, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 87, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 89, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 110, col 67, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 117, col 30, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 118, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 119, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 122, col 29, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 128, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 130, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 130, col 34, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 130, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 131, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 132, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 132, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 133, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 133, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 134, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 137, col 24, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 142, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 142, col 41, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 150, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 152, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 160, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 165, col 22, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 174, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 175, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 175, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 177, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 185, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 186, col 5, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 190, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 191, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 191, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 191, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 192, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 192, col 42, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 192, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 198, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 200, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 200, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 202, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 203, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 205, col 31, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 210, col 5, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 211, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 212, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 213, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 214, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 215, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 215, col 42, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 230, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 231, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 232, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 239, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 244, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 246, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 246, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 248, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 251, col 70, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 253, col 54, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 257, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 264, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 264, col 25, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 274, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 280, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 281, col 36, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 281, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 290, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 292, col 31, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 299, col 27, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 303, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 307, col 28, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 311, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 316, col 25, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 320, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 320, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 324, col 26, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 331, col 28, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 332, col 9, Confusing use of '!'.
src/notifications.js: line 335, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 335, col 45, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 342, col 28, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 343, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 347, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 349, col 49, Confusing use of '!'.
src/notifications.js: line 353, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 353, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 353, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 354, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 356, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 358, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 358, col 67, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 359, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 359, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 361, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 362, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 364, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 365, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 365, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 367, col 28, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 368, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 372, col 29, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 373, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 373, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 377, col 23, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 378, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 379, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 386, col 42, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 386, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 389, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 389, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 390, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 390, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 390, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 391, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 391, col 42, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 391, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 396, col 27, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 401, col 23, 'async functions' is only available in ES8 (use 'esversion: 8').
src/notifications.js: line 403, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 415, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 416, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 416, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 422, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 422, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 423, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 431, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 440, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 444, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 444, col 59, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 447, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 451, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 454, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 454, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 455, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 456, col 71, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 457, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 458, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 463, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 463, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 465, col 46, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 467, col 46, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 478, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 478, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 479, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 481, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 482, col 21, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 483, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 486, col 64, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 488, col 64, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 495, col 60, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 500, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 505, col 76, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/notifications.js: line 512, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/notifications.js: line 4, col 15, 'require' is not defined.
src/notifications.js: line 5, col 17, 'require' is not defined.
src/notifications.js: line 6, col 14, 'require' is not defined.
src/notifications.js: line 7, col 15, 'require' is not defined.
src/notifications.js: line 8, col 11, 'require' is not defined.
src/notifications.js: line 10, col 12, 'require' is not defined.
src/notifications.js: line 11, col 14, 'require' is not defined.
src/notifications.js: line 12, col 15, 'require' is not defined.
src/notifications.js: line 13, col 16, 'require' is not defined.
src/notifications.js: line 14, col 14, 'require' is not defined.
src/notifications.js: line 15, col 15, 'require' is not defined.
src/notifications.js: line 16, col 17, 'require' is not defined.
src/notifications.js: line 17, col 15, 'require' is not defined.
src/notifications.js: line 18, col 17, 'require' is not defined.
src/notifications.js: line 19, col 18, 'require' is not defined.
src/notifications.js: line 198, col 28, 'require' is not defined.
src/notifications.js: line 518, col 1, 'require' is not defined.
src/notifications.js: line 21, col 23, 'module' is not defined.
src/notifications.js: line 133, col 26, 'Set' is not defined.
src/notifications.js: line 158, col 11, 'Promise' is not defined.
src/notifications.js: line 193, col 15, 'Promise' is not defined.
src/notifications.js: line 200, col 19, 'Promise' is not defined.
src/notifications.js: line 318, col 11, 'Promise' is not defined.
src/notifications.js: line 341, col 11, 'Promise' is not defined.
src/notifications.js: line 366, col 11, 'Promise' is not defined.
src/notifications.js: line 384, col 15, 'Promise' is not defined.
src/notifications.js: line 174, col 5, 'setTimeout' is not defined.

src/pagination.js: line 1, col 1, Use the function form of "use strict".
src/pagination.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pagination.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pagination.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pagination.js: line 22, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pagination.js: line 25, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pagination.js: line 26, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pagination.js: line 28, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pagination.js: line 32, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pagination.js: line 37, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/pagination.js: line 37, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/pagination.js: line 39, col 18, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/pagination.js: line 39, col 21, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/pagination.js: line 43, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pagination.js: line 43, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/pagination.js: line 56, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pagination.js: line 70, col 19, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/pagination.js: line 70, col 38, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/pagination.js: line 70, col 41, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/pagination.js: line 77, col 19, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/pagination.js: line 77, col 38, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/pagination.js: line 77, col 41, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/pagination.js: line 3, col 12, 'require' is not defined.
src/pagination.js: line 4, col 11, 'require' is not defined.
src/pagination.js: line 6, col 20, 'module' is not defined.

src/password.js: line 1, col 1, Use the function form of "use strict".
src/password.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/password.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/password.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/password.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/password.js: line 13, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
src/password.js: line 18, col 19, 'async functions' is only available in ES8 (use 'esversion: 8').
src/password.js: line 19, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/password.js: line 27, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/password.js: line 28, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/password.js: line 3, col 14, 'require' is not defined.
src/password.js: line 4, col 16, 'require' is not defined.
src/password.js: line 5, col 20, 'require' is not defined.
src/password.js: line 36, col 1, 'require' is not defined.
src/password.js: line 8, col 15, '__dirname' is not defined.
src/password.js: line 13, col 1, 'exports' is not defined.
src/password.js: line 18, col 1, 'exports' is not defined.
src/password.js: line 32, col 27, 'exports' is not defined.
src/password.js: line 36, col 24, 'exports' is not defined.

src/password_worker.js: line 1, col 1, Use the function form of "use strict".
src/password_worker.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/password_worker.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/password_worker.js: line 6, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/password_worker.js: line 7, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/password_worker.js: line 11, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/password_worker.js: line 3, col 20, 'require' is not defined.
src/password_worker.js: line 4, col 16, 'require' is not defined.

src/prestart.js: line 1, col 1, Use the function form of "use strict".
src/prestart.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 10, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 17, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 26, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 26, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/prestart.js: line 27, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 27, col 32, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/prestart.js: line 28, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/prestart.js: line 68, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 70, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/prestart.js: line 71, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 96, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 97, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 98, col 31, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/prestart.js: line 103, col 41, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/prestart.js: line 108, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 109, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 109, col 59, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/prestart.js: line 115, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 116, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 117, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 118, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/prestart.js: line 122, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/prestart.js: line 3, col 15, 'require' is not defined.
src/prestart.js: line 4, col 13, 'require' is not defined.
src/prestart.js: line 5, col 17, 'require' is not defined.
src/prestart.js: line 6, col 14, 'require' is not defined.
src/prestart.js: line 7, col 15, 'require' is not defined.
src/prestart.js: line 9, col 13, 'require' is not defined.
src/prestart.js: line 10, col 19, 'require' is not defined.
src/prestart.js: line 117, col 20, 'require' is not defined.
src/prestart.js: line 27, col 85, 'global' is not defined.
src/prestart.js: line 37, col 43, 'process' is not defined.
src/prestart.js: line 115, col 21, 'process' is not defined.
src/prestart.js: line 126, col 1, 'exports' is not defined.
src/prestart.js: line 127, col 1, 'exports' is not defined.
src/prestart.js: line 128, col 1, 'exports' is not defined.

src/promisify.js: line 1, col 1, Use the function form of "use strict".
src/promisify.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/promisify.js: line 11, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/promisify.js: line 24, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/promisify.js: line 25, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/promisify.js: line 40, col 41, 'rest operator' is only available in ES6 (use 'esversion: 6').
src/promisify.js: line 42, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/promisify.js: line 43, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/promisify.js: line 44, col 35, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/promisify.js: line 46, col 27, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/promisify.js: line 51, col 40, 'rest operator' is only available in ES6 (use 'esversion: 6').
src/promisify.js: line 53, col 31, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/promisify.js: line 56, col 30, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/promisify.js: line 3, col 14, 'require' is not defined.
src/promisify.js: line 5, col 1, 'module' is not defined.

src/pubsub.js: line 1, col 1, Use the function form of "use strict".
src/pubsub.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pubsub.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pubsub.js: line 6, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pubsub.js: line 7, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pubsub.js: line 8, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pubsub.js: line 15, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/pubsub.js: line 41, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/pubsub.js: line 3, col 22, 'require' is not defined.
src/pubsub.js: line 4, col 15, 'require' is not defined.
src/pubsub.js: line 49, col 18, 'require' is not defined.
src/pubsub.js: line 31, col 14, 'process' is not defined.
src/pubsub.js: line 35, col 17, 'process' is not defined.
src/pubsub.js: line 41, col 13, 'process' is not defined.
src/pubsub.js: line 58, col 1, 'module' is not defined.

src/request.js: line 1, col 1, Use the function form of "use strict".
src/request.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/request.js: line 3, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/request.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/request.js: line 10, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/request.js: line 10, col 32, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/request.js: line 10, col 56, 'rest operator' is only available in ES6 (use 'esversion: 6').
src/request.js: line 10, col 59, 'object rest property' is only available in ES9 (use 'esversion: 9').
src/request.js: line 10, col 68, 'default parameters' is only available in ES6 (use 'esversion: 6').
src/request.js: line 11, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/request.js: line 16, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/request.js: line 17, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/request.js: line 18, col 9, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/request.js: line 18, col 12, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/request.js: line 19, col 9, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/request.js: line 22, col 13, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/request.js: line 22, col 16, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/request.js: line 37, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/request.js: line 39, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/request.js: line 39, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/request.js: line 40, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/request.js: line 41, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/request.js: line 42, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/request.js: line 66, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
src/request.js: line 66, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/request.js: line 68, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
src/request.js: line 68, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/request.js: line 69, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
src/request.js: line 69, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/request.js: line 71, col 19, 'async functions' is only available in ES8 (use 'esversion: 8').
src/request.js: line 71, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/request.js: line 76, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
src/request.js: line 76, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/request.js: line 77, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
src/request.js: line 77, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/request.js: line 78, col 17, 'async functions' is only available in ES8 (use 'esversion: 8').
src/request.js: line 78, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/request.js: line 3, col 23, 'require' is not defined.
src/request.js: line 4, col 21, 'require' is not defined.
src/request.js: line 6, col 1, 'exports' is not defined.
src/request.js: line 66, col 1, 'exports' is not defined.
src/request.js: line 68, col 1, 'exports' is not defined.
src/request.js: line 69, col 1, 'exports' is not defined.
src/request.js: line 70, col 1, 'exports' is not defined.
src/request.js: line 70, col 18, 'exports' is not defined.
src/request.js: line 71, col 1, 'exports' is not defined.
src/request.js: line 76, col 1, 'exports' is not defined.
src/request.js: line 77, col 1, 'exports' is not defined.
src/request.js: line 78, col 1, 'exports' is not defined.
src/request.js: line 11, col 21, 'fetch' is not defined.
src/request.js: line 13, col 33, 'fetch' is not defined.
src/request.js: line 26, col 23, 'AbortSignal' is not defined.

src/search.js: line 1, col 1, Use the function form of "use strict".
src/search.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 17, col 17, 'async functions' is only available in ES8 (use 'esversion: 8').
src/search.js: line 18, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 21, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 32, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 42, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/search.js: line 45, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 45, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 50, col 5, 'async functions' is only available in ES8 (use 'esversion: 8').
src/search.js: line 52, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 65, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 66, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 67, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 69, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 70, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 75, col 9, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 81, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 83, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 88, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 94, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 95, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 96, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 97, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 97, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 98, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 98, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 98, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 102, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 103, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 110, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 121, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/search.js: line 122, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 122, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 123, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 124, col 34, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/search.js: line 124, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
src/search.js: line 124, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 132, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 133, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 133, col 72, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/search.js: line 133, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 134, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 134, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 135, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 135, col 73, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/search.js: line 135, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 136, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 137, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 138, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 139, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 140, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 142, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 146, col 22, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/search.js: line 154, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/search.js: line 163, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 175, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 176, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 179, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/search.js: line 180, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 182, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 183, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 184, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 184, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 185, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 185, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 187, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 187, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 192, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 193, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 194, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 207, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 210, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/search.js: line 217, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/search.js: line 218, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 219, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 219, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 220, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 222, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 223, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 228, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 235, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/search.js: line 236, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 245, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/search.js: line 245, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 252, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 254, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 263, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 265, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 267, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 275, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 276, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 278, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 292, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 293, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 295, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 298, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 303, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 306, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 308, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 319, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/search.js: line 328, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 328, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 335, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/search.js: line 342, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/search.js: line 346, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/search.js: line 346, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/search.js: line 350, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/search.js: line 3, col 11, 'require' is not defined.
src/search.js: line 5, col 12, 'require' is not defined.
src/search.js: line 6, col 15, 'require' is not defined.
src/search.js: line 7, col 15, 'require' is not defined.
src/search.js: line 8, col 16, 'require' is not defined.
src/search.js: line 9, col 20, 'require' is not defined.
src/search.js: line 10, col 14, 'require' is not defined.
src/search.js: line 11, col 17, 'require' is not defined.
src/search.js: line 12, col 20, 'require' is not defined.
src/search.js: line 13, col 15, 'require' is not defined.
src/search.js: line 357, col 1, 'require' is not defined.
src/search.js: line 15, col 16, 'module' is not defined.
src/search.js: line 18, col 19, 'process' is not defined.
src/search.js: line 38, col 20, 'process' is not defined.
src/search.js: line 45, col 44, 'Promise' is not defined.
src/search.js: line 75, col 30, 'Promise' is not defined.
src/search.js: line 187, col 35, 'Promise' is not defined.
src/search.js: line 328, col 47, 'Promise' is not defined.
src/search.js: line 346, col 32, 'Promise' is not defined.
src/search.js: line 94, col 33, 'Set' is not defined.
src/search.js: line 96, col 29, 'Set' is not defined.

src/settings.js: line 1, col 1, Use the function form of "use strict".
src/settings.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 7, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 11, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 11, col 10, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 11, col 28, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 12, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 13, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 27, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 27, col 10, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 27, col 28, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 63, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 72, col 15, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/settings.js: line 72, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/settings.js: line 89, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 90, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/settings.js: line 113, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 114, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 118, col 73, 'rest operator' is only available in ES6 (use 'esversion: 6').
src/settings.js: line 118, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/settings.js: line 133, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 134, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 135, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 136, col 10, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 145, col 18, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 190, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 191, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 192, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 199, col 14, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/settings.js: line 3, col 14, 'require' is not defined.
src/settings.js: line 4, col 16, 'require' is not defined.
src/settings.js: line 240, col 1, 'module' is not defined.

src/sitemap.js: line 1, col 1, Use the function form of "use strict".
src/sitemap.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 3, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 19, col 18, 'async functions' is only available in ES8 (use 'esversion: 8').
src/sitemap.js: line 20, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 21, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 25, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 25, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 32, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 33, col 10, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 40, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/sitemap.js: line 41, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 46, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/sitemap.js: line 50, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/sitemap.js: line 54, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/sitemap.js: line 59, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 63, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
src/sitemap.js: line 68, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 80, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/sitemap.js: line 81, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 82, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 83, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 89, col 25, 'async functions' is only available in ES8 (use 'esversion: 8').
src/sitemap.js: line 94, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 95, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 96, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/sitemap.js: line 99, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/sitemap.js: line 117, col 24, 'async functions' is only available in ES8 (use 'esversion: 8').
src/sitemap.js: line 122, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 123, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 124, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 130, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 131, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 133, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 135, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 148, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/sitemap.js: line 151, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/sitemap.js: line 167, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/sitemap.js: line 171, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/sitemap.js: line 172, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/sitemap.js: line 184, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/sitemap.js: line 3, col 44, 'require' is not defined.
src/sitemap.js: line 4, col 15, 'require' is not defined.
src/sitemap.js: line 6, col 12, 'require' is not defined.
src/sitemap.js: line 7, col 20, 'require' is not defined.
src/sitemap.js: line 8, col 16, 'require' is not defined.
src/sitemap.js: line 9, col 20, 'require' is not defined.
src/sitemap.js: line 10, col 14, 'require' is not defined.
src/sitemap.js: line 11, col 17, 'require' is not defined.
src/sitemap.js: line 12, col 15, 'require' is not defined.
src/sitemap.js: line 189, col 1, 'require' is not defined.
src/sitemap.js: line 14, col 17, 'module' is not defined.
src/sitemap.js: line 25, col 51, 'Promise' is not defined.

src/slugify.js: line 1, col 1, Use the function form of "use strict".
src/slugify.js: line 3, col 1, 'module' is not defined.
src/slugify.js: line 3, col 18, 'require' is not defined.

src/social.js: line 1, col 1, Use the function form of "use strict".
src/social.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/social.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/social.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/social.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/social.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/social.js: line 12, col 25, 'async functions' is only available in ES8 (use 'esversion: 8').
src/social.js: line 17, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/social.js: line 45, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/social.js: line 46, col 50, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/social.js: line 53, col 31, 'async functions' is only available in ES8 (use 'esversion: 8').
src/social.js: line 54, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/social.js: line 55, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/social.js: line 58, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
src/social.js: line 64, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/social.js: line 65, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/social.js: line 66, col 14, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/social.js: line 3, col 11, 'require' is not defined.
src/social.js: line 4, col 17, 'require' is not defined.
src/social.js: line 5, col 12, 'require' is not defined.
src/social.js: line 6, col 14, 'require' is not defined.
src/social.js: line 71, col 1, 'require' is not defined.
src/social.js: line 8, col 16, 'module' is not defined.

src/start.js: line 1, col 1, Use the function form of "use strict".
src/start.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/start.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/start.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/start.js: line 8, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
src/start.js: line 14, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/start.js: line 18, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/start.js: line 33, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/start.js: line 34, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/start.js: line 72, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/start.js: line 73, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/start.js: line 89, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/start.js: line 89, col 32, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/start.js: line 90, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/start.js: line 90, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/start.js: line 90, col 73, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/start.js: line 90, col 87, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/start.js: line 98, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/start.js: line 99, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/start.js: line 102, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/start.js: line 108, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/start.js: line 111, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/start.js: line 114, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/start.js: line 133, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/start.js: line 140, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/start.js: line 3, col 15, 'require' is not defined.
src/start.js: line 4, col 17, 'require' is not defined.
src/start.js: line 14, col 20, 'require' is not defined.
src/start.js: line 18, col 22, 'require' is not defined.
src/start.js: line 33, col 27, 'require' is not defined.
src/start.js: line 34, col 25, 'require' is not defined.
src/start.js: line 38, col 13, 'require' is not defined.
src/start.js: line 39, col 13, 'require' is not defined.
src/start.js: line 40, col 13, 'require' is not defined.
src/start.js: line 41, col 13, 'require' is not defined.
src/start.js: line 73, col 21, 'require' is not defined.
src/start.js: line 105, col 9, 'require' is not defined.
src/start.js: line 111, col 38, 'require' is not defined.
src/start.js: line 114, col 36, 'require' is not defined.
src/start.js: line 136, col 15, 'require' is not defined.
src/start.js: line 138, col 15, 'require' is not defined.
src/start.js: line 140, col 20, 'require' is not defined.
src/start.js: line 6, col 15, 'module' is not defined.
src/start.js: line 47, col 13, 'process' is not defined.
src/start.js: line 48, col 13, 'process' is not defined.
src/start.js: line 68, col 9, 'process' is not defined.
src/start.js: line 99, col 9, 'process' is not defined.
src/start.js: line 101, col 5, 'process' is not defined.
src/start.js: line 102, col 5, 'process' is not defined.
src/start.js: line 108, col 5, 'process' is not defined.
src/start.js: line 122, col 9, 'process' is not defined.
src/start.js: line 124, col 9, 'process' is not defined.
src/start.js: line 145, col 9, 'process' is not defined.
src/start.js: line 149, col 16, 'process' is not defined.

src/translator.js: line 1, col 1, Use the function form of "use strict".
src/translator.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/translator.js: line 11, col 105, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/translator.js: line 12, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/translator.js: line 3, col 17, 'require' is not defined.
src/translator.js: line 11, col 18, 'require' is not defined.
src/translator.js: line 11, col 69, 'require' is not defined.
src/translator.js: line 12, col 23, 'require' is not defined.
src/translator.js: line 6, col 9, 'global' is not defined.
src/translator.js: line 11, col 1, 'module' is not defined.

src/upgrade.js: line 2, col 1, Use the function form of "use strict".
src/upgrade.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 14, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 24, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 26, col 18, 'async functions' is only available in ES8 (use 'esversion: 8').
src/upgrade.js: line 27, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 30, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 30, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 31, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 32, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 33, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 37, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 38, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 45, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 46, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 47, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 55, col 23, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 62, col 31, 'async functions' is only available in ES8 (use 'esversion: 8').
src/upgrade.js: line 64, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 65, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 66, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 68, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 70, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 83, col 17, 'async functions' is only available in ES8 (use 'esversion: 8').
src/upgrade.js: line 85, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 86, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 87, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 87, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 93, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
src/upgrade.js: line 96, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 96, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 101, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 102, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 102, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 103, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 113, col 25, 'async functions' is only available in ES8 (use 'esversion: 8').
src/upgrade.js: line 115, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 117, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 117, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 121, col 19, 'async functions' is only available in ES8 (use 'esversion: 8').
src/upgrade.js: line 122, col 17, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 122, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 122, col 118, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 123, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 123, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 128, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 128, col 21, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 130, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 131, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 132, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 133, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 142, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 142, col 66, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 159, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 168, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 169, col 42, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 186, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 190, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 191, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 192, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/upgrade.js: line 194, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 200, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/upgrade.js: line 4, col 14, 'require' is not defined.
src/upgrade.js: line 5, col 14, 'require' is not defined.
src/upgrade.js: line 6, col 16, 'require' is not defined.
src/upgrade.js: line 7, col 18, 'require' is not defined.
src/upgrade.js: line 8, col 17, 'require' is not defined.
src/upgrade.js: line 9, col 15, 'require' is not defined.
src/upgrade.js: line 11, col 17, 'require' is not defined.
src/upgrade.js: line 12, col 12, 'require' is not defined.
src/upgrade.js: line 13, col 14, 'require' is not defined.
src/upgrade.js: line 14, col 19, 'require' is not defined.
src/upgrade.js: line 37, col 28, 'require' is not defined.
src/upgrade.js: line 38, col 28, 'require' is not defined.
src/upgrade.js: line 68, col 34, 'require' is not defined.
src/upgrade.js: line 130, col 30, 'require' is not defined.
src/upgrade.js: line 204, col 1, 'require' is not defined.
src/upgrade.js: line 24, col 17, 'module' is not defined.
src/upgrade.js: line 27, col 43, '__dirname' is not defined.
src/upgrade.js: line 115, col 45, '__dirname' is not defined.
src/upgrade.js: line 94, col 5, 'console' is not defined.
src/upgrade.js: line 114, col 5, 'console' is not defined.
src/upgrade.js: line 122, col 5, 'console' is not defined.
src/upgrade.js: line 165, col 13, 'console' is not defined.
src/upgrade.js: line 175, col 5, 'console' is not defined.
src/upgrade.js: line 96, col 42, 'Promise' is not defined.
src/upgrade.js: line 123, col 48, 'Promise' is not defined.
src/upgrade.js: line 142, col 9, 'process' is not defined.
src/upgrade.js: line 146, col 13, 'process' is not defined.
src/upgrade.js: line 169, col 9, 'process' is not defined.
src/upgrade.js: line 181, col 9, 'process' is not defined.
src/upgrade.js: line 199, col 27, 'process' is not defined.
src/upgrade.js: line 200, col 9, 'process' is not defined.

src/utils.js: line 1, col 1, Use the function form of "use strict".
src/utils.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/utils.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/utils.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/utils.js: line 12, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/utils.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/utils.js: line 15, col 17, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/utils.js: line 15, col 20, 'object spread property' is only available in ES9 (use 'esversion: 9').
src/utils.js: line 18, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/utils.js: line 24, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/utils.js: line 36, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/utils.js: line 44, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/utils.js: line 48, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/utils.js: line 50, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/utils.js: line 55, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/utils.js: line 57, col 10, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/utils.js: line 70, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/utils.js: line 71, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/utils.js: line 3, col 16, 'require' is not defined.
src/utils.js: line 4, col 15, 'require' is not defined.
src/utils.js: line 5, col 14, 'require' is not defined.
src/utils.js: line 15, col 20, 'require' is not defined.
src/utils.js: line 18, col 18, 'require' is not defined.
src/utils.js: line 36, col 22, 'require' is not defined.
src/utils.js: line 39, col 16, 'require' is not defined.
src/utils.js: line 48, col 28, 'require' is not defined.
src/utils.js: line 71, col 25, 'require' is not defined.
src/utils.js: line 7, col 1, 'process' is not defined.
src/utils.js: line 8, col 55, 'process' is not defined.
src/utils.js: line 11, col 1, 'process' is not defined.
src/utils.js: line 12, col 18, 'process' is not defined.
src/utils.js: line 8, col 5, 'console' is not defined.
src/utils.js: line 75, col 1, 'module' is not defined.

src/webserver.js: line 2, col 1, Use the function form of "use strict".
src/webserver.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 12, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 13, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 18, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 19, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 20, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 21, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 22, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 24, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 25, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 26, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 27, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 28, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 29, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 30, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 31, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 32, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 33, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 34, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 35, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 36, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 38, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 52, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 54, col 23, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 63, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 64, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 65, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 65, col 17, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 67, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 74, col 10, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 74, col 27, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 83, col 18, 'async functions' is only available in ES8 (use 'esversion: 8').
src/webserver.js: line 98, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/webserver.js: line 99, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 119, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 120, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 122, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 123, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 125, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 143, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 147, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 155, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 156, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 160, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 181, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 182, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 183, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 190, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 196, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 215, col 23, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 221, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 229, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 235, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 240, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 241, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 247, col 1, 'async functions' is only available in ES8 (use 'esversion: 8').
src/webserver.js: line 248, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 249, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 250, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 259, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 276, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 277, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 278, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 285, col 27, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 290, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 291, col 23, 'spread operator' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 292, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 292, col 28, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 292, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 294, col 31, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 298, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 299, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 308, col 22, 'async functions' is only available in ES8 (use 'esversion: 8').
src/webserver.js: line 310, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 312, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 313, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 314, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 318, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 319, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
src/webserver.js: line 320, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 325, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 329, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
src/webserver.js: line 4, col 12, 'require' is not defined.
src/webserver.js: line 5, col 14, 'require' is not defined.
src/webserver.js: line 6, col 14, 'require' is not defined.
src/webserver.js: line 7, col 15, 'require' is not defined.
src/webserver.js: line 8, col 17, 'require' is not defined.
src/webserver.js: line 9, col 15, 'require' is not defined.
src/webserver.js: line 14, col 17, 'require' is not defined.
src/webserver.js: line 15, col 15, 'require' is not defined.
src/webserver.js: line 16, col 20, 'require' is not defined.
src/webserver.js: line 17, col 22, 'require' is not defined.
src/webserver.js: line 18, col 17, 'require' is not defined.
src/webserver.js: line 19, col 19, 'require' is not defined.
src/webserver.js: line 20, col 17, 'require' is not defined.
src/webserver.js: line 21, col 18, 'require' is not defined.
src/webserver.js: line 22, col 16, 'require' is not defined.
src/webserver.js: line 24, col 20, 'require' is not defined.
src/webserver.js: line 25, col 12, 'require' is not defined.
src/webserver.js: line 26, col 19, 'require' is not defined.
src/webserver.js: line 27, col 14, 'require' is not defined.
src/webserver.js: line 28, col 17, 'require' is not defined.
src/webserver.js: line 29, col 14, 'require' is not defined.
src/webserver.js: line 30, col 16, 'require' is not defined.
src/webserver.js: line 31, col 17, 'require' is not defined.
src/webserver.js: line 32, col 15, 'require' is not defined.
src/webserver.js: line 33, col 21, 'require' is not defined.
src/webserver.js: line 34, col 20, 'require' is not defined.
src/webserver.js: line 35, col 16, 'require' is not defined.
src/webserver.js: line 36, col 14, 'require' is not defined.
src/webserver.js: line 38, col 17, 'require' is not defined.
src/webserver.js: line 41, col 14, 'require' is not defined.
src/webserver.js: line 46, col 14, 'require' is not defined.
src/webserver.js: line 91, col 5, 'require' is not defined.
src/webserver.js: line 99, col 24, 'require' is not defined.
src/webserver.js: line 114, col 15, 'require' is not defined.
src/webserver.js: line 119, col 24, 'require' is not defined.
src/webserver.js: line 120, col 28, 'require' is not defined.
src/webserver.js: line 143, col 29, 'require' is not defined.
src/webserver.js: line 149, col 24, 'require' is not defined.
src/webserver.js: line 181, col 17, 'require' is not defined.
src/webserver.js: line 182, col 24, 'require' is not defined.
src/webserver.js: line 190, col 21, 'require' is not defined.
src/webserver.js: line 312, col 17, 'require' is not defined.
src/webserver.js: line 313, col 18, 'require' is not defined.
src/webserver.js: line 336, col 1, 'require' is not defined.
src/webserver.js: line 49, col 1, 'module' is not defined.
src/webserver.js: line 50, col 1, 'module' is not defined.
src/webserver.js: line 72, col 1, 'exports' is not defined.
src/webserver.js: line 79, col 1, 'exports' is not defined.
src/webserver.js: line 83, col 1, 'exports' is not defined.
src/webserver.js: line 283, col 19, 'exports' is not defined.
src/webserver.js: line 308, col 1, 'exports' is not defined.
src/webserver.js: line 336, col 24, 'exports' is not defined.
src/webserver.js: line 132, col 28, 'global' is not defined.
src/webserver.js: line 137, col 9, 'global' is not defined.
src/webserver.js: line 255, col 13, 'process' is not defined.
src/webserver.js: line 263, col 13, 'process' is not defined.
src/webserver.js: line 272, col 42, 'process' is not defined.
src/webserver.js: line 281, col 20, 'process' is not defined.
src/webserver.js: line 301, col 17, 'process' is not defined.
src/webserver.js: line 290, col 16, 'Promise' is not defined.
src/webserver.js: line 318, col 16, 'Promise' is not defined.

test/api.js: line 1, col 1, Use the function form of "use strict".
test/api.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 18, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 19, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 20, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 21, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 22, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 23, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 24, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 25, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 26, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 27, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 29, col 17, 'async functions' is only available in ES8 (use 'esversion: 8').
test/api.js: line 29, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 30, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 31, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 32, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 33, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 34, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 35, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 36, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 37, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 39, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 46, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 169, col 5, 'async functions' is only available in ES8 (use 'esversion: 8').
test/api.js: line 172, col 5, 'async functions' is only available in ES8 (use 'esversion: 8').
test/api.js: line 176, col 11, 'async functions' is only available in ES8 (use 'esversion: 8').
test/api.js: line 176, col 18, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 181, col 5, 'async functions' is only available in ES8 (use 'esversion: 8').
test/api.js: line 187, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 188, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 189, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 194, col 68, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 196, col 14, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 203, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 209, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 218, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 218, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 226, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/api.js: line 226, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 227, col 35, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 246, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 255, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 279, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 279, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 296, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 297, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/api.js: line 297, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 297, col 138, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 314, col 10, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 322, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/api.js: line 322, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 334, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/api.js: line 334, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 335, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 336, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 337, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 337, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 352, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 363, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 363, col 89, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 367, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 371, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 371, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 375, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 376, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 376, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 377, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 378, col 21, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 389, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 390, col 73, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 391, col 89, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 403, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 404, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 405, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 406, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 407, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 408, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 409, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 410, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 411, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 413, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 419, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 425, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 425, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 426, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 426, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 427, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 427, col 85, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 430, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 431, col 21, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 431, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 432, col 21, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 438, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 439, col 91, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 443, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 458, col 142, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 460, col 25, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 460, col 45, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 476, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/api.js: line 476, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 483, col 21, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 484, col 21, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 496, col 29, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 497, col 60, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 508, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 512, col 94, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 514, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 514, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 518, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 523, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 524, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 527, col 25, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 527, col 96, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 528, col 29, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 533, col 30, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 533, col 43, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 545, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 550, col 73, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 552, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 561, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/api.js: line 561, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 562, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 563, col 47, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 564, col 26, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 565, col 25, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 566, col 25, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 567, col 25, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 567, col 25, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 579, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 586, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 587, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/api.js: line 590, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 597, col 37, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 601, col 26, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/api.js: line 601, col 29, 'object spread property' is only available in ES9 (use 'esversion: 9').
test/api.js: line 601, col 35, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/api.js: line 601, col 38, 'object spread property' is only available in ES9 (use 'esversion: 9').
test/api.js: line 616, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 618, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 626, col 49, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 630, col 77, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 633, col 78, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 636, col 77, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 640, col 81, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 644, col 145, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 648, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 652, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 653, col 94, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 663, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/api.js: line 668, col 34, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/api.js: line 3, col 11, 'require' is not defined.
test/api.js: line 4, col 16, 'require' is not defined.
test/api.js: line 5, col 14, 'require' is not defined.
test/api.js: line 6, col 12, 'require' is not defined.
test/api.js: line 7, col 23, 'require' is not defined.
test/api.js: line 8, col 15, 'require' is not defined.
test/api.js: line 9, col 13, 'require' is not defined.
test/api.js: line 10, col 14, 'require' is not defined.
test/api.js: line 14, col 17, 'require' is not defined.
test/api.js: line 15, col 12, 'require' is not defined.
test/api.js: line 16, col 17, 'require' is not defined.
test/api.js: line 17, col 14, 'require' is not defined.
test/api.js: line 18, col 14, 'require' is not defined.
test/api.js: line 19, col 16, 'require' is not defined.
test/api.js: line 20, col 20, 'require' is not defined.
test/api.js: line 21, col 16, 'require' is not defined.
test/api.js: line 22, col 15, 'require' is not defined.
test/api.js: line 23, col 17, 'require' is not defined.
test/api.js: line 24, col 15, 'require' is not defined.
test/api.js: line 25, col 19, 'require' is not defined.
test/api.js: line 26, col 15, 'require' is not defined.
test/api.js: line 27, col 13, 'require' is not defined.
test/api.js: line 296, col 29, 'require' is not defined.
test/api.js: line 335, col 27, 'require' is not defined.
test/api.js: line 12, col 29, 'setTimeout' is not defined.
test/api.js: line 29, col 1, 'describe' is not defined.
test/api.js: line 376, col 13, 'describe' is not defined.
test/api.js: line 32, col 38, '__dirname' is not defined.
test/api.js: line 33, col 39, '__dirname' is not defined.
test/api.js: line 505, col 81, '__dirname' is not defined.
test/api.js: line 176, col 5, 'after' is not defined.
test/api.js: line 218, col 55, 'Promise' is not defined.
test/api.js: line 226, col 15, 'Promise' is not defined.
test/api.js: line 297, col 15, 'Promise' is not defined.
test/api.js: line 322, col 5, 'it' is not defined.
test/api.js: line 334, col 5, 'it' is not defined.
test/api.js: line 377, col 17, 'it' is not defined.
test/api.js: line 419, col 17, 'it' is not defined.
test/api.js: line 430, col 17, 'it' is not defined.
test/api.js: line 458, col 17, 'it' is not defined.
test/api.js: line 476, col 17, 'it' is not defined.
test/api.js: line 512, col 17, 'it' is not defined.
test/api.js: line 523, col 17, 'it' is not defined.
test/api.js: line 561, col 17, 'it' is not defined.
test/api.js: line 496, col 54, 'URLSearchParams' is not defined.

test/authentication.js: line 1, col 1, Use the function form of "use strict".
test/authentication.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 18, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 19, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 20, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 21, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 21, col 30, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 21, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 23, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 30, col 108, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 38, col 12, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 42, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 42, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 43, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 45, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 45, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 50, col 84, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 50, col 91, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 51, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 53, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 54, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 54, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 60, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 60, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 61, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 61, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 69, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 69, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 70, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 70, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 78, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 78, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 79, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 79, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 87, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 87, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 88, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 88, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 96, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 96, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 97, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 98, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 100, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 100, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 100, col 45, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 101, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 115, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 120, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 121, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 121, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 121, col 50, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 122, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 127, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 131, col 32, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 131, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 134, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 134, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 134, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 141, col 72, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 141, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 142, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 143, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 143, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 144, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 146, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 147, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 153, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 153, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 154, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 155, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 155, col 51, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 158, col 47, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 162, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 163, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 164, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 165, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 168, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 168, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 172, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 173, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 175, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 175, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 185, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 185, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 186, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 187, col 39, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 187, col 49, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 190, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 190, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 191, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 191, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 193, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 193, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 193, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 194, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 198, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 198, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 203, col 87, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 203, col 94, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 204, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 204, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 211, col 71, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 211, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 212, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 213, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 216, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 216, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 218, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 219, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 227, col 108, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 227, col 115, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 228, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 228, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 230, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 231, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 237, col 85, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 237, col 92, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 238, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 241, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 241, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 243, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 244, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 252, col 65, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 252, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 253, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 256, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 256, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 258, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 259, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 269, col 57, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 269, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 270, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 271, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 273, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 273, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 273, col 49, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 287, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 287, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 288, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 288, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 293, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 293, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 294, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 294, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 299, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 299, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 300, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 300, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 305, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 305, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 306, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 306, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 311, col 75, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 311, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 313, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 313, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 318, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 318, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 319, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 320, col 14, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 323, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 323, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 328, col 59, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 328, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 330, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 330, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 336, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 336, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 338, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 338, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 346, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 346, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 348, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 348, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 357, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 357, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 358, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 362, col 14, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 362, col 25, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 364, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 364, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 370, col 59, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 370, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 371, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 371, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 380, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 380, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 382, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 382, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 394, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 394, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 395, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 396, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 396, col 81, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 399, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 399, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 403, col 79, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 403, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 405, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 405, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 411, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 411, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 412, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 413, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 415, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 415, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 415, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 427, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 428, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 434, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 434, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 438, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 438, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 440, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 440, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 452, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 454, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 454, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 460, col 106, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 460, col 113, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 462, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 462, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 466, col 98, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 466, col 105, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 469, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 469, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 474, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 474, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 476, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 480, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 488, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 488, col 40, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 492, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 492, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 493, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 495, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 499, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 500, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 501, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 502, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 503, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 503, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 507, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 515, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 515, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 516, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 516, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 516, col 69, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 519, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 526, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 526, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 527, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 527, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 527, col 69, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 529, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 537, col 70, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 537, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 538, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 538, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 538, col 69, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 540, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 548, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/authentication.js: line 548, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 549, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 549, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/authentication.js: line 549, col 69, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 551, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/authentication.js: line 4, col 16, 'require' is not defined.
test/authentication.js: line 5, col 13, 'require' is not defined.
test/authentication.js: line 6, col 15, 'require' is not defined.
test/authentication.js: line 8, col 17, 'require' is not defined.
test/authentication.js: line 9, col 12, 'require' is not defined.
test/authentication.js: line 10, col 14, 'require' is not defined.
test/authentication.js: line 11, col 15, 'require' is not defined.
test/authentication.js: line 12, col 14, 'require' is not defined.
test/authentication.js: line 13, col 17, 'require' is not defined.
test/authentication.js: line 14, col 20, 'require' is not defined.
test/authentication.js: line 15, col 13, 'require' is not defined.
test/authentication.js: line 16, col 17, 'require' is not defined.
test/authentication.js: line 154, col 29, 'require' is not defined.
test/authentication.js: line 18, col 1, 'describe' is not defined.
test/authentication.js: line 162, col 5, 'describe' is not defined.
test/authentication.js: line 427, col 5, 'describe' is not defined.
test/authentication.js: line 499, col 5, 'describe' is not defined.
test/authentication.js: line 23, col 5, 'before' is not defined.
test/authentication.js: line 434, col 9, 'before' is not defined.
test/authentication.js: line 503, col 9, 'before' is not defined.
test/authentication.js: line 38, col 5, 'after' is not defined.
test/authentication.js: line 42, col 5, 'it' is not defined.
test/authentication.js: line 50, col 5, 'it' is not defined.
test/authentication.js: line 60, col 5, 'it' is not defined.
test/authentication.js: line 69, col 5, 'it' is not defined.
test/authentication.js: line 78, col 5, 'it' is not defined.
test/authentication.js: line 87, col 5, 'it' is not defined.
test/authentication.js: line 96, col 5, 'it' is not defined.
test/authentication.js: line 131, col 5, 'it' is not defined.
test/authentication.js: line 141, col 5, 'it' is not defined.
test/authentication.js: line 153, col 5, 'it' is not defined.
test/authentication.js: line 190, col 9, 'it' is not defined.
test/authentication.js: line 203, col 9, 'it' is not defined.
test/authentication.js: line 211, col 9, 'it' is not defined.
test/authentication.js: line 227, col 9, 'it' is not defined.
test/authentication.js: line 237, col 9, 'it' is not defined.
test/authentication.js: line 252, col 9, 'it' is not defined.
test/authentication.js: line 269, col 5, 'it' is not defined.
test/authentication.js: line 287, col 5, 'it' is not defined.
test/authentication.js: line 293, col 5, 'it' is not defined.
test/authentication.js: line 299, col 5, 'it' is not defined.
test/authentication.js: line 305, col 5, 'it' is not defined.
test/authentication.js: line 311, col 5, 'it' is not defined.
test/authentication.js: line 318, col 5, 'it' is not defined.
test/authentication.js: line 328, col 5, 'it' is not defined.
test/authentication.js: line 336, col 5, 'it' is not defined.
test/authentication.js: line 346, col 5, 'it' is not defined.
test/authentication.js: line 357, col 5, 'it' is not defined.
test/authentication.js: line 370, col 5, 'it' is not defined.
test/authentication.js: line 380, col 5, 'it' is not defined.
test/authentication.js: line 394, col 5, 'it' is not defined.
test/authentication.js: line 403, col 5, 'it' is not defined.
test/authentication.js: line 411, col 5, 'it' is not defined.
test/authentication.js: line 438, col 9, 'it' is not defined.
test/authentication.js: line 460, col 9, 'it' is not defined.
test/authentication.js: line 466, col 9, 'it' is not defined.
test/authentication.js: line 474, col 5, 'it' is not defined.
test/authentication.js: line 492, col 5, 'it' is not defined.
test/authentication.js: line 515, col 9, 'it' is not defined.
test/authentication.js: line 526, col 9, 'it' is not defined.
test/authentication.js: line 537, col 9, 'it' is not defined.
test/authentication.js: line 548, col 9, 'it' is not defined.
test/authentication.js: line 185, col 9, 'beforeEach' is not defined.

test/batch.js: line 1, col 1, Use the function form of "use strict".
test/batch.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/batch.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/batch.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/batch.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/batch.js: line 10, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 11, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/batch.js: line 12, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/batch.js: line 13, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 14, col 14, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/batch.js: line 16, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 21, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 22, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/batch.js: line 23, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 24, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 33, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 40, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 41, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/batch.js: line 42, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 43, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 48, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 55, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/batch.js: line 55, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 56, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/batch.js: line 57, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 58, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 68, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/batch.js: line 68, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 69, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/batch.js: line 70, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/batch.js: line 70, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 71, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 80, col 57, 'async functions' is only available in ES8 (use 'esversion: 8').
test/batch.js: line 80, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 89, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/batch.js: line 90, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/batch.js: line 90, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 91, col 25, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 101, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 102, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/batch.js: line 103, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 104, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 113, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 120, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/batch.js: line 120, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 121, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/batch.js: line 122, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 123, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/batch.js: line 3, col 15, 'require' is not defined.
test/batch.js: line 4, col 16, 'require' is not defined.
test/batch.js: line 6, col 12, 'require' is not defined.
test/batch.js: line 8, col 15, 'require' is not defined.
test/batch.js: line 10, col 1, 'describe' is not defined.
test/batch.js: line 13, col 5, 'before' is not defined.
test/batch.js: line 21, col 5, 'it' is not defined.
test/batch.js: line 40, col 5, 'it' is not defined.
test/batch.js: line 55, col 5, 'it' is not defined.
test/batch.js: line 68, col 5, 'it' is not defined.
test/batch.js: line 80, col 5, 'it' is not defined.
test/batch.js: line 101, col 5, 'it' is not defined.
test/batch.js: line 120, col 5, 'it' is not defined.
test/batch.js: line 28, col 13, 'setImmediate' is not defined.
test/batch.js: line 47, col 13, 'setImmediate' is not defined.
test/batch.js: line 62, col 13, 'setImmediate' is not defined.
test/batch.js: line 108, col 13, 'setImmediate' is not defined.
test/batch.js: line 127, col 13, 'setImmediate' is not defined.

test/blacklist.js: line 1, col 1, Use the function form of "use strict".
test/blacklist.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/blacklist.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/blacklist.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/blacklist.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/blacklist.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/blacklist.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/blacklist.js: line 11, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 12, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/blacklist.js: line 14, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 15, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 22, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/blacklist.js: line 23, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/blacklist.js: line 25, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 28, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 34, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 35, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 41, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 42, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 48, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 49, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 55, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 56, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 62, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 63, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 69, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 70, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 76, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 77, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/blacklist.js: line 3, col 15, 'require' is not defined.
test/blacklist.js: line 4, col 16, 'require' is not defined.
test/blacklist.js: line 6, col 12, 'require' is not defined.
test/blacklist.js: line 7, col 16, 'require' is not defined.
test/blacklist.js: line 8, col 14, 'require' is not defined.
test/blacklist.js: line 9, col 19, 'require' is not defined.
test/blacklist.js: line 22, col 29, 'require' is not defined.
test/blacklist.js: line 11, col 1, 'describe' is not defined.
test/blacklist.js: line 14, col 5, 'before' is not defined.
test/blacklist.js: line 25, col 5, 'it' is not defined.
test/blacklist.js: line 34, col 5, 'it' is not defined.
test/blacklist.js: line 41, col 5, 'it' is not defined.
test/blacklist.js: line 48, col 5, 'it' is not defined.
test/blacklist.js: line 55, col 5, 'it' is not defined.
test/blacklist.js: line 62, col 5, 'it' is not defined.
test/blacklist.js: line 69, col 5, 'it' is not defined.
test/blacklist.js: line 76, col 5, 'it' is not defined.

test/build.js: line 1, col 1, Use the function form of "use strict".
test/build.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 6, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 11, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 12, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 13, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/build.js: line 13, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 17, col 11, 'async functions' is only available in ES8 (use 'esversion: 8').
test/build.js: line 17, col 18, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 18, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 19, col 37, 'async functions' is only available in ES8 (use 'esversion: 8').
test/build.js: line 19, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 23, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 24, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 27, col 18, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 33, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 34, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 40, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 62, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 66, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 69, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 70, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 77, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 78, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 86, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 87, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 89, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/build.js: line 89, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 94, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 95, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 101, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 102, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 104, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 110, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 111, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 113, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 120, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 121, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 123, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 130, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 131, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 133, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 139, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 140, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 142, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 169, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 171, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 178, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 179, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/build.js: line 182, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 184, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 187, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 189, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/build.js: line 3, col 14, 'require' is not defined.
test/build.js: line 4, col 12, 'require' is not defined.
test/build.js: line 5, col 16, 'require' is not defined.
test/build.js: line 6, col 20, 'require' is not defined.
test/build.js: line 8, col 12, 'require' is not defined.
test/build.js: line 9, col 14, 'require' is not defined.
test/build.js: line 23, col 22, 'require' is not defined.
test/build.js: line 87, col 19, 'require' is not defined.
test/build.js: line 11, col 1, 'describe' is not defined.
test/build.js: line 86, col 1, 'describe' is not defined.
test/build.js: line 12, col 32, '__dirname' is not defined.
test/build.js: line 25, col 22, '__dirname' is not defined.
test/build.js: line 26, col 22, '__dirname' is not defined.
test/build.js: line 29, col 32, '__dirname' is not defined.
test/build.js: line 34, col 39, '__dirname' is not defined.
test/build.js: line 67, col 22, '__dirname' is not defined.
test/build.js: line 90, col 40, '__dirname' is not defined.
test/build.js: line 104, col 40, '__dirname' is not defined.
test/build.js: line 113, col 40, '__dirname' is not defined.
test/build.js: line 123, col 40, '__dirname' is not defined.
test/build.js: line 133, col 40, '__dirname' is not defined.
test/build.js: line 142, col 40, '__dirname' is not defined.
test/build.js: line 171, col 40, '__dirname' is not defined.
test/build.js: line 182, col 42, '__dirname' is not defined.
test/build.js: line 187, col 38, '__dirname' is not defined.
test/build.js: line 13, col 5, 'before' is not defined.
test/build.js: line 89, col 5, 'before' is not defined.
test/build.js: line 17, col 5, 'after' is not defined.
test/build.js: line 19, col 15, 'Promise' is not defined.
test/build.js: line 33, col 5, 'it' is not defined.
test/build.js: line 69, col 5, 'it' is not defined.
test/build.js: line 77, col 5, 'it' is not defined.
test/build.js: line 94, col 5, 'it' is not defined.
test/build.js: line 101, col 5, 'it' is not defined.
test/build.js: line 110, col 5, 'it' is not defined.
test/build.js: line 120, col 5, 'it' is not defined.
test/build.js: line 130, col 5, 'it' is not defined.
test/build.js: line 139, col 5, 'it' is not defined.
test/build.js: line 167, col 5, 'it' is not defined.
test/build.js: line 178, col 5, 'it' is not defined.

test/categories.js: line 1, col 1, Use the function form of "use strict".
test/categories.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 14, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 15, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 16, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 17, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 19, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 19, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 26, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 33, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 41, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 47, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 58, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 63, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 70, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 71, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 79, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 79, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 80, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 80, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 80, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 86, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 87, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 90, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 95, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 97, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 105, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 106, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 113, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 117, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 123, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 131, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 134, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 141, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 142, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 143, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 144, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 144, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 145, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 145, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 162, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 163, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 165, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 165, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 168, col 42, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 168, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 178, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 179, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 180, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 181, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 181, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 189, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 198, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 199, col 94, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 206, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 207, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 214, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 215, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 222, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 230, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 240, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 240, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 241, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 247, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 248, col 87, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 252, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 253, col 97, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 260, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 261, col 93, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 268, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 269, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 276, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 277, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 279, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 282, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 291, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 292, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 294, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 302, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 303, col 118, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 309, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 310, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 317, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 317, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 318, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 323, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 324, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 325, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 326, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 327, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 327, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 328, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 338, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 338, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 339, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 348, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 348, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 349, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 350, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 355, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 364, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 364, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 365, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 366, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 367, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 368, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 369, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 375, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 384, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 384, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 385, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 386, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 397, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 405, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 405, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 406, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 407, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 408, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 409, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 412, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 412, col 51, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 417, col 47, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 421, col 94, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 421, col 101, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 422, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 423, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 428, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 430, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 430, col 59, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 437, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 441, col 37, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 441, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 442, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 453, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 457, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 458, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 465, col 37, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 465, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 467, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 471, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 471, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 473, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 477, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 477, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 478, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 488, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 488, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 489, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 490, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 491, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 492, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 500, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 504, col 57, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 504, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 505, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 506, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 507, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 511, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 511, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 512, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 513, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 514, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 515, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 516, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 518, col 75, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 520, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 524, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 524, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 525, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 526, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 527, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 535, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 539, col 79, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 539, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 540, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 541, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 542, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 550, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 555, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 558, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 565, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 567, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 576, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 577, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 578, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 579, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 582, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 589, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 590, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 596, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 597, col 105, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 604, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 605, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 609, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 611, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 611, col 91, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 619, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 620, col 105, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 627, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 628, col 101, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 635, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 642, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 651, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 652, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 654, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 655, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 662, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 663, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 670, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 671, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 696, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 697, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 723, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 724, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 749, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 750, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 776, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 777, col 90, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 784, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 785, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 787, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 787, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 788, col 18, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 790, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 794, col 91, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 795, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 804, col 66, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 804, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 808, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 812, col 71, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 812, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 813, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 816, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 820, col 19, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 820, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 821, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 822, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 830, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 831, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 832, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 847, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 856, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/categories.js: line 856, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/categories.js: line 857, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 858, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 859, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 860, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/categories.js: line 3, col 16, 'require' is not defined.
test/categories.js: line 4, col 15, 'require' is not defined.
test/categories.js: line 6, col 17, 'require' is not defined.
test/categories.js: line 7, col 12, 'require' is not defined.
test/categories.js: line 8, col 20, 'require' is not defined.
test/categories.js: line 9, col 16, 'require' is not defined.
test/categories.js: line 10, col 14, 'require' is not defined.
test/categories.js: line 11, col 16, 'require' is not defined.
test/categories.js: line 12, col 20, 'require' is not defined.
test/categories.js: line 179, col 34, 'require' is not defined.
test/categories.js: line 180, col 31, 'require' is not defined.
test/categories.js: line 324, col 34, 'require' is not defined.
test/categories.js: line 325, col 31, 'require' is not defined.
test/categories.js: line 578, col 30, 'require' is not defined.
test/categories.js: line 652, col 28, 'require' is not defined.
test/categories.js: line 831, col 25, 'require' is not defined.
test/categories.js: line 14, col 1, 'describe' is not defined.
test/categories.js: line 86, col 5, 'describe' is not defined.
test/categories.js: line 105, col 5, 'describe' is not defined.
test/categories.js: line 141, col 5, 'describe' is not defined.
test/categories.js: line 178, col 5, 'describe' is not defined.
test/categories.js: line 323, col 5, 'describe' is not defined.
test/categories.js: line 576, col 5, 'describe' is not defined.
test/categories.js: line 651, col 5, 'describe' is not defined.
test/categories.js: line 784, col 9, 'describe' is not defined.
test/categories.js: line 830, col 5, 'describe' is not defined.
test/categories.js: line 19, col 5, 'before' is not defined.
test/categories.js: line 144, col 9, 'before' is not defined.
test/categories.js: line 181, col 9, 'before' is not defined.
test/categories.js: line 327, col 9, 'before' is not defined.
test/categories.js: line 579, col 9, 'before' is not defined.
test/categories.js: line 787, col 13, 'before' is not defined.
test/categories.js: line 26, col 5, 'it' is not defined.
test/categories.js: line 41, col 5, 'it' is not defined.
test/categories.js: line 58, col 5, 'it' is not defined.
test/categories.js: line 70, col 5, 'it' is not defined.
test/categories.js: line 79, col 5, 'it' is not defined.
test/categories.js: line 87, col 9, 'it' is not defined.
test/categories.js: line 106, col 9, 'it' is not defined.
test/categories.js: line 123, col 9, 'it' is not defined.
test/categories.js: line 162, col 9, 'it' is not defined.
test/categories.js: line 198, col 9, 'it' is not defined.
test/categories.js: line 206, col 9, 'it' is not defined.
test/categories.js: line 214, col 9, 'it' is not defined.
test/categories.js: line 222, col 9, 'it' is not defined.
test/categories.js: line 240, col 9, 'it' is not defined.
test/categories.js: line 252, col 9, 'it' is not defined.
test/categories.js: line 260, col 9, 'it' is not defined.
test/categories.js: line 268, col 9, 'it' is not defined.
test/categories.js: line 276, col 9, 'it' is not defined.
test/categories.js: line 291, col 9, 'it' is not defined.
test/categories.js: line 302, col 9, 'it' is not defined.
test/categories.js: line 309, col 9, 'it' is not defined.
test/categories.js: line 317, col 9, 'it' is not defined.
test/categories.js: line 338, col 9, 'it' is not defined.
test/categories.js: line 348, col 9, 'it' is not defined.
test/categories.js: line 364, col 9, 'it' is not defined.
test/categories.js: line 384, col 9, 'it' is not defined.
test/categories.js: line 405, col 9, 'it' is not defined.
test/categories.js: line 421, col 9, 'it' is not defined.
test/categories.js: line 441, col 9, 'it' is not defined.
test/categories.js: line 457, col 9, 'it' is not defined.
test/categories.js: line 465, col 9, 'it' is not defined.
test/categories.js: line 471, col 9, 'it' is not defined.
test/categories.js: line 477, col 9, 'it' is not defined.
test/categories.js: line 488, col 9, 'it' is not defined.
test/categories.js: line 504, col 9, 'it' is not defined.
test/categories.js: line 511, col 9, 'it' is not defined.
test/categories.js: line 524, col 9, 'it' is not defined.
test/categories.js: line 539, col 9, 'it' is not defined.
test/categories.js: line 555, col 5, 'it' is not defined.
test/categories.js: line 589, col 9, 'it' is not defined.
test/categories.js: line 596, col 9, 'it' is not defined.
test/categories.js: line 604, col 9, 'it' is not defined.
test/categories.js: line 619, col 9, 'it' is not defined.
test/categories.js: line 627, col 9, 'it' is not defined.
test/categories.js: line 635, col 9, 'it' is not defined.
test/categories.js: line 654, col 9, 'it' is not defined.
test/categories.js: line 662, col 9, 'it' is not defined.
test/categories.js: line 670, col 9, 'it' is not defined.
test/categories.js: line 696, col 9, 'it' is not defined.
test/categories.js: line 723, col 9, 'it' is not defined.
test/categories.js: line 749, col 9, 'it' is not defined.
test/categories.js: line 776, col 9, 'it' is not defined.
test/categories.js: line 794, col 13, 'it' is not defined.
test/categories.js: line 804, col 13, 'it' is not defined.
test/categories.js: line 812, col 13, 'it' is not defined.
test/categories.js: line 832, col 9, 'it' is not defined.
test/categories.js: line 856, col 5, 'it' is not defined.
test/categories.js: line 145, col 45, 'Promise' is not defined.
test/categories.js: line 820, col 13, 'after' is not defined.

test/controllers-admin.js: line 1, col 1, Use the function form of "use strict".
test/controllers-admin.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 16, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 17, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 18, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 19, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 20, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 21, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 22, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 23, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 24, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 25, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 27, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 47, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 47, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 57, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 62, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 68, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 68, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 69, col 10, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 70, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 70, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 70, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 78, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 78, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 80, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 83, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 83, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 84, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 84, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 84, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 90, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 90, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 91, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 91, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 91, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 98, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 98, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 99, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 99, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 99, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 104, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 104, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 105, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 105, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 105, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 110, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 110, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 111, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 111, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 111, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 116, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 116, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 117, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 117, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 117, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 122, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 122, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 123, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 123, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 123, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 128, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 128, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 129, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 129, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 129, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 134, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 134, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 135, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 135, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 135, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 140, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 140, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 141, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 141, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 141, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 146, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 146, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 147, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 147, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 147, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 152, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 152, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 153, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 153, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 153, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 158, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 158, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 159, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 159, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 159, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 167, col 65, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 167, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 168, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 168, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 168, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 168, col 106, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 172, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 172, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 173, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 173, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 173, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 178, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 178, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 179, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 179, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 179, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 192, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 194, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 194, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 194, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 202, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 202, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 203, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 203, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 203, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 210, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 210, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 211, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 211, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 211, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 217, col 75, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 217, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 218, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 218, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 218, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 224, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 224, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 225, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 225, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 225, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 231, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 231, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 232, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 232, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 232, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 238, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 238, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 239, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 239, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 239, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 244, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 244, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 245, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 245, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 245, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 250, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 250, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 251, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 251, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 251, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 256, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 256, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 257, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 257, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 257, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 262, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 263, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 264, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 266, col 24, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 266, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 267, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 267, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 267, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 270, col 34, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 280, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 280, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 281, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 281, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 281, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 281, col 115, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 286, col 84, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 286, col 91, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 287, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 287, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 287, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 297, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 297, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 298, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 298, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 298, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 301, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 308, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 308, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 309, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 309, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 309, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 309, col 104, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 314, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 314, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 315, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 315, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 315, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 315, col 104, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 320, col 82, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 320, col 89, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 321, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 321, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 321, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 321, col 109, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 326, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 326, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 327, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 327, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 327, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 327, col 119, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 332, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 332, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 333, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 333, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 333, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 338, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 338, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 340, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 340, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 340, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 345, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 345, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 346, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 348, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 348, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 348, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 348, col 103, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 353, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 353, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 354, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 355, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 358, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 358, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 358, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 358, col 99, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 364, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 364, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 365, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 365, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 365, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 365, col 106, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 370, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 370, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 371, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 371, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 371, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 371, col 108, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 376, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 376, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 377, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 377, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 377, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 377, col 105, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 382, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 382, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 383, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 383, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 383, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 383, col 107, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 388, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 388, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 389, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 389, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 389, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 389, col 109, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 394, col 57, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 394, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 395, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 395, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 396, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 396, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 397, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 397, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 397, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 408, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 408, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 409, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 409, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 409, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 409, col 119, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 414, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 414, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 415, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 415, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 415, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 415, col 104, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 420, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 420, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 421, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 421, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 421, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 421, col 104, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 426, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 426, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 427, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 427, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 427, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 427, col 108, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 432, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 432, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 433, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 433, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 433, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 433, col 96, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 435, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 435, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 443, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 443, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 444, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 444, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 444, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 444, col 101, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 449, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 449, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 450, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 450, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 450, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 455, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 455, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 456, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 456, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 456, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 461, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 461, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 462, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 462, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 462, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 467, col 37, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 467, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 468, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 468, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 468, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 468, col 96, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 473, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 473, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 474, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 474, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 474, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 474, col 107, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 479, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 479, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 480, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 480, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 480, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 480, col 110, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 485, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 485, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 487, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 487, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 487, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 487, col 90, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 493, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 494, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 495, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 496, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 496, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 499, col 31, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 502, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 502, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 503, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 503, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 503, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 514, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 514, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 515, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 515, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 515, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 522, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 522, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 523, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 523, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 523, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 532, col 79, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 532, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 533, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 533, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 546, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 546, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 547, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 549, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 549, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 564, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 564, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 565, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 577, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 577, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 584, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 584, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 586, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 586, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 586, col 59, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 595, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 595, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 596, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 604, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 604, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 604, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 604, col 85, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 610, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 610, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 610, col 87, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 619, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 620, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 621, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 622, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 623, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 623, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 628, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 629, col 66, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 632, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 641, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 642, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 643, col 22, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 643, col 34, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 646, col 21, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 646, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 646, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 650, col 22, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 650, col 60, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 656, col 22, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 656, col 34, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 659, col 21, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 659, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 659, col 69, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 663, col 22, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 663, col 66, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 671, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 672, col 66, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 672, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 673, col 22, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 673, col 34, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 676, col 21, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 676, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 676, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 680, col 22, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 680, col 60, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 688, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 688, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 689, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 709, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 709, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 710, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 723, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 723, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 726, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 728, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 741, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers-admin.js: line 741, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers-admin.js: line 742, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers-admin.js: line 3, col 15, 'require' is not defined.
test/controllers-admin.js: line 4, col 16, 'require' is not defined.
test/controllers-admin.js: line 5, col 15, 'require' is not defined.
test/controllers-admin.js: line 7, col 17, 'require' is not defined.
test/controllers-admin.js: line 8, col 12, 'require' is not defined.
test/controllers-admin.js: line 9, col 20, 'require' is not defined.
test/controllers-admin.js: line 10, col 16, 'require' is not defined.
test/controllers-admin.js: line 11, col 14, 'require' is not defined.
test/controllers-admin.js: line 12, col 16, 'require' is not defined.
test/controllers-admin.js: line 13, col 17, 'require' is not defined.
test/controllers-admin.js: line 14, col 14, 'require' is not defined.
test/controllers-admin.js: line 263, col 29, 'require' is not defined.
test/controllers-admin.js: line 346, col 20, 'require' is not defined.
test/controllers-admin.js: line 354, col 28, 'require' is not defined.
test/controllers-admin.js: line 355, col 22, 'require' is not defined.
test/controllers-admin.js: line 596, col 25, 'require' is not defined.
test/controllers-admin.js: line 621, col 28, 'require' is not defined.
test/controllers-admin.js: line 16, col 1, 'describe' is not defined.
test/controllers-admin.js: line 493, col 5, 'describe' is not defined.
test/controllers-admin.js: line 619, col 5, 'describe' is not defined.
test/controllers-admin.js: line 628, col 9, 'describe' is not defined.
test/controllers-admin.js: line 671, col 9, 'describe' is not defined.
test/controllers-admin.js: line 27, col 5, 'before' is not defined.
test/controllers-admin.js: line 496, col 9, 'before' is not defined.
test/controllers-admin.js: line 623, col 9, 'before' is not defined.
test/controllers-admin.js: line 68, col 5, 'it' is not defined.
test/controllers-admin.js: line 78, col 5, 'it' is not defined.
test/controllers-admin.js: line 90, col 5, 'it' is not defined.
test/controllers-admin.js: line 98, col 5, 'it' is not defined.
test/controllers-admin.js: line 104, col 5, 'it' is not defined.
test/controllers-admin.js: line 110, col 5, 'it' is not defined.
test/controllers-admin.js: line 116, col 5, 'it' is not defined.
test/controllers-admin.js: line 122, col 5, 'it' is not defined.
test/controllers-admin.js: line 128, col 5, 'it' is not defined.
test/controllers-admin.js: line 134, col 5, 'it' is not defined.
test/controllers-admin.js: line 140, col 5, 'it' is not defined.
test/controllers-admin.js: line 146, col 5, 'it' is not defined.
test/controllers-admin.js: line 152, col 5, 'it' is not defined.
test/controllers-admin.js: line 158, col 5, 'it' is not defined.
test/controllers-admin.js: line 167, col 5, 'it' is not defined.
test/controllers-admin.js: line 172, col 5, 'it' is not defined.
test/controllers-admin.js: line 178, col 5, 'it' is not defined.
test/controllers-admin.js: line 192, col 5, 'it' is not defined.
test/controllers-admin.js: line 202, col 5, 'it' is not defined.
test/controllers-admin.js: line 210, col 5, 'it' is not defined.
test/controllers-admin.js: line 217, col 5, 'it' is not defined.
test/controllers-admin.js: line 224, col 5, 'it' is not defined.
test/controllers-admin.js: line 231, col 5, 'it' is not defined.
test/controllers-admin.js: line 238, col 5, 'it' is not defined.
test/controllers-admin.js: line 244, col 5, 'it' is not defined.
test/controllers-admin.js: line 250, col 5, 'it' is not defined.
test/controllers-admin.js: line 256, col 5, 'it' is not defined.
test/controllers-admin.js: line 262, col 5, 'it' is not defined.
test/controllers-admin.js: line 280, col 5, 'it' is not defined.
test/controllers-admin.js: line 286, col 5, 'it' is not defined.
test/controllers-admin.js: line 297, col 5, 'it' is not defined.
test/controllers-admin.js: line 308, col 5, 'it' is not defined.
test/controllers-admin.js: line 314, col 5, 'it' is not defined.
test/controllers-admin.js: line 320, col 5, 'it' is not defined.
test/controllers-admin.js: line 326, col 5, 'it' is not defined.
test/controllers-admin.js: line 332, col 5, 'it' is not defined.
test/controllers-admin.js: line 338, col 5, 'it' is not defined.
test/controllers-admin.js: line 345, col 5, 'it' is not defined.
test/controllers-admin.js: line 353, col 5, 'it' is not defined.
test/controllers-admin.js: line 364, col 5, 'it' is not defined.
test/controllers-admin.js: line 370, col 5, 'it' is not defined.
test/controllers-admin.js: line 376, col 5, 'it' is not defined.
test/controllers-admin.js: line 382, col 5, 'it' is not defined.
test/controllers-admin.js: line 388, col 5, 'it' is not defined.
test/controllers-admin.js: line 394, col 5, 'it' is not defined.
test/controllers-admin.js: line 408, col 5, 'it' is not defined.
test/controllers-admin.js: line 414, col 5, 'it' is not defined.
test/controllers-admin.js: line 420, col 5, 'it' is not defined.
test/controllers-admin.js: line 426, col 5, 'it' is not defined.
test/controllers-admin.js: line 432, col 5, 'it' is not defined.
test/controllers-admin.js: line 443, col 5, 'it' is not defined.
test/controllers-admin.js: line 449, col 5, 'it' is not defined.
test/controllers-admin.js: line 455, col 5, 'it' is not defined.
test/controllers-admin.js: line 461, col 5, 'it' is not defined.
test/controllers-admin.js: line 467, col 5, 'it' is not defined.
test/controllers-admin.js: line 473, col 5, 'it' is not defined.
test/controllers-admin.js: line 479, col 5, 'it' is not defined.
test/controllers-admin.js: line 485, col 5, 'it' is not defined.
test/controllers-admin.js: line 502, col 9, 'it' is not defined.
test/controllers-admin.js: line 514, col 9, 'it' is not defined.
test/controllers-admin.js: line 522, col 9, 'it' is not defined.
test/controllers-admin.js: line 532, col 9, 'it' is not defined.
test/controllers-admin.js: line 546, col 9, 'it' is not defined.
test/controllers-admin.js: line 564, col 9, 'it' is not defined.
test/controllers-admin.js: line 595, col 5, 'it' is not defined.
test/controllers-admin.js: line 629, col 13, 'it' is not defined.
test/controllers-admin.js: line 672, col 13, 'it' is not defined.
test/controllers-admin.js: line 688, col 9, 'it' is not defined.
test/controllers-admin.js: line 709, col 9, 'it' is not defined.
test/controllers-admin.js: line 723, col 9, 'it' is not defined.
test/controllers-admin.js: line 741, col 9, 'it' is not defined.
test/controllers-admin.js: line 266, col 13, 'setTimeout' is not defined.

test/controllers.js: line 1, col 1, Use the function form of "use strict".
test/controllers.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 18, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 19, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 20, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 21, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 22, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 23, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 25, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 27, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 28, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 29, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 30, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 31, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 32, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 33, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 34, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 36, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 36, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 50, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 51, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 55, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 74, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 75, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 76, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 77, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 78, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 79, col 56, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 80, col 66, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 81, col 61, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 82, col 70, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 83, col 60, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 84, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 85, col 50, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 86, col 49, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 87, col 51, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 88, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 89, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 90, col 60, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 91, col 56, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 92, col 50, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 93, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 94, col 51, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 95, col 51, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 96, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 97, col 49, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 98, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 99, col 50, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 103, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 103, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 104, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 104, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 104, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 109, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 109, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 110, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 110, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 110, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 121, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 131, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 132, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 133, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 135, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 135, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 145, col 9, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 146, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 146, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 151, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 151, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 155, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 155, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 160, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 160, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 165, col 31, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 165, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 170, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 170, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 175, col 36, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 175, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 180, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 180, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 181, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 181, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 181, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 187, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 187, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 192, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 192, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 194, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 194, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 199, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 199, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 201, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 201, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 201, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 207, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 207, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 209, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 209, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 216, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 223, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 224, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 225, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 226, col 26, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 226, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 227, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 227, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 227, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 238, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 238, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 239, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 240, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 241, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 241, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 241, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 248, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 254, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 256, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 256, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 256, col 67, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 266, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 267, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 268, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 269, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 270, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 270, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 270, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 272, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 272, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 288, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 293, col 115, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 293, col 122, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 294, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 294, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 294, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 295, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 306, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 308, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 308, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 308, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 309, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 316, col 89, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 316, col 96, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 319, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 319, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 319, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 320, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 329, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 329, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 338, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 338, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 339, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 340, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 346, col 73, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 351, col 73, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 351, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 352, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 353, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 359, col 73, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 364, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 364, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 365, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 366, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 378, col 78, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 378, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 379, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 381, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 396, col 84, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 396, col 91, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 399, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 403, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 412, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 419, col 78, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 419, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 421, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 421, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 422, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 422, col 53, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 422, col 63, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 423, col 59, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 426, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 433, col 32, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 440, col 80, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 440, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 444, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 444, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 445, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 445, col 53, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 445, col 63, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 446, col 59, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 449, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 465, col 101, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 465, col 108, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 466, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 466, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 467, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 467, col 49, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 467, col 59, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 468, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 471, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 477, col 58, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 478, col 28, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 479, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 482, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 482, col 75, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 484, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 486, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 487, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 491, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 492, col 17, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 493, col 17, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 494, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 496, col 24, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 496, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 498, col 25, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 504, col 17, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 505, col 40, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 506, col 25, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 513, col 78, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 513, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 516, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 516, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 516, col 61, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 517, col 25, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 524, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 531, col 67, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 535, col 111, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 535, col 118, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 536, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 536, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 536, col 60, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 537, col 25, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 544, col 101, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 544, col 108, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 545, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 546, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 546, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 546, col 63, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 549, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 549, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 549, col 60, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 550, col 25, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 556, col 67, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 560, col 97, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 560, col 104, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 561, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 562, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 562, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 562, col 63, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 565, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 565, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 565, col 60, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 566, col 25, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 573, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 574, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 575, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 575, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 575, col 63, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 575, col 68, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 575, col 73, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 576, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 576, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 576, col 66, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 577, col 25, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 582, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 589, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 590, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 591, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 593, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 593, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 601, col 79, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 601, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 602, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 602, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 602, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 603, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 616, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 620, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 621, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 622, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 624, col 24, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 624, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 632, col 100, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 632, col 107, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 633, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 633, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 633, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 634, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 643, col 68, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 644, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 647, col 152, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 647, col 159, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 649, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 650, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 663, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 663, col 74, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 665, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 665, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 665, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 666, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 681, col 28, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 681, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 683, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 683, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 683, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 689, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 689, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 691, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 691, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 691, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 697, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 697, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 698, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 698, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 698, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 704, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 704, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 706, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 706, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 706, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 712, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 712, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 727, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 727, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 727, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 733, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 733, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 734, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 734, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 734, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 739, col 72, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 739, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 740, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 746, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 746, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 746, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 752, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 753, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 754, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 755, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 757, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 757, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 759, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 764, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 764, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 765, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 765, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 765, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 774, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 774, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 775, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 775, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 775, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 791, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 791, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 792, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 792, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 793, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 794, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 796, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 796, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 796, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 814, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 815, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 817, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 817, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 819, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 837, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 837, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 838, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 838, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 838, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 844, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 844, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 845, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 845, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 846, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 846, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 853, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 853, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 855, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 855, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 855, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 862, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 863, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 863, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 873, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 873, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 874, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 874, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 874, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 880, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 880, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 881, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 881, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 881, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 888, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 888, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 889, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 889, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 889, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 898, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 899, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 903, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 908, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 908, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 909, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 909, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 909, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 913, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 913, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 914, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 914, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 914, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 919, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 919, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 920, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 920, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 920, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 925, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 925, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 926, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 928, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 928, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 928, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 935, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 936, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 937, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 939, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 939, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 940, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 943, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 943, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 944, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 944, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 944, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 944, col 93, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 950, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 950, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 951, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 951, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 951, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 951, col 90, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 955, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 955, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 956, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 956, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 956, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 962, col 65, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 962, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 963, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 963, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 963, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 969, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 969, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 970, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 970, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 970, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 974, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 975, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 975, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 976, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 976, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 976, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 976, col 90, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 982, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 982, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 983, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 983, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 983, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 983, col 104, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 989, col 73, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 989, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 990, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 990, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 990, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 990, col 108, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 996, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 996, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 997, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 997, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 997, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1003, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1003, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1004, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1004, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1004, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1008, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1008, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1009, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1009, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1009, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1009, col 87, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1013, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1013, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1014, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1014, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1014, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1014, col 102, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1019, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1019, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1020, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1020, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1020, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1025, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1025, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1026, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1026, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1026, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1026, col 106, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1031, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1031, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1032, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1032, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1032, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1032, col 104, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1037, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1037, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1038, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1038, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1038, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1038, col 106, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1043, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1043, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1044, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1044, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1044, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1044, col 101, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1049, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1049, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1050, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1050, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1050, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1050, col 110, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1055, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1055, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1056, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1056, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1056, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1056, col 104, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1061, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1061, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1062, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1062, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1062, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1062, col 104, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1067, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1067, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1068, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1068, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1068, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1068, col 103, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1073, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1073, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1074, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1074, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1074, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1074, col 103, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1079, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1079, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1080, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1080, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1080, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1080, col 104, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1085, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1085, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1086, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1086, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1086, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1086, col 105, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1091, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1091, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1092, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1092, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1092, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1092, col 107, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1097, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1097, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1098, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1098, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1098, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1098, col 101, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1103, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1103, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1104, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1104, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1104, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1104, col 104, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1109, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1110, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1110, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1111, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1112, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1112, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1113, col 101, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1118, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1118, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1119, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1119, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1119, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1124, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1124, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1125, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1125, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1125, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1130, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1130, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1131, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1131, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1131, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1137, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1137, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1138, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1139, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1143, col 23, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1144, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1147, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1150, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1153, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1153, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1153, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1154, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1158, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1166, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1166, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1167, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1167, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1167, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1172, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1172, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1173, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1173, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1173, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1178, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1178, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1179, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1179, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1179, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1184, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1184, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1185, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1185, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1185, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1190, col 81, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1190, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1192, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1192, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1192, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1198, col 76, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1198, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1201, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1201, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1201, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1213, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1213, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1215, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1215, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1216, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1216, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1216, col 50, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1216, col 93, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1218, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1218, col 47, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1218, col 90, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1222, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1222, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1223, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1223, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1223, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1227, col 31, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1227, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1228, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1228, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1228, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1233, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1233, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1234, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1234, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1234, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1234, col 105, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1238, col 78, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1238, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1239, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1239, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1239, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1239, col 90, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1242, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1246, col 76, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1246, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1247, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1247, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1247, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1250, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1254, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1254, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1255, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1255, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1256, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1256, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1256, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1257, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1261, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1265, col 37, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1265, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1267, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1267, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1267, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1273, col 70, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1273, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1275, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1275, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1275, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1281, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1281, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1282, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1282, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1283, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1283, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1287, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1287, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1287, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1289, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1289, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1293, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1293, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1297, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1300, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1300, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1300, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1306, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1306, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1309, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1309, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1309, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1309, col 104, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1314, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1314, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1315, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1315, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1315, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1315, col 104, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1319, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1319, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1320, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1320, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1320, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1320, col 107, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1325, col 32, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1326, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1333, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1333, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1334, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1334, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1334, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1334, col 104, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1339, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1340, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1341, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1342, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1343, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1343, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1346, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1350, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1350, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1351, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1351, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1351, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1356, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1356, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1357, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1357, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1357, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1362, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1362, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1364, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1364, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1364, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1370, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1371, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1372, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1372, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1373, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1376, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1376, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1377, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1377, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1377, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1381, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1381, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1383, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1383, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1383, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1383, col 93, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1388, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1388, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1389, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1389, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1389, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1396, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1397, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1397, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1398, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1398, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1398, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1406, col 74, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1406, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1408, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1408, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1408, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1414, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1415, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1416, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1421, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1421, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1422, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1422, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1422, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1427, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1427, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1428, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1428, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1428, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1433, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1433, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1434, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1434, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1434, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1439, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1439, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1440, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1440, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1440, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1445, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1445, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1449, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1455, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1455, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1455, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1460, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1460, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1464, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1469, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1469, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1469, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1475, col 57, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1475, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1479, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1486, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1486, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1486, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1491, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1491, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1495, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1502, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1502, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1502, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1508, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1508, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1512, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1516, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1516, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1516, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1523, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1524, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1525, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1525, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1526, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1529, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1529, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1530, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1530, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1530, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1534, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1534, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1535, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1535, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1535, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1539, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1539, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1540, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1540, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1540, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1544, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1544, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1545, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1547, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1547, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1547, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1551, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1551, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1552, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1554, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1554, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1554, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1558, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1558, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1559, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1559, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1559, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1564, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1564, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1566, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1566, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1566, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1566, col 116, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1570, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1570, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1571, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1571, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1571, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1571, col 113, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1576, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1576, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1577, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1579, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1582, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1582, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1582, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1582, col 129, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1589, col 77, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1589, col 84, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1590, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1595, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1595, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1595, col 46, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1595, col 121, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1598, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1598, col 43, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1598, col 119, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1603, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1603, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1604, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1605, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1605, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1607, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1607, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1607, col 99, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1612, col 40, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1612, col 95, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1617, col 72, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1617, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1618, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1619, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1620, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1623, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1623, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1623, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1623, col 109, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1627, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1627, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1628, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1629, col 18, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1631, col 76, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1633, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1635, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1635, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1635, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1635, col 103, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1640, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1640, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1641, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1642, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1648, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1648, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1649, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1650, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1655, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1655, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1656, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1657, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1664, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1665, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1666, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1666, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1667, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1670, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1670, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1671, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1671, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1671, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1671, col 88, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1675, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1675, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1676, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1676, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1676, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1676, col 101, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1680, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1680, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1681, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1681, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1681, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1681, col 111, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1686, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1686, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1687, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1687, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1687, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1687, col 102, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1694, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1695, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1695, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1696, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1696, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1696, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1700, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1700, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1701, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1701, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1701, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1707, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1708, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1709, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1711, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1711, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1712, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1717, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1717, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1718, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1718, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1718, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1722, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1725, col 68, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1725, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1736, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1736, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1736, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1740, col 42, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1745, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1745, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1746, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1746, col 45, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1757, col 41, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1769, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1769, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1770, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1770, col 45, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1785, col 41, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1800, col 80, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1800, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1801, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1802, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1806, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1806, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1813, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1822, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1822, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1828, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1840, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1842, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1842, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1843, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1843, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1843, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1848, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1848, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1849, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1849, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1849, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1854, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1854, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1855, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1855, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1855, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1860, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/controllers.js: line 1860, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1861, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1861, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 1861, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1868, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/controllers.js: line 1869, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/controllers.js: line 3, col 16, 'require' is not defined.
test/controllers.js: line 4, col 15, 'require' is not defined.
test/controllers.js: line 5, col 12, 'require' is not defined.
test/controllers.js: line 6, col 14, 'require' is not defined.
test/controllers.js: line 7, col 14, 'require' is not defined.
test/controllers.js: line 9, col 17, 'require' is not defined.
test/controllers.js: line 10, col 12, 'require' is not defined.
test/controllers.js: line 11, col 13, 'require' is not defined.
test/controllers.js: line 12, col 20, 'require' is not defined.
test/controllers.js: line 13, col 16, 'require' is not defined.
test/controllers.js: line 14, col 15, 'require' is not defined.
test/controllers.js: line 15, col 14, 'require' is not defined.
test/controllers.js: line 16, col 16, 'require' is not defined.
test/controllers.js: line 17, col 14, 'require' is not defined.
test/controllers.js: line 18, col 20, 'require' is not defined.
test/controllers.js: line 19, col 20, 'require' is not defined.
test/controllers.js: line 20, col 17, 'require' is not defined.
test/controllers.js: line 21, col 15, 'require' is not defined.
test/controllers.js: line 22, col 17, 'require' is not defined.
test/controllers.js: line 23, col 17, 'require' is not defined.
test/controllers.js: line 50, col 28, 'require' is not defined.
test/controllers.js: line 51, col 22, 'require' is not defined.
test/controllers.js: line 740, col 24, 'require' is not defined.
test/controllers.js: line 815, col 25, 'require' is not defined.
test/controllers.js: line 1138, col 35, 'require' is not defined.
test/controllers.js: line 1340, col 28, 'require' is not defined.
test/controllers.js: line 1341, col 25, 'require' is not defined.
test/controllers.js: line 1415, col 25, 'require' is not defined.
test/controllers.js: line 1641, col 29, 'require' is not defined.
test/controllers.js: line 1649, col 29, 'require' is not defined.
test/controllers.js: line 1656, col 29, 'require' is not defined.
test/controllers.js: line 1869, col 27, 'require' is not defined.
test/controllers.js: line 25, col 30, 'setTimeout' is not defined.
test/controllers.js: line 27, col 1, 'describe' is not defined.
test/controllers.js: line 121, col 5, 'describe' is not defined.
test/controllers.js: line 223, col 5, 'describe' is not defined.
test/controllers.js: line 266, col 5, 'describe' is not defined.
test/controllers.js: line 267, col 9, 'describe' is not defined.
test/controllers.js: line 491, col 13, 'describe' is not defined.
test/controllers.js: line 589, col 9, 'describe' is not defined.
test/controllers.js: line 620, col 9, 'describe' is not defined.
test/controllers.js: line 752, col 5, 'describe' is not defined.
test/controllers.js: line 814, col 5, 'describe' is not defined.
test/controllers.js: line 862, col 5, 'describe' is not defined.
test/controllers.js: line 898, col 5, 'describe' is not defined.
test/controllers.js: line 935, col 5, 'describe' is not defined.
test/controllers.js: line 974, col 9, 'describe' is not defined.
test/controllers.js: line 1109, col 9, 'describe' is not defined.
test/controllers.js: line 1339, col 5, 'describe' is not defined.
test/controllers.js: line 1370, col 5, 'describe' is not defined.
test/controllers.js: line 1396, col 5, 'describe' is not defined.
test/controllers.js: line 1414, col 5, 'describe' is not defined.
test/controllers.js: line 1523, col 5, 'describe' is not defined.
test/controllers.js: line 1664, col 5, 'describe' is not defined.
test/controllers.js: line 1694, col 5, 'describe' is not defined.
test/controllers.js: line 1707, col 5, 'describe' is not defined.
test/controllers.js: line 1840, col 5, 'describe' is not defined.
test/controllers.js: line 36, col 5, 'before' is not defined.
test/controllers.js: line 135, col 9, 'before' is not defined.
test/controllers.js: line 272, col 13, 'before' is not defined.
test/controllers.js: line 496, col 17, 'before' is not defined.
test/controllers.js: line 593, col 13, 'before' is not defined.
test/controllers.js: line 757, col 9, 'before' is not defined.
test/controllers.js: line 817, col 9, 'before' is not defined.
test/controllers.js: line 863, col 9, 'before' is not defined.
test/controllers.js: line 899, col 9, 'before' is not defined.
test/controllers.js: line 939, col 9, 'before' is not defined.
test/controllers.js: line 1110, col 13, 'before' is not defined.
test/controllers.js: line 1343, col 9, 'before' is not defined.
test/controllers.js: line 1372, col 9, 'before' is not defined.
test/controllers.js: line 1525, col 9, 'before' is not defined.
test/controllers.js: line 1666, col 9, 'before' is not defined.
test/controllers.js: line 1711, col 9, 'before' is not defined.
test/controllers.js: line 103, col 5, 'it' is not defined.
test/controllers.js: line 109, col 5, 'it' is not defined.
test/controllers.js: line 151, col 9, 'it' is not defined.
test/controllers.js: line 155, col 9, 'it' is not defined.
test/controllers.js: line 160, col 9, 'it' is not defined.
test/controllers.js: line 165, col 9, 'it' is not defined.
test/controllers.js: line 170, col 9, 'it' is not defined.
test/controllers.js: line 175, col 9, 'it' is not defined.
test/controllers.js: line 180, col 9, 'it' is not defined.
test/controllers.js: line 187, col 9, 'it' is not defined.
test/controllers.js: line 192, col 9, 'it' is not defined.
test/controllers.js: line 199, col 9, 'it' is not defined.
test/controllers.js: line 207, col 9, 'it' is not defined.
test/controllers.js: line 226, col 13, 'it' is not defined.
test/controllers.js: line 238, col 5, 'it' is not defined.
test/controllers.js: line 293, col 13, 'it' is not defined.
test/controllers.js: line 316, col 13, 'it' is not defined.
test/controllers.js: line 329, col 13, 'it' is not defined.
test/controllers.js: line 338, col 13, 'it' is not defined.
test/controllers.js: line 351, col 13, 'it' is not defined.
test/controllers.js: line 364, col 13, 'it' is not defined.
test/controllers.js: line 378, col 13, 'it' is not defined.
test/controllers.js: line 396, col 13, 'it' is not defined.
test/controllers.js: line 419, col 13, 'it' is not defined.
test/controllers.js: line 440, col 13, 'it' is not defined.
test/controllers.js: line 465, col 13, 'it' is not defined.
test/controllers.js: line 513, col 17, 'it' is not defined.
test/controllers.js: line 535, col 17, 'it' is not defined.
test/controllers.js: line 544, col 17, 'it' is not defined.
test/controllers.js: line 560, col 17, 'it' is not defined.
test/controllers.js: line 601, col 13, 'it' is not defined.
test/controllers.js: line 632, col 13, 'it' is not defined.
test/controllers.js: line 647, col 13, 'it' is not defined.
test/controllers.js: line 681, col 5, 'it' is not defined.
test/controllers.js: line 689, col 5, 'it' is not defined.
test/controllers.js: line 697, col 5, 'it' is not defined.
test/controllers.js: line 704, col 5, 'it' is not defined.
test/controllers.js: line 712, col 5, 'it' is not defined.
test/controllers.js: line 733, col 5, 'it' is not defined.
test/controllers.js: line 739, col 5, 'it' is not defined.
test/controllers.js: line 764, col 9, 'it' is not defined.
test/controllers.js: line 774, col 9, 'it' is not defined.
test/controllers.js: line 791, col 9, 'it' is not defined.
test/controllers.js: line 837, col 9, 'it' is not defined.
test/controllers.js: line 844, col 9, 'it' is not defined.
test/controllers.js: line 853, col 9, 'it' is not defined.
test/controllers.js: line 873, col 9, 'it' is not defined.
test/controllers.js: line 880, col 9, 'it' is not defined.
test/controllers.js: line 888, col 9, 'it' is not defined.
test/controllers.js: line 908, col 9, 'it' is not defined.
test/controllers.js: line 913, col 9, 'it' is not defined.
test/controllers.js: line 919, col 9, 'it' is not defined.
test/controllers.js: line 925, col 9, 'it' is not defined.
test/controllers.js: line 943, col 9, 'it' is not defined.
test/controllers.js: line 950, col 9, 'it' is not defined.
test/controllers.js: line 955, col 9, 'it' is not defined.
test/controllers.js: line 962, col 9, 'it' is not defined.
test/controllers.js: line 969, col 9, 'it' is not defined.
test/controllers.js: line 975, col 13, 'it' is not defined.
test/controllers.js: line 982, col 13, 'it' is not defined.
test/controllers.js: line 989, col 13, 'it' is not defined.
test/controllers.js: line 996, col 13, 'it' is not defined.
test/controllers.js: line 1003, col 9, 'it' is not defined.
test/controllers.js: line 1008, col 9, 'it' is not defined.
test/controllers.js: line 1013, col 9, 'it' is not defined.
test/controllers.js: line 1019, col 9, 'it' is not defined.
test/controllers.js: line 1025, col 9, 'it' is not defined.
test/controllers.js: line 1031, col 9, 'it' is not defined.
test/controllers.js: line 1037, col 9, 'it' is not defined.
test/controllers.js: line 1043, col 9, 'it' is not defined.
test/controllers.js: line 1049, col 9, 'it' is not defined.
test/controllers.js: line 1055, col 9, 'it' is not defined.
test/controllers.js: line 1061, col 9, 'it' is not defined.
test/controllers.js: line 1067, col 9, 'it' is not defined.
test/controllers.js: line 1073, col 9, 'it' is not defined.
test/controllers.js: line 1079, col 9, 'it' is not defined.
test/controllers.js: line 1085, col 9, 'it' is not defined.
test/controllers.js: line 1091, col 9, 'it' is not defined.
test/controllers.js: line 1097, col 9, 'it' is not defined.
test/controllers.js: line 1103, col 9, 'it' is not defined.
test/controllers.js: line 1118, col 13, 'it' is not defined.
test/controllers.js: line 1124, col 13, 'it' is not defined.
test/controllers.js: line 1130, col 13, 'it' is not defined.
test/controllers.js: line 1137, col 9, 'it' is not defined.
test/controllers.js: line 1166, col 9, 'it' is not defined.
test/controllers.js: line 1172, col 9, 'it' is not defined.
test/controllers.js: line 1178, col 9, 'it' is not defined.
test/controllers.js: line 1184, col 9, 'it' is not defined.
test/controllers.js: line 1190, col 9, 'it' is not defined.
test/controllers.js: line 1198, col 9, 'it' is not defined.
test/controllers.js: line 1213, col 9, 'it' is not defined.
test/controllers.js: line 1222, col 9, 'it' is not defined.
test/controllers.js: line 1227, col 9, 'it' is not defined.
test/controllers.js: line 1233, col 9, 'it' is not defined.
test/controllers.js: line 1238, col 9, 'it' is not defined.
test/controllers.js: line 1246, col 9, 'it' is not defined.
test/controllers.js: line 1254, col 9, 'it' is not defined.
test/controllers.js: line 1265, col 9, 'it' is not defined.
test/controllers.js: line 1273, col 9, 'it' is not defined.
test/controllers.js: line 1281, col 9, 'it' is not defined.
test/controllers.js: line 1293, col 9, 'it' is not defined.
test/controllers.js: line 1306, col 9, 'it' is not defined.
test/controllers.js: line 1314, col 9, 'it' is not defined.
test/controllers.js: line 1319, col 9, 'it' is not defined.
test/controllers.js: line 1333, col 9, 'it' is not defined.
test/controllers.js: line 1350, col 9, 'it' is not defined.
test/controllers.js: line 1356, col 9, 'it' is not defined.
test/controllers.js: line 1362, col 9, 'it' is not defined.
test/controllers.js: line 1376, col 9, 'it' is not defined.
test/controllers.js: line 1381, col 9, 'it' is not defined.
test/controllers.js: line 1388, col 9, 'it' is not defined.
test/controllers.js: line 1397, col 9, 'it' is not defined.
test/controllers.js: line 1406, col 9, 'it' is not defined.
test/controllers.js: line 1421, col 9, 'it' is not defined.
test/controllers.js: line 1427, col 9, 'it' is not defined.
test/controllers.js: line 1433, col 9, 'it' is not defined.
test/controllers.js: line 1439, col 9, 'it' is not defined.
test/controllers.js: line 1445, col 9, 'it' is not defined.
test/controllers.js: line 1460, col 9, 'it' is not defined.
test/controllers.js: line 1475, col 9, 'it' is not defined.
test/controllers.js: line 1491, col 9, 'it' is not defined.
test/controllers.js: line 1508, col 9, 'it' is not defined.
test/controllers.js: line 1529, col 9, 'it' is not defined.
test/controllers.js: line 1534, col 9, 'it' is not defined.
test/controllers.js: line 1539, col 9, 'it' is not defined.
test/controllers.js: line 1544, col 9, 'it' is not defined.
test/controllers.js: line 1551, col 9, 'it' is not defined.
test/controllers.js: line 1558, col 9, 'it' is not defined.
test/controllers.js: line 1564, col 9, 'it' is not defined.
test/controllers.js: line 1570, col 9, 'it' is not defined.
test/controllers.js: line 1576, col 9, 'it' is not defined.
test/controllers.js: line 1589, col 9, 'it' is not defined.
test/controllers.js: line 1603, col 9, 'it' is not defined.
test/controllers.js: line 1617, col 9, 'it' is not defined.
test/controllers.js: line 1627, col 9, 'it' is not defined.
test/controllers.js: line 1640, col 9, 'it' is not defined.
test/controllers.js: line 1648, col 9, 'it' is not defined.
test/controllers.js: line 1655, col 9, 'it' is not defined.
test/controllers.js: line 1670, col 9, 'it' is not defined.
test/controllers.js: line 1675, col 9, 'it' is not defined.
test/controllers.js: line 1680, col 9, 'it' is not defined.
test/controllers.js: line 1686, col 9, 'it' is not defined.
test/controllers.js: line 1695, col 9, 'it' is not defined.
test/controllers.js: line 1700, col 9, 'it' is not defined.
test/controllers.js: line 1717, col 9, 'it' is not defined.
test/controllers.js: line 1725, col 9, 'it' is not defined.
test/controllers.js: line 1745, col 9, 'it' is not defined.
test/controllers.js: line 1769, col 9, 'it' is not defined.
test/controllers.js: line 1800, col 9, 'it' is not defined.
test/controllers.js: line 1842, col 13, 'it' is not defined.
test/controllers.js: line 1848, col 13, 'it' is not defined.
test/controllers.js: line 1854, col 13, 'it' is not defined.
test/controllers.js: line 1860, col 13, 'it' is not defined.
test/controllers.js: line 216, col 9, 'after' is not defined.
test/controllers.js: line 288, col 13, 'after' is not defined.
test/controllers.js: line 903, col 9, 'after' is not defined.
test/controllers.js: line 1416, col 9, 'after' is not defined.
test/controllers.js: line 1868, col 5, 'after' is not defined.
test/controllers.js: line 624, col 13, 'beforeEach' is not defined.
test/controllers.js: line 1112, col 23, 'Promise' is not defined.
test/controllers.js: line 1841, col 13, 'process' is not defined.

test/coverPhoto.js: line 1, col 1, Use the function form of "use strict".
test/coverPhoto.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/coverPhoto.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/coverPhoto.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/coverPhoto.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/coverPhoto.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/coverPhoto.js: line 10, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/coverPhoto.js: line 11, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/coverPhoto.js: line 13, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/coverPhoto.js: line 14, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/coverPhoto.js: line 18, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/coverPhoto.js: line 20, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/coverPhoto.js: line 21, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/coverPhoto.js: line 3, col 16, 'require' is not defined.
test/coverPhoto.js: line 4, col 15, 'require' is not defined.
test/coverPhoto.js: line 6, col 12, 'require' is not defined.
test/coverPhoto.js: line 7, col 20, 'require' is not defined.
test/coverPhoto.js: line 8, col 14, 'require' is not defined.
test/coverPhoto.js: line 10, col 1, 'describe' is not defined.
test/coverPhoto.js: line 11, col 5, 'it' is not defined.
test/coverPhoto.js: line 18, col 5, 'it' is not defined.

test/database.js: line 1, col 1, Use the function form of "use strict".
test/database.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/database.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/database.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/database.js: line 9, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/database.js: line 10, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/database.js: line 11, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/database.js: line 16, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/database.js: line 17, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/database.js: line 18, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/database.js: line 25, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/database.js: line 26, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/database.js: line 34, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/database.js: line 35, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/database.js: line 39, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/database.js: line 40, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/database.js: line 42, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/database.js: line 47, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/database.js: line 52, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/database.js: line 4, col 16, 'require' is not defined.
test/database.js: line 5, col 15, 'require' is not defined.
test/database.js: line 6, col 12, 'require' is not defined.
test/database.js: line 12, col 13, 'require' is not defined.
test/database.js: line 61, col 5, 'require' is not defined.
test/database.js: line 62, col 5, 'require' is not defined.
test/database.js: line 63, col 5, 'require' is not defined.
test/database.js: line 64, col 5, 'require' is not defined.
test/database.js: line 65, col 5, 'require' is not defined.
test/database.js: line 9, col 1, 'describe' is not defined.
test/database.js: line 16, col 5, 'describe' is not defined.
test/database.js: line 34, col 5, 'describe' is not defined.
test/database.js: line 10, col 5, 'it' is not defined.
test/database.js: line 17, col 9, 'it' is not defined.
test/database.js: line 25, col 9, 'it' is not defined.
test/database.js: line 35, col 9, 'it' is not defined.
test/database.js: line 39, col 9, 'it' is not defined.

test/defer-logger.js: line 1, col 1, Use the function form of "use strict".
test/defer-logger.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/defer-logger.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/defer-logger.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/defer-logger.js: line 8, col 1, 'class' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/defer-logger.js: line 15, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/defer-logger.js: line 24, col 9, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/defer-logger.js: line 31, col 8, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/defer-logger.js: line 34, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/defer-logger.js: line 35, col 21, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/defer-logger.js: line 3, col 17, 'require' is not defined.
test/defer-logger.js: line 4, col 19, 'require' is not defined.
test/defer-logger.js: line 15, col 9, 'setImmediate' is not defined.
test/defer-logger.js: line 24, col 1, 'before' is not defined.
test/defer-logger.js: line 31, col 1, 'after' is not defined.
test/defer-logger.js: line 32, col 5, 'console' is not defined.
test/defer-logger.js: line 35, col 9, 'console' is not defined.

test/emailer.js: line 1, col 1, Use the function form of "use strict".
test/emailer.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 3, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 15, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 16, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 17, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 19, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 20, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 21, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 22, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 26, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 27, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 42, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 50, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 51, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 52, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 55, col 40, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 62, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 65, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 73, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 74, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 77, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 82, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 86, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 87, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 98, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 99, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 100, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 125, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 129, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 132, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 139, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 147, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 148, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 150, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/emailer.js: line 150, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 155, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/emailer.js: line 155, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 156, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 156, col 28, 'async functions' is only available in ES8 (use 'esversion: 8').
test/emailer.js: line 156, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 161, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 170, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/emailer.js: line 170, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 171, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 171, col 28, 'async functions' is only available in ES8 (use 'esversion: 8').
test/emailer.js: line 171, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 176, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 183, col 83, 'async functions' is only available in ES8 (use 'esversion: 8').
test/emailer.js: line 183, col 90, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 184, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 184, col 28, 'async functions' is only available in ES8 (use 'esversion: 8').
test/emailer.js: line 184, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/emailer.js: line 189, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/emailer.js: line 3, col 24, 'require' is not defined.
test/emailer.js: line 4, col 16, 'require' is not defined.
test/emailer.js: line 5, col 12, 'require' is not defined.
test/emailer.js: line 6, col 14, 'require' is not defined.
test/emailer.js: line 8, col 12, 'require' is not defined.
test/emailer.js: line 9, col 17, 'require' is not defined.
test/emailer.js: line 10, col 17, 'require' is not defined.
test/emailer.js: line 11, col 14, 'require' is not defined.
test/emailer.js: line 12, col 14, 'require' is not defined.
test/emailer.js: line 13, col 14, 'require' is not defined.
test/emailer.js: line 15, col 1, 'describe' is not defined.
test/emailer.js: line 147, col 5, 'describe' is not defined.
test/emailer.js: line 26, col 5, 'before' is not defined.
test/emailer.js: line 150, col 9, 'before' is not defined.
test/emailer.js: line 50, col 5, 'it' is not defined.
test/emailer.js: line 73, col 5, 'it' is not defined.
test/emailer.js: line 98, col 5, 'it' is not defined.
test/emailer.js: line 155, col 9, 'it' is not defined.
test/emailer.js: line 170, col 9, 'it' is not defined.
test/emailer.js: line 183, col 9, 'it' is not defined.
test/emailer.js: line 86, col 17, 'setTimeout' is not defined.
test/emailer.js: line 129, col 13, 'setTimeout' is not defined.
test/emailer.js: line 139, col 5, 'after' is not defined.
test/emailer.js: line 140, col 33, '__dirname' is not defined.

test/feeds.js: line 1, col 1, Use the function form of "use strict".
test/feeds.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 15, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 16, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 17, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 18, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 19, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/feeds.js: line 19, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 21, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 28, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 37, col 22, 'async functions' is only available in ES8 (use 'esversion: 8').
test/feeds.js: line 37, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 38, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 39, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 40, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 41, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 42, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 43, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 44, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 45, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 46, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 47, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 48, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 49, col 13, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 51, col 14, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 51, col 24, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 53, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 53, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 59, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/feeds.js: line 59, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 60, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 60, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 60, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 64, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/feeds.js: line 64, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 65, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 65, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 65, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 69, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/feeds.js: line 69, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 71, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 71, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 71, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 78, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/feeds.js: line 78, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 79, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 79, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 79, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 83, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/feeds.js: line 83, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 85, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 85, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 85, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 92, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 93, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 94, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 95, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/feeds.js: line 95, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 96, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 99, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/feeds.js: line 99, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 100, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 100, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 100, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 106, col 66, 'async functions' is only available in ES8 (use 'esversion: 8').
test/feeds.js: line 106, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 108, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 108, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 109, col 29, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 110, col 29, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 119, col 57, 'async functions' is only available in ES8 (use 'esversion: 8').
test/feeds.js: line 119, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 120, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 120, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 120, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 125, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/feeds.js: line 125, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 126, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 126, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 126, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 126, col 100, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 128, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 128, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 128, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 133, col 80, 'async functions' is only available in ES8 (use 'esversion: 8').
test/feeds.js: line 133, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 135, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 135, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/feeds.js: line 135, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/feeds.js: line 3, col 16, 'require' is not defined.
test/feeds.js: line 4, col 15, 'require' is not defined.
test/feeds.js: line 6, col 12, 'require' is not defined.
test/feeds.js: line 7, col 17, 'require' is not defined.
test/feeds.js: line 8, col 16, 'require' is not defined.
test/feeds.js: line 9, col 20, 'require' is not defined.
test/feeds.js: line 10, col 14, 'require' is not defined.
test/feeds.js: line 11, col 14, 'require' is not defined.
test/feeds.js: line 12, col 20, 'require' is not defined.
test/feeds.js: line 13, col 17, 'require' is not defined.
test/feeds.js: line 15, col 1, 'describe' is not defined.
test/feeds.js: line 92, col 5, 'describe' is not defined.
test/feeds.js: line 19, col 5, 'before' is not defined.
test/feeds.js: line 95, col 9, 'before' is not defined.
test/feeds.js: line 37, col 5, 'it' is not defined.
test/feeds.js: line 59, col 5, 'it' is not defined.
test/feeds.js: line 64, col 5, 'it' is not defined.
test/feeds.js: line 69, col 5, 'it' is not defined.
test/feeds.js: line 78, col 5, 'it' is not defined.
test/feeds.js: line 83, col 5, 'it' is not defined.
test/feeds.js: line 99, col 9, 'it' is not defined.
test/feeds.js: line 106, col 9, 'it' is not defined.
test/feeds.js: line 119, col 9, 'it' is not defined.
test/feeds.js: line 125, col 9, 'it' is not defined.
test/feeds.js: line 133, col 9, 'it' is not defined.
test/feeds.js: line 108, col 42, 'Promise' is not defined.

test/file.js: line 1, col 1, Use the function form of "use strict".
test/file.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 11, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 12, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 12, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/file.js: line 13, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 14, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 15, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 17, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 18, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 23, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 24, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 25, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 30, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 31, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 38, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 41, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 46, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 47, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 54, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 55, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/file.js: line 55, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 63, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 67, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 76, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 77, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 78, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 83, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 84, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/file.js: line 91, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 92, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/file.js: line 92, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 100, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 101, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/file.js: line 101, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 109, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 110, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 117, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/file.js: line 3, col 16, 'require' is not defined.
test/file.js: line 4, col 12, 'require' is not defined.
test/file.js: line 5, col 14, 'require' is not defined.
test/file.js: line 6, col 15, 'require' is not defined.
test/file.js: line 8, col 15, 'require' is not defined.
test/file.js: line 9, col 14, 'require' is not defined.
test/file.js: line 11, col 1, 'describe' is not defined.
test/file.js: line 23, col 5, 'describe' is not defined.
test/file.js: line 76, col 5, 'describe' is not defined.
test/file.js: line 15, col 32, '__dirname' is not defined.
test/file.js: line 110, col 19, '__dirname' is not defined.
test/file.js: line 17, col 5, 'afterEach' is not defined.
test/file.js: line 24, col 9, 'it' is not defined.
test/file.js: line 38, col 9, 'it' is not defined.
test/file.js: line 54, col 9, 'it' is not defined.
test/file.js: line 63, col 9, 'it' is not defined.
test/file.js: line 77, col 9, 'it' is not defined.
test/file.js: line 91, col 9, 'it' is not defined.
test/file.js: line 100, col 9, 'it' is not defined.
test/file.js: line 109, col 5, 'it' is not defined.
test/file.js: line 117, col 5, 'it' is not defined.

test/flags.js: line 1, col 1, Use the function form of "use strict".
test/flags.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 18, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 19, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 20, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 21, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 22, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 24, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 25, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 26, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 27, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 28, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 29, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 30, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 31, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 32, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 32, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 33, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 33, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 33, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 65, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 70, col 12, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 74, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 75, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 76, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 78, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 86, col 22, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 86, col 32, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 87, col 46, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 95, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 96, col 34, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 96, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 103, col 90, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 104, col 34, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 104, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 112, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 113, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 114, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 116, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 116, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 118, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 124, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 127, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 127, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 131, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 131, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 134, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 134, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 138, col 80, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 138, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 142, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 142, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 147, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 148, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 149, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 151, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 151, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 153, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 159, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 162, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 162, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 166, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 166, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 169, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 172, col 34, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 172, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 175, col 107, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 175, col 114, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 177, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 178, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 178, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 185, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 186, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 187, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 194, col 105, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 195, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 203, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 204, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 205, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 212, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 213, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 221, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 222, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 223, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 225, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 233, col 22, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 233, col 32, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 234, col 46, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 242, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 242, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 244, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 244, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 244, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 245, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 257, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 257, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 259, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 259, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 259, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 260, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 273, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 274, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 278, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 286, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 295, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 296, col 93, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 302, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 313, col 90, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 319, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 330, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 336, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 347, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 353, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 364, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 370, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 381, col 94, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 388, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 399, col 97, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 406, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 418, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 419, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 419, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 421, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 430, col 83, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 430, col 90, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 431, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 435, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 440, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 445, col 89, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 445, col 96, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 446, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 451, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 456, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 461, col 94, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 461, col 101, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 462, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 467, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 472, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 479, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 480, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 484, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 486, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 499, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 500, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 505, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 521, col 84, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 521, col 91, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 525, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 535, col 88, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 535, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 541, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 553, col 94, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 553, col 101, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 554, col 31, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 559, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 568, col 32, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 571, col 71, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 571, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 576, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 580, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 581, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 582, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 583, col 24, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 583, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 594, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 594, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 595, col 17, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 596, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 603, col 45, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 606, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 606, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 607, col 17, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 608, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 615, col 45, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 618, col 89, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 618, col 96, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 621, col 17, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 622, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 629, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 634, col 89, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 634, col 96, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 637, col 17, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 638, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 645, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 652, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 653, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 654, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 656, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 662, col 22, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 662, col 32, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 671, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 672, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 674, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 680, col 22, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 680, col 32, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 689, col 99, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 690, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 698, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 699, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 700, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 709, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 717, col 102, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 718, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 725, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 733, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 733, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 734, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 735, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 736, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 738, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 751, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 752, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 759, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 760, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 761, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 764, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 775, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 776, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 791, col 75, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 791, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 793, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 798, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 799, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 804, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 805, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 807, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 812, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 813, col 22, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 813, col 32, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 822, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 823, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 825, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 832, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 833, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 834, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 835, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 841, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 844, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 847, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 860, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 861, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 862, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 870, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 871, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 872, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 873, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 874, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 875, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 875, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 876, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 880, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 890, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 891, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 891, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 892, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 893, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 904, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 908, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 908, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 909, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 915, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 915, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 915, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 916, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 927, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 931, col 70, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 931, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 932, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 936, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 942, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 943, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 944, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 946, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 946, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 946, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 972, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 973, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 973, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 974, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 974, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 974, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 975, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 984, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 984, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 991, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 992, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 992, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 993, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 993, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 993, col 56, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 994, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1004, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1005, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 1005, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1006, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1006, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1006, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1007, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1016, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1016, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1029, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1030, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 1030, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1031, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1031, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1031, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1032, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1037, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1037, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1044, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1045, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1046, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1047, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1048, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1050, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1051, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1053, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1055, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 1055, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1057, col 18, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1062, col 24, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 1062, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1068, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1068, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1069, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1075, col 18, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1076, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1077, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1084, col 25, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1084, col 28, 'object spread property' is only available in ES9 (use 'esversion: 9').
test/flags.js: line 1086, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1089, col 25, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1089, col 28, 'object spread property' is only available in ES9 (use 'esversion: 9').
test/flags.js: line 1091, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1097, col 25, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1097, col 28, 'object spread property' is only available in ES9 (use 'esversion: 9').
test/flags.js: line 1099, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1106, col 25, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1106, col 28, 'object spread property' is only available in ES9 (use 'esversion: 9').
test/flags.js: line 1108, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1111, col 25, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1111, col 28, 'object spread property' is only available in ES9 (use 'esversion: 9').
test/flags.js: line 1113, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1118, col 82, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 1118, col 89, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1119, col 22, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1119, col 31, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1120, col 30, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1120, col 33, 'object spread property' is only available in ES9 (use 'esversion: 9').
test/flags.js: line 1125, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1125, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1126, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1126, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1127, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1131, col 89, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 1131, col 96, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1132, col 22, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1132, col 33, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1134, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1134, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1135, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1135, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1136, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1140, col 81, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 1140, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1143, col 22, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1143, col 33, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1145, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1145, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1146, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1146, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1147, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1151, col 84, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 1151, col 91, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1154, col 22, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1154, col 33, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1156, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1156, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1157, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1157, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1158, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1162, col 129, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 1162, col 136, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1165, col 22, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1165, col 33, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1167, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1167, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1168, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1168, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1169, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1173, col 140, 'async functions' is only available in ES8 (use 'esversion: 8').
test/flags.js: line 1173, col 147, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 1175, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1175, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1180, col 22, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1180, col 33, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1182, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1182, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1183, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1183, col 21, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/flags.js: line 1184, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/flags.js: line 3, col 16, 'require' is not defined.
test/flags.js: line 4, col 15, 'require' is not defined.
test/flags.js: line 5, col 14, 'require' is not defined.
test/flags.js: line 9, col 12, 'require' is not defined.
test/flags.js: line 10, col 17, 'require' is not defined.
test/flags.js: line 11, col 17, 'require' is not defined.
test/flags.js: line 12, col 15, 'require' is not defined.
test/flags.js: line 13, col 20, 'require' is not defined.
test/flags.js: line 14, col 16, 'require' is not defined.
test/flags.js: line 15, col 15, 'require' is not defined.
test/flags.js: line 16, col 14, 'require' is not defined.
test/flags.js: line 17, col 16, 'require' is not defined.
test/flags.js: line 18, col 14, 'require' is not defined.
test/flags.js: line 19, col 20, 'require' is not defined.
test/flags.js: line 20, col 17, 'require' is not defined.
test/flags.js: line 21, col 15, 'require' is not defined.
test/flags.js: line 22, col 13, 'require' is not defined.
test/flags.js: line 734, col 30, 'require' is not defined.
test/flags.js: line 7, col 30, 'setTimeout' is not defined.
test/flags.js: line 770, col 21, 'setTimeout' is not defined.
test/flags.js: line 24, col 1, 'describe' is not defined.
test/flags.js: line 74, col 5, 'describe' is not defined.
test/flags.js: line 112, col 5, 'describe' is not defined.
test/flags.js: line 147, col 5, 'describe' is not defined.
test/flags.js: line 185, col 5, 'describe' is not defined.
test/flags.js: line 203, col 5, 'describe' is not defined.
test/flags.js: line 221, col 5, 'describe' is not defined.
test/flags.js: line 273, col 5, 'describe' is not defined.
test/flags.js: line 295, col 9, 'describe' is not defined.
test/flags.js: line 418, col 9, 'describe' is not defined.
test/flags.js: line 479, col 5, 'describe' is not defined.
test/flags.js: line 580, col 9, 'describe' is not defined.
test/flags.js: line 652, col 5, 'describe' is not defined.
test/flags.js: line 698, col 5, 'describe' is not defined.
test/flags.js: line 759, col 5, 'describe' is not defined.
test/flags.js: line 798, col 5, 'describe' is not defined.
test/flags.js: line 832, col 5, 'describe' is not defined.
test/flags.js: line 860, col 5, 'describe' is not defined.
test/flags.js: line 870, col 5, 'describe' is not defined.
test/flags.js: line 890, col 9, 'describe' is not defined.
test/flags.js: line 972, col 9, 'describe' is not defined.
test/flags.js: line 991, col 9, 'describe' is not defined.
test/flags.js: line 1004, col 9, 'describe' is not defined.
test/flags.js: line 1029, col 9, 'describe' is not defined.
test/flags.js: line 1044, col 9, 'describe' is not defined.
test/flags.js: line 32, col 5, 'before' is not defined.
test/flags.js: line 116, col 9, 'before' is not defined.
test/flags.js: line 151, col 9, 'before' is not defined.
test/flags.js: line 419, col 13, 'before' is not defined.
test/flags.js: line 799, col 9, 'before' is not defined.
test/flags.js: line 834, col 9, 'before' is not defined.
test/flags.js: line 875, col 9, 'before' is not defined.
test/flags.js: line 1055, col 13, 'before' is not defined.
test/flags.js: line 70, col 5, 'after' is not defined.
test/flags.js: line 127, col 9, 'after' is not defined.
test/flags.js: line 162, col 9, 'after' is not defined.
test/flags.js: line 75, col 9, 'it' is not defined.
test/flags.js: line 95, col 9, 'it' is not defined.
test/flags.js: line 103, col 9, 'it' is not defined.
test/flags.js: line 131, col 9, 'it' is not defined.
test/flags.js: line 138, col 9, 'it' is not defined.
test/flags.js: line 166, col 9, 'it' is not defined.
test/flags.js: line 175, col 9, 'it' is not defined.
test/flags.js: line 186, col 9, 'it' is not defined.
test/flags.js: line 194, col 9, 'it' is not defined.
test/flags.js: line 204, col 9, 'it' is not defined.
test/flags.js: line 212, col 9, 'it' is not defined.
test/flags.js: line 222, col 9, 'it' is not defined.
test/flags.js: line 242, col 9, 'it' is not defined.
test/flags.js: line 257, col 9, 'it' is not defined.
test/flags.js: line 274, col 9, 'it' is not defined.
test/flags.js: line 296, col 13, 'it' is not defined.
test/flags.js: line 313, col 13, 'it' is not defined.
test/flags.js: line 330, col 13, 'it' is not defined.
test/flags.js: line 347, col 13, 'it' is not defined.
test/flags.js: line 364, col 13, 'it' is not defined.
test/flags.js: line 381, col 13, 'it' is not defined.
test/flags.js: line 399, col 13, 'it' is not defined.
test/flags.js: line 430, col 13, 'it' is not defined.
test/flags.js: line 445, col 13, 'it' is not defined.
test/flags.js: line 461, col 13, 'it' is not defined.
test/flags.js: line 480, col 9, 'it' is not defined.
test/flags.js: line 499, col 9, 'it' is not defined.
test/flags.js: line 521, col 9, 'it' is not defined.
test/flags.js: line 535, col 9, 'it' is not defined.
test/flags.js: line 553, col 9, 'it' is not defined.
test/flags.js: line 571, col 9, 'it' is not defined.
test/flags.js: line 594, col 13, 'it' is not defined.
test/flags.js: line 606, col 13, 'it' is not defined.
test/flags.js: line 618, col 13, 'it' is not defined.
test/flags.js: line 634, col 13, 'it' is not defined.
test/flags.js: line 653, col 9, 'it' is not defined.
test/flags.js: line 671, col 9, 'it' is not defined.
test/flags.js: line 689, col 9, 'it' is not defined.
test/flags.js: line 699, col 9, 'it' is not defined.
test/flags.js: line 717, col 9, 'it' is not defined.
test/flags.js: line 733, col 9, 'it' is not defined.
test/flags.js: line 751, col 9, 'it' is not defined.
test/flags.js: line 760, col 9, 'it' is not defined.
test/flags.js: line 775, col 9, 'it' is not defined.
test/flags.js: line 791, col 9, 'it' is not defined.
test/flags.js: line 804, col 9, 'it' is not defined.
test/flags.js: line 822, col 9, 'it' is not defined.
test/flags.js: line 841, col 9, 'it' is not defined.
test/flags.js: line 861, col 9, 'it' is not defined.
test/flags.js: line 891, col 13, 'it' is not defined.
test/flags.js: line 908, col 13, 'it' is not defined.
test/flags.js: line 931, col 13, 'it' is not defined.
test/flags.js: line 973, col 13, 'it' is not defined.
test/flags.js: line 992, col 13, 'it' is not defined.
test/flags.js: line 1005, col 13, 'it' is not defined.
test/flags.js: line 1030, col 13, 'it' is not defined.
test/flags.js: line 1118, col 13, 'it' is not defined.
test/flags.js: line 1131, col 13, 'it' is not defined.
test/flags.js: line 1140, col 13, 'it' is not defined.
test/flags.js: line 1151, col 13, 'it' is not defined.
test/flags.js: line 1162, col 13, 'it' is not defined.
test/flags.js: line 1173, col 13, 'it' is not defined.
test/flags.js: line 583, col 13, 'beforeEach' is not defined.
test/flags.js: line 1062, col 13, 'beforeEach' is not defined.
test/flags.js: line 1058, col 17, 'console' is not defined.
test/flags.js: line 1082, col 32, 'Set' is not defined.

test/groups.js: line 1, col 1, Use the function form of "use strict".
test/groups.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 20, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 21, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 22, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 23, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 23, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 30, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 86, col 5, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 90, col 11, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 90, col 18, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 94, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 95, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 96, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 104, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 105, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 109, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 110, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 123, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 124, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 132, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 133, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 135, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 136, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 143, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 144, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 151, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 152, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 160, col 94, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 161, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 169, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 170, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 178, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 178, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 179, col 13, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 180, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 185, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 185, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 189, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 189, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 190, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 190, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 194, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 194, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 199, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 204, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 205, col 68, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 205, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 206, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 210, col 73, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 210, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 211, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 215, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 215, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 216, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 220, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 220, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 221, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 225, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 225, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 226, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 230, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 230, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 231, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 235, col 80, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 235, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 236, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 240, col 81, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 240, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 241, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 245, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 245, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 246, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 250, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 250, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 251, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 256, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 257, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 258, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 265, col 90, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 266, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 274, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 275, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 276, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 283, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 284, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 291, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 292, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 301, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 302, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 306, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 312, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 316, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 318, col 99, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 326, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 330, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 332, col 99, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 340, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 343, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 345, col 101, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 353, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 354, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 361, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 362, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 368, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 369, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 375, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 376, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 382, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 382, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 391, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 391, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 393, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 397, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 398, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 404, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 405, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 407, col 90, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 409, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 419, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 420, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 420, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 422, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 424, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 429, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 430, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 439, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 442, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 445, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 453, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 453, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 458, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 462, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 466, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 469, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 475, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 475, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 484, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 484, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 486, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 494, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 494, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 496, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 504, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 504, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 506, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 514, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 514, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 516, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 524, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 524, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 525, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 526, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 527, col 18, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 527, col 29, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 538, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 543, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 547, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 555, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 556, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 560, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 561, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 564, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 572, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 573, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 580, col 57, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 580, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 581, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 582, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 583, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 584, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 587, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 597, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 598, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 602, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 603, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 606, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 615, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 615, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 616, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 619, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 621, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 629, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 630, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 632, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 634, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 642, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 643, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 645, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 647, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 655, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 655, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 656, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 657, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 659, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 663, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 664, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 665, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 667, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 669, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 672, col 104, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 683, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 684, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 685, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 687, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 689, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 691, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 693, col 59, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 702, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 702, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 703, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 704, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 706, col 13, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 707, col 17, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 709, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 711, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 718, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 719, col 18, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 719, col 26, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 726, col 89, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 726, col 96, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 727, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 728, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 736, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 736, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 742, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 743, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 744, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 747, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 757, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 758, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 758, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 760, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 761, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 766, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 767, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 767, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 769, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 774, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 775, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 776, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 782, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 783, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 789, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 789, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 798, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 798, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 807, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 807, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 816, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 816, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 819, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 823, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 823, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 832, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 832, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 841, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 841, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 843, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 847, col 86, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 847, col 93, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 857, col 78, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 857, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 859, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 869, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 869, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 871, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 875, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 875, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 877, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 881, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 881, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 883, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 887, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 887, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 894, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 894, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 897, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 901, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 901, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 902, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 903, col 86, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 904, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 908, col 37, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 908, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 909, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 910, col 86, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 911, col 87, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 913, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 917, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 917, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 918, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 926, col 59, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 930, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 930, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 937, col 36, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 937, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 938, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 939, col 86, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 940, col 44, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 940, col 77, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 941, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 945, col 36, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 945, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 946, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 947, col 86, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 948, col 44, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 948, col 77, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 949, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 953, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 953, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 955, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 959, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 959, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 961, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 965, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 965, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 972, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 972, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 974, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 978, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 978, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 985, col 73, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 985, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 992, col 70, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 992, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1001, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1001, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1002, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1004, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1015, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1024, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1024, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1033, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1033, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1034, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1047, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1047, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1049, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1053, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1053, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1054, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1058, col 18, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1058, col 29, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1069, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1069, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1078, col 74, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1078, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1079, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1079, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1083, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1083, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1084, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1084, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1088, col 81, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1088, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1089, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1089, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1094, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1094, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1095, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1095, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1100, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1101, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1102, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1102, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1103, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1112, col 76, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1112, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1113, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1122, col 37, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1122, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1123, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1131, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1131, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1132, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1141, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1141, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1143, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1147, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1147, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1151, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1151, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1152, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1161, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1161, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1162, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1171, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1171, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1178, col 71, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1178, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1181, col 55, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1185, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1185, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1187, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1191, col 77, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1191, col 84, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1192, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1196, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1200, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1200, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1201, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1210, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1210, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1211, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1222, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1232, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1233, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1234, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1235, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1236, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1237, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1237, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1244, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1245, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1247, col 109, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1254, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1255, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1262, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1264, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1277, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1278, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1282, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1284, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1292, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1293, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1300, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1306, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1307, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1311, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1317, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1318, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1322, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1324, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1332, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1333, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1339, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1340, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1346, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1347, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1353, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/groups.js: line 1353, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1354, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1355, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1358, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 1359, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1360, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1364, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/groups.js: line 1369, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/groups.js: line 3, col 16, 'require' is not defined.
test/groups.js: line 4, col 12, 'require' is not defined.
test/groups.js: line 5, col 14, 'require' is not defined.
test/groups.js: line 6, col 15, 'require' is not defined.
test/groups.js: line 8, col 12, 'require' is not defined.
test/groups.js: line 9, col 17, 'require' is not defined.
test/groups.js: line 10, col 16, 'require' is not defined.
test/groups.js: line 11, col 14, 'require' is not defined.
test/groups.js: line 12, col 17, 'require' is not defined.
test/groups.js: line 13, col 15, 'require' is not defined.
test/groups.js: line 14, col 22, 'require' is not defined.
test/groups.js: line 15, col 19, 'require' is not defined.
test/groups.js: line 16, col 14, 'require' is not defined.
test/groups.js: line 17, col 20, 'require' is not defined.
test/groups.js: line 30, col 25, 'require' is not defined.
test/groups.js: line 133, col 30, 'require' is not defined.
test/groups.js: line 581, col 32, 'require' is not defined.
test/groups.js: line 1101, col 27, 'require' is not defined.
test/groups.js: line 1233, col 30, 'require' is not defined.
test/groups.js: line 20, col 1, 'describe' is not defined.
test/groups.js: line 94, col 5, 'describe' is not defined.
test/groups.js: line 104, col 5, 'describe' is not defined.
test/groups.js: line 132, col 5, 'describe' is not defined.
test/groups.js: line 204, col 5, 'describe' is not defined.
test/groups.js: line 256, col 5, 'describe' is not defined.
test/groups.js: line 274, col 5, 'describe' is not defined.
test/groups.js: line 301, col 5, 'describe' is not defined.
test/groups.js: line 419, col 5, 'describe' is not defined.
test/groups.js: line 429, col 5, 'describe' is not defined.
test/groups.js: line 555, col 5, 'describe' is not defined.
test/groups.js: line 597, col 5, 'describe' is not defined.
test/groups.js: line 742, col 5, 'describe' is not defined.
test/groups.js: line 757, col 5, 'describe' is not defined.
test/groups.js: line 766, col 5, 'describe' is not defined.
test/groups.js: line 774, col 5, 'describe' is not defined.
test/groups.js: line 1100, col 5, 'describe' is not defined.
test/groups.js: line 1232, col 5, 'describe' is not defined.
test/groups.js: line 1369, col 5, 'describe' is not defined.
test/groups.js: line 23, col 5, 'before' is not defined.
test/groups.js: line 105, col 9, 'before' is not defined.
test/groups.js: line 430, col 9, 'before' is not defined.
test/groups.js: line 556, col 9, 'before' is not defined.
test/groups.js: line 598, col 9, 'before' is not defined.
test/groups.js: line 1237, col 9, 'before' is not defined.
test/groups.js: line 90, col 5, 'after' is not defined.
test/groups.js: line 95, col 9, 'it' is not defined.
test/groups.js: line 109, col 9, 'it' is not defined.
test/groups.js: line 123, col 9, 'it' is not defined.
test/groups.js: line 135, col 9, 'it' is not defined.
test/groups.js: line 143, col 9, 'it' is not defined.
test/groups.js: line 151, col 9, 'it' is not defined.
test/groups.js: line 160, col 9, 'it' is not defined.
test/groups.js: line 169, col 9, 'it' is not defined.
test/groups.js: line 178, col 9, 'it' is not defined.
test/groups.js: line 189, col 9, 'it' is not defined.
test/groups.js: line 194, col 9, 'it' is not defined.
test/groups.js: line 205, col 9, 'it' is not defined.
test/groups.js: line 210, col 9, 'it' is not defined.
test/groups.js: line 215, col 9, 'it' is not defined.
test/groups.js: line 220, col 9, 'it' is not defined.
test/groups.js: line 225, col 9, 'it' is not defined.
test/groups.js: line 230, col 9, 'it' is not defined.
test/groups.js: line 235, col 9, 'it' is not defined.
test/groups.js: line 240, col 9, 'it' is not defined.
test/groups.js: line 245, col 9, 'it' is not defined.
test/groups.js: line 250, col 9, 'it' is not defined.
test/groups.js: line 257, col 9, 'it' is not defined.
test/groups.js: line 265, col 9, 'it' is not defined.
test/groups.js: line 275, col 9, 'it' is not defined.
test/groups.js: line 283, col 9, 'it' is not defined.
test/groups.js: line 291, col 9, 'it' is not defined.
test/groups.js: line 302, col 9, 'it' is not defined.
test/groups.js: line 312, col 9, 'it' is not defined.
test/groups.js: line 326, col 9, 'it' is not defined.
test/groups.js: line 340, col 9, 'it' is not defined.
test/groups.js: line 353, col 9, 'it' is not defined.
test/groups.js: line 361, col 9, 'it' is not defined.
test/groups.js: line 368, col 9, 'it' is not defined.
test/groups.js: line 375, col 9, 'it' is not defined.
test/groups.js: line 382, col 9, 'it' is not defined.
test/groups.js: line 391, col 9, 'it' is not defined.
test/groups.js: line 397, col 9, 'it' is not defined.
test/groups.js: line 404, col 9, 'it' is not defined.
test/groups.js: line 420, col 9, 'it' is not defined.
test/groups.js: line 439, col 9, 'it' is not defined.
test/groups.js: line 453, col 9, 'it' is not defined.
test/groups.js: line 466, col 9, 'it' is not defined.
test/groups.js: line 475, col 9, 'it' is not defined.
test/groups.js: line 484, col 9, 'it' is not defined.
test/groups.js: line 494, col 9, 'it' is not defined.
test/groups.js: line 504, col 9, 'it' is not defined.
test/groups.js: line 514, col 9, 'it' is not defined.
test/groups.js: line 524, col 9, 'it' is not defined.
test/groups.js: line 538, col 9, 'it' is not defined.
test/groups.js: line 560, col 9, 'it' is not defined.
test/groups.js: line 572, col 9, 'it' is not defined.
test/groups.js: line 580, col 9, 'it' is not defined.
test/groups.js: line 602, col 9, 'it' is not defined.
test/groups.js: line 615, col 9, 'it' is not defined.
test/groups.js: line 629, col 9, 'it' is not defined.
test/groups.js: line 642, col 9, 'it' is not defined.
test/groups.js: line 655, col 9, 'it' is not defined.
test/groups.js: line 663, col 9, 'it' is not defined.
test/groups.js: line 683, col 9, 'it' is not defined.
test/groups.js: line 702, col 9, 'it' is not defined.
test/groups.js: line 726, col 9, 'it' is not defined.
test/groups.js: line 736, col 9, 'it' is not defined.
test/groups.js: line 743, col 9, 'it' is not defined.
test/groups.js: line 758, col 9, 'it' is not defined.
test/groups.js: line 767, col 9, 'it' is not defined.
test/groups.js: line 775, col 9, 'it' is not defined.
test/groups.js: line 782, col 9, 'it' is not defined.
test/groups.js: line 789, col 9, 'it' is not defined.
test/groups.js: line 798, col 9, 'it' is not defined.
test/groups.js: line 807, col 9, 'it' is not defined.
test/groups.js: line 816, col 9, 'it' is not defined.
test/groups.js: line 823, col 9, 'it' is not defined.
test/groups.js: line 832, col 9, 'it' is not defined.
test/groups.js: line 841, col 9, 'it' is not defined.
test/groups.js: line 847, col 9, 'it' is not defined.
test/groups.js: line 857, col 9, 'it' is not defined.
test/groups.js: line 869, col 9, 'it' is not defined.
test/groups.js: line 875, col 9, 'it' is not defined.
test/groups.js: line 881, col 9, 'it' is not defined.
test/groups.js: line 887, col 9, 'it' is not defined.
test/groups.js: line 894, col 9, 'it' is not defined.
test/groups.js: line 901, col 9, 'it' is not defined.
test/groups.js: line 908, col 9, 'it' is not defined.
test/groups.js: line 917, col 9, 'it' is not defined.
test/groups.js: line 930, col 9, 'it' is not defined.
test/groups.js: line 937, col 9, 'it' is not defined.
test/groups.js: line 945, col 9, 'it' is not defined.
test/groups.js: line 953, col 9, 'it' is not defined.
test/groups.js: line 959, col 9, 'it' is not defined.
test/groups.js: line 965, col 9, 'it' is not defined.
test/groups.js: line 972, col 9, 'it' is not defined.
test/groups.js: line 978, col 9, 'it' is not defined.
test/groups.js: line 985, col 9, 'it' is not defined.
test/groups.js: line 992, col 9, 'it' is not defined.
test/groups.js: line 1001, col 9, 'it' is not defined.
test/groups.js: line 1024, col 9, 'it' is not defined.
test/groups.js: line 1033, col 9, 'it' is not defined.
test/groups.js: line 1047, col 9, 'it' is not defined.
test/groups.js: line 1053, col 9, 'it' is not defined.
test/groups.js: line 1069, col 9, 'it' is not defined.
test/groups.js: line 1078, col 9, 'it' is not defined.
test/groups.js: line 1083, col 9, 'it' is not defined.
test/groups.js: line 1088, col 9, 'it' is not defined.
test/groups.js: line 1094, col 9, 'it' is not defined.
test/groups.js: line 1102, col 9, 'it' is not defined.
test/groups.js: line 1112, col 9, 'it' is not defined.
test/groups.js: line 1122, col 9, 'it' is not defined.
test/groups.js: line 1131, col 9, 'it' is not defined.
test/groups.js: line 1141, col 9, 'it' is not defined.
test/groups.js: line 1147, col 9, 'it' is not defined.
test/groups.js: line 1151, col 9, 'it' is not defined.
test/groups.js: line 1161, col 9, 'it' is not defined.
test/groups.js: line 1171, col 9, 'it' is not defined.
test/groups.js: line 1178, col 9, 'it' is not defined.
test/groups.js: line 1185, col 9, 'it' is not defined.
test/groups.js: line 1191, col 9, 'it' is not defined.
test/groups.js: line 1200, col 9, 'it' is not defined.
test/groups.js: line 1210, col 9, 'it' is not defined.
test/groups.js: line 1244, col 9, 'it' is not defined.
test/groups.js: line 1254, col 9, 'it' is not defined.
test/groups.js: line 1277, col 9, 'it' is not defined.
test/groups.js: line 1292, col 9, 'it' is not defined.
test/groups.js: line 1306, col 9, 'it' is not defined.
test/groups.js: line 1317, col 9, 'it' is not defined.
test/groups.js: line 1332, col 9, 'it' is not defined.
test/groups.js: line 1339, col 9, 'it' is not defined.
test/groups.js: line 1346, col 9, 'it' is not defined.
test/groups.js: line 1353, col 9, 'it' is not defined.
test/groups.js: line 1235, col 36, '__dirname' is not defined.
test/groups.js: line 1236, col 37, '__dirname' is not defined.

test/i18n.js: line 1, col 1, Use the function form of "use strict".
test/i18n.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 13, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 14, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 16, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/i18n.js: line 22, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 25, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/i18n.js: line 25, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 26, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 28, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 34, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/i18n.js: line 34, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 35, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 36, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 37, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 37, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 38, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 40, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 41, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 43, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/i18n.js: line 43, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 45, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 50, col 25, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 54, col 32, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 58, col 118, 'async functions' is only available in ES8 (use 'esversion: 8').
test/i18n.js: line 58, col 125, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 59, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 60, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 64, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 78, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 79, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 83, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 84, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 90, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 95, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 96, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 98, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 99, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 100, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 107, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 108, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 108, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 109, col 17, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 111, col 24, 'async functions' is only available in ES8 (use 'esversion: 8').
test/i18n.js: line 111, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 112, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 112, col 69, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 113, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 116, col 115, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 117, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 118, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 122, col 110, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 123, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 124, col 68, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 129, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 129, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 130, col 17, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 131, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 131, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 132, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 134, col 24, 'async functions' is only available in ES8 (use 'esversion: 8').
test/i18n.js: line 134, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 138, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 140, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 145, col 29, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 149, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 153, col 97, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 154, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 155, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 156, col 25, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 157, col 25, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/i18n.js: line 160, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 161, col 67, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 166, col 29, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/i18n.js: line 5, col 16, 'require' is not defined.
test/i18n.js: line 6, col 14, 'require' is not defined.
test/i18n.js: line 7, col 12, 'require' is not defined.
test/i18n.js: line 9, col 14, 'require' is not defined.
test/i18n.js: line 11, col 12, 'require' is not defined.
test/i18n.js: line 50, col 38, 'require' is not defined.
test/i18n.js: line 95, col 34, 'require' is not defined.
test/i18n.js: line 145, col 42, 'require' is not defined.
test/i18n.js: line 13, col 1, 'describe' is not defined.
test/i18n.js: line 40, col 9, 'describe' is not defined.
test/i18n.js: line 58, col 13, 'describe' is not defined.
test/i18n.js: line 59, col 17, 'describe' is not defined.
test/i18n.js: line 108, col 13, 'describe' is not defined.
test/i18n.js: line 129, col 13, 'describe' is not defined.
test/i18n.js: line 16, col 5, 'before' is not defined.
test/i18n.js: line 111, col 17, 'before' is not defined.
test/i18n.js: line 134, col 17, 'before' is not defined.
test/i18n.js: line 17, col 14, 'process' is not defined.
test/i18n.js: line 17, col 66, 'process' is not defined.
test/i18n.js: line 21, col 58, '__dirname' is not defined.
test/i18n.js: line 35, col 41, '__dirname' is not defined.
test/i18n.js: line 112, col 58, '__dirname' is not defined.
test/i18n.js: line 131, col 54, '__dirname' is not defined.
test/i18n.js: line 25, col 5, 'it' is not defined.
test/i18n.js: line 34, col 5, 'it' is not defined.
test/i18n.js: line 43, col 13, 'it' is not defined.
test/i18n.js: line 79, col 25, 'it' is not defined.
test/i18n.js: line 84, col 25, 'it' is not defined.
test/i18n.js: line 99, col 25, 'it' is not defined.
test/i18n.js: line 116, col 17, 'it' is not defined.
test/i18n.js: line 122, col 17, 'it' is not defined.
test/i18n.js: line 138, col 17, 'it' is not defined.
test/i18n.js: line 153, col 17, 'it' is not defined.
test/i18n.js: line 38, col 35, 'Map' is not defined.
test/i18n.js: line 132, col 37, 'Map' is not defined.

test/image.js: line 1, col 1, Use the function form of "use strict".
test/image.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/image.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/image.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/image.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/image.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/image.js: line 10, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/image.js: line 11, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/image.js: line 12, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/image.js: line 14, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/image.js: line 22, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/image.js: line 28, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/image.js: line 30, col 89, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/image.js: line 3, col 16, 'require' is not defined.
test/image.js: line 4, col 14, 'require' is not defined.
test/image.js: line 6, col 12, 'require' is not defined.
test/image.js: line 7, col 15, 'require' is not defined.
test/image.js: line 8, col 14, 'require' is not defined.
test/image.js: line 10, col 1, 'describe' is not defined.
test/image.js: line 11, col 5, 'it' is not defined.
test/image.js: line 22, col 5, 'it' is not defined.
test/image.js: line 12, col 35, '__dirname' is not defined.
test/image.js: line 14, col 35, '__dirname' is not defined.
test/image.js: line 24, col 29, '__dirname' is not defined.
test/image.js: line 25, col 31, '__dirname' is not defined.
test/image.js: line 30, col 34, '__dirname' is not defined.

test/locale-detect.js: line 1, col 1, Use the function form of "use strict".
test/locale-detect.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/locale-detect.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/locale-detect.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/locale-detect.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/locale-detect.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/locale-detect.js: line 10, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/locale-detect.js: line 11, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/locale-detect.js: line 11, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/locale-detect.js: line 14, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/locale-detect.js: line 14, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/locale-detect.js: line 14, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/locale-detect.js: line 23, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/locale-detect.js: line 23, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/locale-detect.js: line 26, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/locale-detect.js: line 26, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/locale-detect.js: line 26, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/locale-detect.js: line 3, col 16, 'require' is not defined.
test/locale-detect.js: line 4, col 15, 'require' is not defined.
test/locale-detect.js: line 6, col 12, 'require' is not defined.
test/locale-detect.js: line 7, col 14, 'require' is not defined.
test/locale-detect.js: line 8, col 17, 'require' is not defined.
test/locale-detect.js: line 10, col 1, 'describe' is not defined.
test/locale-detect.js: line 11, col 5, 'it' is not defined.
test/locale-detect.js: line 23, col 5, 'it' is not defined.

test/messaging.js: line 1, col 1, Use the function form of "use strict".
test/messaging.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 18, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 19, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 21, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 22, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 30, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 32, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 34, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 34, col 23, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 34, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 35, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 36, col 13, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 46, col 32, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 49, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 49, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 51, col 10, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 66, col 10, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 67, col 10, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 68, col 10, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 69, col 10, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 75, col 12, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 79, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 80, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 81, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 87, col 73, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 87, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 96, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 97, col 84, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 103, col 108, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 104, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 105, col 89, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 112, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 112, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 113, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 114, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 115, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 118, col 94, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 124, col 94, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 128, col 40, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 135, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 136, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 137, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 138, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 138, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 143, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 143, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 148, col 71, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 148, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 149, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 149, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 153, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 153, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 154, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 161, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 161, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 161, col 64, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 171, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 171, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 173, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 173, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 173, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 182, col 82, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 182, col 89, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 183, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 183, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 183, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 184, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 184, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 189, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 189, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 189, col 70, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 196, col 65, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 196, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 197, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 197, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 197, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 201, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 201, col 59, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 206, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 206, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 207, col 37, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 208, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 212, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 212, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 213, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 213, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 213, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 218, col 57, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 218, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 219, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 219, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 219, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 224, col 66, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 224, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 226, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 226, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 226, col 64, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 232, col 71, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 232, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 233, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 233, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 233, col 64, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 238, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 238, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 239, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 239, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 239, col 64, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 244, col 59, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 244, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 245, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 245, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 245, col 64, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 249, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 249, col 61, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 254, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 254, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 255, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 256, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 261, col 88, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 261, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 262, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 262, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 262, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 263, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 263, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 264, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 269, col 109, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 269, col 116, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 270, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 271, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 271, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 271, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 272, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 272, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 275, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 285, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 285, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 286, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 286, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 290, col 37, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 292, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 297, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 297, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 298, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 299, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 299, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 301, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 302, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 302, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 302, col 49, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 315, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 315, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 316, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 316, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 316, col 64, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 320, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 320, col 61, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 325, col 75, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 325, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 326, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 326, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 326, col 66, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 331, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 331, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 332, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 332, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 332, col 64, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 335, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 335, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 338, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 341, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 346, col 71, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 346, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 347, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 347, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 347, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 350, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 350, col 49, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 354, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 354, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 355, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 355, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 355, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 358, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 358, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 364, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 364, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 365, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 365, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 365, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 366, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 371, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 371, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 372, col 77, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 377, col 68, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 377, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 378, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 381, col 37, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 382, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 382, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 382, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 383, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 383, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 388, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 388, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 401, col 70, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 401, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 402, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 403, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 403, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 404, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 414, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 414, col 49, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 415, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 416, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 416, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 423, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 423, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 426, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 426, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 427, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 427, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 430, col 37, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 433, col 37, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 435, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 437, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 438, col 56, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 439, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 440, col 51, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 443, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 443, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 444, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 444, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 444, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 445, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 445, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 449, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 449, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 454, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 454, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 455, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 457, col 65, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 471, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 471, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 475, col 37, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 475, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 479, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 479, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 480, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 480, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 480, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 484, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 484, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 485, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 485, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 485, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 489, col 79, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 489, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 490, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 490, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 490, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 491, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 491, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 493, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 498, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 498, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 499, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 499, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 499, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 503, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 503, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 504, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 504, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 504, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 508, col 37, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 508, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 509, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 509, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 509, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 513, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 513, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 514, col 37, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 515, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 515, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 519, col 66, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 519, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 536, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 536, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 537, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 537, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 543, col 36, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 543, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 544, col 37, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 545, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 545, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 551, col 79, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 551, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 563, col 70, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 563, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 564, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 564, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 569, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 570, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 571, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 572, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 572, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 574, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 574, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 574, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 579, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 579, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 587, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 587, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 588, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 588, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 596, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 596, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 597, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 597, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 597, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 605, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 605, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 607, col 37, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 609, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 609, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 609, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 618, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 619, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 620, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 621, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 622, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 622, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 623, col 37, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 624, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 624, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 624, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 626, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 626, col 49, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 630, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 630, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 631, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 634, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 634, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 635, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 635, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 635, col 61, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 639, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 639, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 644, col 74, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 644, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 645, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 645, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 645, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 650, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 650, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 651, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 651, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 651, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 656, col 66, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 656, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 657, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 657, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 657, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 662, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 662, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 663, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 663, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 663, col 61, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 667, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 667, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 672, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 672, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 673, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 673, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 673, col 66, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 678, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 678, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 679, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 680, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 680, col 51, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 684, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 684, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 685, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 685, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 685, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 686, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 686, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 689, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 689, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 697, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 697, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 698, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 698, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 698, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 699, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 699, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 700, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 705, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 705, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 706, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 706, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 706, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 707, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 712, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 712, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 713, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 713, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 713, col 66, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 718, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 718, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 719, col 37, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 720, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 720, col 51, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 724, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 724, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 725, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 725, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 725, col 64, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 730, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 731, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 731, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 735, col 19, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 735, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 739, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 739, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 740, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 740, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 740, col 70, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 745, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 745, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 746, col 43, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 747, col 41, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 750, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 750, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 753, col 43, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 754, col 41, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 761, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 762, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 762, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 764, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 764, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 764, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 769, col 68, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 769, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 771, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 771, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 771, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 777, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 777, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 778, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 778, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 778, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 783, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 784, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 785, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 785, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 786, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 789, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 789, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 790, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 790, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 790, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 790, col 103, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 798, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 798, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 799, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 799, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 799, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 799, col 113, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 806, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 806, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 807, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 807, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 807, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 807, col 93, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 814, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/messaging.js: line 814, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 815, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 816, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 816, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/messaging.js: line 816, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/messaging.js: line 3, col 16, 'require' is not defined.
test/messaging.js: line 5, col 15, 'require' is not defined.
test/messaging.js: line 6, col 14, 'require' is not defined.
test/messaging.js: line 10, col 12, 'require' is not defined.
test/messaging.js: line 11, col 14, 'require' is not defined.
test/messaging.js: line 12, col 14, 'require' is not defined.
test/messaging.js: line 13, col 16, 'require' is not defined.
test/messaging.js: line 14, col 19, 'require' is not defined.
test/messaging.js: line 15, col 13, 'require' is not defined.
test/messaging.js: line 16, col 17, 'require' is not defined.
test/messaging.js: line 17, col 17, 'require' is not defined.
test/messaging.js: line 18, col 15, 'require' is not defined.
test/messaging.js: line 19, col 20, 'require' is not defined.
test/messaging.js: line 619, col 31, 'require' is not defined.
test/messaging.js: line 8, col 30, 'setTimeout' is not defined.
test/messaging.js: line 21, col 1, 'describe' is not defined.
test/messaging.js: line 79, col 5, 'describe' is not defined.
test/messaging.js: line 135, col 5, 'describe' is not defined.
test/messaging.js: line 569, col 5, 'describe' is not defined.
test/messaging.js: line 618, col 5, 'describe' is not defined.
test/messaging.js: line 730, col 9, 'describe' is not defined.
test/messaging.js: line 761, col 5, 'describe' is not defined.
test/messaging.js: line 783, col 5, 'describe' is not defined.
test/messaging.js: line 49, col 5, 'before' is not defined.
test/messaging.js: line 138, col 9, 'before' is not defined.
test/messaging.js: line 572, col 9, 'before' is not defined.
test/messaging.js: line 622, col 9, 'before' is not defined.
test/messaging.js: line 731, col 13, 'before' is not defined.
test/messaging.js: line 785, col 9, 'before' is not defined.
test/messaging.js: line 75, col 5, 'after' is not defined.
test/messaging.js: line 143, col 9, 'after' is not defined.
test/messaging.js: line 630, col 9, 'after' is not defined.
test/messaging.js: line 735, col 13, 'after' is not defined.
test/messaging.js: line 80, col 9, 'it' is not defined.
test/messaging.js: line 87, col 9, 'it' is not defined.
test/messaging.js: line 96, col 9, 'it' is not defined.
test/messaging.js: line 103, col 9, 'it' is not defined.
test/messaging.js: line 112, col 9, 'it' is not defined.
test/messaging.js: line 148, col 9, 'it' is not defined.
test/messaging.js: line 153, col 9, 'it' is not defined.
test/messaging.js: line 171, col 9, 'it' is not defined.
test/messaging.js: line 182, col 9, 'it' is not defined.
test/messaging.js: line 196, col 9, 'it' is not defined.
test/messaging.js: line 206, col 9, 'it' is not defined.
test/messaging.js: line 212, col 9, 'it' is not defined.
test/messaging.js: line 218, col 9, 'it' is not defined.
test/messaging.js: line 224, col 9, 'it' is not defined.
test/messaging.js: line 232, col 9, 'it' is not defined.
test/messaging.js: line 238, col 9, 'it' is not defined.
test/messaging.js: line 244, col 9, 'it' is not defined.
test/messaging.js: line 254, col 9, 'it' is not defined.
test/messaging.js: line 261, col 9, 'it' is not defined.
test/messaging.js: line 269, col 9, 'it' is not defined.
test/messaging.js: line 285, col 9, 'it' is not defined.
test/messaging.js: line 297, col 9, 'it' is not defined.
test/messaging.js: line 315, col 9, 'it' is not defined.
test/messaging.js: line 325, col 9, 'it' is not defined.
test/messaging.js: line 331, col 9, 'it' is not defined.
test/messaging.js: line 346, col 9, 'it' is not defined.
test/messaging.js: line 354, col 9, 'it' is not defined.
test/messaging.js: line 364, col 9, 'it' is not defined.
test/messaging.js: line 377, col 9, 'it' is not defined.
test/messaging.js: line 388, col 9, 'it' is not defined.
test/messaging.js: line 401, col 9, 'it' is not defined.
test/messaging.js: line 423, col 9, 'it' is not defined.
test/messaging.js: line 443, col 9, 'it' is not defined.
test/messaging.js: line 454, col 9, 'it' is not defined.
test/messaging.js: line 471, col 9, 'it' is not defined.
test/messaging.js: line 475, col 9, 'it' is not defined.
test/messaging.js: line 479, col 9, 'it' is not defined.
test/messaging.js: line 484, col 9, 'it' is not defined.
test/messaging.js: line 489, col 9, 'it' is not defined.
test/messaging.js: line 498, col 9, 'it' is not defined.
test/messaging.js: line 503, col 9, 'it' is not defined.
test/messaging.js: line 508, col 9, 'it' is not defined.
test/messaging.js: line 513, col 9, 'it' is not defined.
test/messaging.js: line 519, col 9, 'it' is not defined.
test/messaging.js: line 536, col 9, 'it' is not defined.
test/messaging.js: line 543, col 9, 'it' is not defined.
test/messaging.js: line 551, col 9, 'it' is not defined.
test/messaging.js: line 563, col 9, 'it' is not defined.
test/messaging.js: line 587, col 9, 'it' is not defined.
test/messaging.js: line 596, col 9, 'it' is not defined.
test/messaging.js: line 605, col 9, 'it' is not defined.
test/messaging.js: line 634, col 9, 'it' is not defined.
test/messaging.js: line 644, col 9, 'it' is not defined.
test/messaging.js: line 650, col 9, 'it' is not defined.
test/messaging.js: line 656, col 9, 'it' is not defined.
test/messaging.js: line 662, col 9, 'it' is not defined.
test/messaging.js: line 672, col 9, 'it' is not defined.
test/messaging.js: line 678, col 9, 'it' is not defined.
test/messaging.js: line 684, col 9, 'it' is not defined.
test/messaging.js: line 697, col 9, 'it' is not defined.
test/messaging.js: line 705, col 9, 'it' is not defined.
test/messaging.js: line 712, col 9, 'it' is not defined.
test/messaging.js: line 718, col 9, 'it' is not defined.
test/messaging.js: line 724, col 9, 'it' is not defined.
test/messaging.js: line 739, col 13, 'it' is not defined.
test/messaging.js: line 745, col 13, 'it' is not defined.
test/messaging.js: line 750, col 13, 'it' is not defined.
test/messaging.js: line 762, col 9, 'it' is not defined.
test/messaging.js: line 769, col 9, 'it' is not defined.
test/messaging.js: line 777, col 9, 'it' is not defined.
test/messaging.js: line 789, col 9, 'it' is not defined.
test/messaging.js: line 798, col 9, 'it' is not defined.
test/messaging.js: line 806, col 9, 'it' is not defined.
test/messaging.js: line 814, col 9, 'it' is not defined.

test/meta.js: line 1, col 1, Use the function form of "use strict".
test/meta.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 14, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 15, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 16, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 17, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 19, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 26, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 39, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 40, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 41, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 42, col 119, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 44, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 53, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 54, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 62, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 63, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 65, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 74, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 75, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 77, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 87, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 88, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 90, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 98, col 66, 'async functions' is only available in ES8 (use 'esversion: 8').
test/meta.js: line 98, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 99, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 103, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 107, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 109, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 110, col 168, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 115, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 129, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 130, col 91, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 140, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 141, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 143, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 152, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 153, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 155, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 164, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 165, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 167, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 177, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 178, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 180, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 190, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 191, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 192, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 196, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 197, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 205, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 206, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 208, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 216, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 217, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 219, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 227, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 228, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 230, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 238, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 239, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 241, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 249, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 250, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 252, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 260, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 261, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 263, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 271, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 272, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 278, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 279, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 285, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 286, col 97, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 288, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 296, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 297, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 299, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 307, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 308, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 310, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 318, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 319, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 321, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 329, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 330, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 332, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 340, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 341, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 343, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 351, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 352, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 358, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 363, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 365, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 374, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 375, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 377, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 385, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 386, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 388, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 398, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 399, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 404, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 410, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 417, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 418, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 419, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 425, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 426, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 432, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 433, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 439, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 440, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 445, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 446, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 451, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 456, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 461, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 467, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 468, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 469, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 474, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 475, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 478, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 487, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 492, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 493, col 66, 'async functions' is only available in ES8 (use 'esversion: 8').
test/meta.js: line 493, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 494, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 495, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 495, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 495, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 502, col 68, 'async functions' is only available in ES8 (use 'esversion: 8').
test/meta.js: line 502, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 503, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 504, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 506, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 506, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 506, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 517, col 91, 'async functions' is only available in ES8 (use 'esversion: 8').
test/meta.js: line 517, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 518, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 519, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 521, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 521, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 521, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 532, col 68, 'async functions' is only available in ES8 (use 'esversion: 8').
test/meta.js: line 532, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 533, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 534, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 536, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 536, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 536, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 547, col 91, 'async functions' is only available in ES8 (use 'esversion: 8').
test/meta.js: line 547, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 548, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 549, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 551, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 551, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 551, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 561, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/meta.js: line 561, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 562, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 563, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 565, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 565, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 565, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 576, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/meta.js: line 577, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/meta.js: line 3, col 16, 'require' is not defined.
test/meta.js: line 4, col 15, 'require' is not defined.
test/meta.js: line 6, col 15, 'require' is not defined.
test/meta.js: line 8, col 12, 'require' is not defined.
test/meta.js: line 9, col 14, 'require' is not defined.
test/meta.js: line 10, col 14, 'require' is not defined.
test/meta.js: line 11, col 16, 'require' is not defined.
test/meta.js: line 12, col 17, 'require' is not defined.
test/meta.js: line 40, col 29, 'require' is not defined.
test/meta.js: line 191, col 29, 'require' is not defined.
test/meta.js: line 475, col 29, 'require' is not defined.
test/meta.js: line 478, col 35, 'require' is not defined.
test/meta.js: line 479, col 20, 'require' is not defined.
test/meta.js: line 481, col 25, 'require' is not defined.
test/meta.js: line 577, col 25, 'require' is not defined.
test/meta.js: line 14, col 1, 'describe' is not defined.
test/meta.js: line 39, col 5, 'describe' is not defined.
test/meta.js: line 190, col 5, 'describe' is not defined.
test/meta.js: line 398, col 5, 'describe' is not defined.
test/meta.js: line 417, col 5, 'describe' is not defined.
test/meta.js: line 467, col 5, 'describe' is not defined.
test/meta.js: line 492, col 5, 'describe' is not defined.
test/meta.js: line 19, col 5, 'before' is not defined.
test/meta.js: line 192, col 9, 'before' is not defined.
test/meta.js: line 469, col 9, 'before' is not defined.
test/meta.js: line 41, col 9, 'it' is not defined.
test/meta.js: line 53, col 9, 'it' is not defined.
test/meta.js: line 62, col 9, 'it' is not defined.
test/meta.js: line 74, col 9, 'it' is not defined.
test/meta.js: line 87, col 9, 'it' is not defined.
test/meta.js: line 98, col 9, 'it' is not defined.
test/meta.js: line 109, col 9, 'it' is not defined.
test/meta.js: line 129, col 9, 'it' is not defined.
test/meta.js: line 140, col 9, 'it' is not defined.
test/meta.js: line 152, col 9, 'it' is not defined.
test/meta.js: line 164, col 9, 'it' is not defined.
test/meta.js: line 177, col 9, 'it' is not defined.
test/meta.js: line 196, col 9, 'it' is not defined.
test/meta.js: line 205, col 9, 'it' is not defined.
test/meta.js: line 216, col 9, 'it' is not defined.
test/meta.js: line 227, col 9, 'it' is not defined.
test/meta.js: line 238, col 9, 'it' is not defined.
test/meta.js: line 249, col 9, 'it' is not defined.
test/meta.js: line 260, col 9, 'it' is not defined.
test/meta.js: line 271, col 9, 'it' is not defined.
test/meta.js: line 278, col 9, 'it' is not defined.
test/meta.js: line 285, col 9, 'it' is not defined.
test/meta.js: line 296, col 9, 'it' is not defined.
test/meta.js: line 307, col 9, 'it' is not defined.
test/meta.js: line 318, col 9, 'it' is not defined.
test/meta.js: line 329, col 9, 'it' is not defined.
test/meta.js: line 340, col 9, 'it' is not defined.
test/meta.js: line 351, col 9, 'it' is not defined.
test/meta.js: line 358, col 9, 'it' is not defined.
test/meta.js: line 374, col 9, 'it' is not defined.
test/meta.js: line 385, col 9, 'it' is not defined.
test/meta.js: line 399, col 9, 'it' is not defined.
test/meta.js: line 404, col 9, 'it' is not defined.
test/meta.js: line 410, col 9, 'it' is not defined.
test/meta.js: line 418, col 9, 'it' is not defined.
test/meta.js: line 425, col 9, 'it' is not defined.
test/meta.js: line 432, col 9, 'it' is not defined.
test/meta.js: line 439, col 9, 'it' is not defined.
test/meta.js: line 445, col 9, 'it' is not defined.
test/meta.js: line 451, col 9, 'it' is not defined.
test/meta.js: line 456, col 9, 'it' is not defined.
test/meta.js: line 461, col 9, 'it' is not defined.
test/meta.js: line 474, col 9, 'it' is not defined.
test/meta.js: line 493, col 9, 'it' is not defined.
test/meta.js: line 502, col 9, 'it' is not defined.
test/meta.js: line 517, col 9, 'it' is not defined.
test/meta.js: line 532, col 9, 'it' is not defined.
test/meta.js: line 547, col 9, 'it' is not defined.
test/meta.js: line 561, col 9, 'it' is not defined.
test/meta.js: line 576, col 5, 'it' is not defined.
test/meta.js: line 470, col 23, 'process' is not defined.
test/meta.js: line 471, col 13, 'process' is not defined.
test/meta.js: line 488, col 13, 'process' is not defined.
test/meta.js: line 487, col 9, 'after' is not defined.

test/middleware.js: line 1, col 1, Use the function form of "use strict".
test/middleware.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 14, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 15, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 16, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 18, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/middleware.js: line 18, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 23, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 24, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 25, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 26, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 32, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 33, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 34, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 35, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 36, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 42, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 43, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 44, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 45, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 46, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 56, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 57, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 58, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 59, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 60, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 70, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 71, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 72, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 73, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 74, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 109, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 110, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 111, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 113, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/middleware.js: line 113, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 115, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 118, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/middleware.js: line 118, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 119, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 119, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 119, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 125, col 86, 'async functions' is only available in ES8 (use 'esversion: 8').
test/middleware.js: line 125, col 93, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 126, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 126, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 126, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 127, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 138, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/middleware.js: line 138, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 139, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 139, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 145, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/middleware.js: line 145, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 146, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 146, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 146, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 152, col 81, 'async functions' is only available in ES8 (use 'esversion: 8').
test/middleware.js: line 152, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 153, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 153, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 153, col 72, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 160, col 77, 'async functions' is only available in ES8 (use 'esversion: 8').
test/middleware.js: line 160, col 84, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 161, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 161, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 161, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 161, col 81, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 168, col 79, 'async functions' is only available in ES8 (use 'esversion: 8').
test/middleware.js: line 168, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 169, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 169, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 169, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/middleware.js: line 169, col 97, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/middleware.js: line 3, col 16, 'require' is not defined.
test/middleware.js: line 4, col 15, 'require' is not defined.
test/middleware.js: line 6, col 12, 'require' is not defined.
test/middleware.js: line 8, col 14, 'require' is not defined.
test/middleware.js: line 9, col 16, 'require' is not defined.
test/middleware.js: line 10, col 15, 'require' is not defined.
test/middleware.js: line 11, col 17, 'require' is not defined.
test/middleware.js: line 12, col 17, 'require' is not defined.
test/middleware.js: line 24, col 32, 'require' is not defined.
test/middleware.js: line 33, col 32, 'require' is not defined.
test/middleware.js: line 43, col 32, 'require' is not defined.
test/middleware.js: line 57, col 32, 'require' is not defined.
test/middleware.js: line 71, col 32, 'require' is not defined.
test/middleware.js: line 14, col 1, 'describe' is not defined.
test/middleware.js: line 15, col 5, 'describe' is not defined.
test/middleware.js: line 109, col 5, 'describe' is not defined.
test/middleware.js: line 18, col 9, 'before' is not defined.
test/middleware.js: line 113, col 9, 'before' is not defined.
test/middleware.js: line 23, col 9, 'it' is not defined.
test/middleware.js: line 32, col 9, 'it' is not defined.
test/middleware.js: line 42, col 9, 'it' is not defined.
test/middleware.js: line 56, col 9, 'it' is not defined.
test/middleware.js: line 70, col 9, 'it' is not defined.
test/middleware.js: line 118, col 9, 'it' is not defined.
test/middleware.js: line 125, col 9, 'it' is not defined.
test/middleware.js: line 138, col 9, 'it' is not defined.
test/middleware.js: line 145, col 9, 'it' is not defined.
test/middleware.js: line 152, col 9, 'it' is not defined.
test/middleware.js: line 160, col 9, 'it' is not defined.
test/middleware.js: line 168, col 9, 'it' is not defined.

test/notifications.js: line 1, col 1, Use the function form of "use strict".
test/notifications.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 18, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 19, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 20, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 22, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 23, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 33, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 34, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 40, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 46, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 50, col 23, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 50, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 53, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 62, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 69, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 76, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 77, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 85, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 86, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 95, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 96, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 98, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 100, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 108, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 109, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 111, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 112, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 112, col 105, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 121, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 122, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 124, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 125, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 125, col 105, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 134, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 135, col 92, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 137, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 138, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 138, col 105, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 147, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 148, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 150, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 157, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 158, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 160, col 34, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 160, col 101, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 163, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 163, col 103, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 172, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 173, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 175, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 182, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 183, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 189, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 190, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 192, col 34, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 192, col 101, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 195, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 195, col 103, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 198, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 208, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 209, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 211, col 34, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 211, col 101, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 214, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 214, col 103, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 223, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 224, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 230, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/notifications.js: line 230, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 231, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 232, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 232, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 237, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 237, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 243, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 243, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 247, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 247, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 260, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 262, col 22, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 265, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 266, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 270, col 40, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 275, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 276, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 284, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 285, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 291, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 292, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 294, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 303, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 304, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 312, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 313, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 319, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 321, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 323, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 324, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 334, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 335, col 102, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 342, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 343, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 350, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 351, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 358, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 359, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 366, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 367, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 373, col 71, 'async functions' is only available in ES8 (use 'esversion: 8').
test/notifications.js: line 373, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 374, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 376, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 376, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 387, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 391, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 393, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 395, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 397, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 398, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 401, col 46, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 409, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 414, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 416, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 418, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/notifications.js: line 419, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 421, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 423, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/notifications.js: line 4, col 16, 'require' is not defined.
test/notifications.js: line 5, col 15, 'require' is not defined.
test/notifications.js: line 6, col 14, 'require' is not defined.
test/notifications.js: line 8, col 12, 'require' is not defined.
test/notifications.js: line 9, col 14, 'require' is not defined.
test/notifications.js: line 10, col 14, 'require' is not defined.
test/notifications.js: line 11, col 16, 'require' is not defined.
test/notifications.js: line 12, col 20, 'require' is not defined.
test/notifications.js: line 13, col 23, 'require' is not defined.
test/notifications.js: line 14, col 29, 'require' is not defined.
test/notifications.js: line 16, col 30, 'setTimeout' is not defined.
test/notifications.js: line 111, col 13, 'setTimeout' is not defined.
test/notifications.js: line 124, col 13, 'setTimeout' is not defined.
test/notifications.js: line 137, col 13, 'setTimeout' is not defined.
test/notifications.js: line 323, col 17, 'setTimeout' is not defined.
test/notifications.js: line 397, col 17, 'setTimeout' is not defined.
test/notifications.js: line 18, col 1, 'describe' is not defined.
test/notifications.js: line 22, col 5, 'before' is not defined.
test/notifications.js: line 33, col 5, 'it' is not defined.
test/notifications.js: line 40, col 5, 'it' is not defined.
test/notifications.js: line 62, col 5, 'it' is not defined.
test/notifications.js: line 76, col 5, 'it' is not defined.
test/notifications.js: line 85, col 5, 'it' is not defined.
test/notifications.js: line 95, col 5, 'it' is not defined.
test/notifications.js: line 108, col 5, 'it' is not defined.
test/notifications.js: line 121, col 5, 'it' is not defined.
test/notifications.js: line 134, col 5, 'it' is not defined.
test/notifications.js: line 147, col 5, 'it' is not defined.
test/notifications.js: line 157, col 5, 'it' is not defined.
test/notifications.js: line 172, col 5, 'it' is not defined.
test/notifications.js: line 182, col 5, 'it' is not defined.
test/notifications.js: line 189, col 5, 'it' is not defined.
test/notifications.js: line 208, col 5, 'it' is not defined.
test/notifications.js: line 223, col 5, 'it' is not defined.
test/notifications.js: line 230, col 5, 'it' is not defined.
test/notifications.js: line 265, col 5, 'it' is not defined.
test/notifications.js: line 275, col 5, 'it' is not defined.
test/notifications.js: line 284, col 5, 'it' is not defined.
test/notifications.js: line 291, col 5, 'it' is not defined.
test/notifications.js: line 303, col 5, 'it' is not defined.
test/notifications.js: line 312, col 5, 'it' is not defined.
test/notifications.js: line 334, col 5, 'it' is not defined.
test/notifications.js: line 342, col 5, 'it' is not defined.
test/notifications.js: line 350, col 5, 'it' is not defined.
test/notifications.js: line 358, col 5, 'it' is not defined.
test/notifications.js: line 366, col 5, 'it' is not defined.
test/notifications.js: line 373, col 5, 'it' is not defined.
test/notifications.js: line 391, col 5, 'it' is not defined.
test/notifications.js: line 409, col 5, 'it' is not defined.

test/package-install.js: line 1, col 1, Use the function form of "use strict".
test/package-install.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/package-install.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/package-install.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/package-install.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/package-install.js: line 9, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/package-install.js: line 16, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/package-install.js: line 17, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/package-install.js: line 18, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/package-install.js: line 19, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/package-install.js: line 20, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/package-install.js: line 22, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/package-install.js: line 22, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/package-install.js: line 28, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/package-install.js: line 28, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/package-install.js: line 35, col 91, 'async functions' is only available in ES8 (use 'esversion: 8').
test/package-install.js: line 35, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/package-install.js: line 43, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/package-install.js: line 47, col 102, 'async functions' is only available in ES8 (use 'esversion: 8').
test/package-install.js: line 47, col 109, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/package-install.js: line 52, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/package-install.js: line 56, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/package-install.js: line 56, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/package-install.js: line 61, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/package-install.js: line 65, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/package-install.js: line 65, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/package-install.js: line 70, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/package-install.js: line 74, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/package-install.js: line 74, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/package-install.js: line 82, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/package-install.js: line 88, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/package-install.js: line 88, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/package-install.js: line 93, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/package-install.js: line 97, col 57, 'async functions' is only available in ES8 (use 'esversion: 8').
test/package-install.js: line 97, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/package-install.js: line 101, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/package-install.js: line 105, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
test/package-install.js: line 105, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/package-install.js: line 3, col 14, 'require' is not defined.
test/package-install.js: line 4, col 12, 'require' is not defined.
test/package-install.js: line 5, col 16, 'require' is not defined.
test/package-install.js: line 7, col 20, 'require' is not defined.
test/package-install.js: line 9, col 1, 'describe' is not defined.
test/package-install.js: line 16, col 5, 'describe' is not defined.
test/package-install.js: line 19, col 48, '__dirname' is not defined.
test/package-install.js: line 20, col 46, '__dirname' is not defined.
test/package-install.js: line 24, col 63, '__dirname' is not defined.
test/package-install.js: line 25, col 61, '__dirname' is not defined.
test/package-install.js: line 29, col 44, '__dirname' is not defined.
test/package-install.js: line 107, col 42, '__dirname' is not defined.
test/package-install.js: line 108, col 42, '__dirname' is not defined.
test/package-install.js: line 22, col 9, 'before' is not defined.
test/package-install.js: line 28, col 9, 'beforeEach' is not defined.
test/package-install.js: line 35, col 9, 'it' is not defined.
test/package-install.js: line 47, col 9, 'it' is not defined.
test/package-install.js: line 56, col 9, 'it' is not defined.
test/package-install.js: line 65, col 9, 'it' is not defined.
test/package-install.js: line 74, col 9, 'it' is not defined.
test/package-install.js: line 88, col 9, 'it' is not defined.
test/package-install.js: line 97, col 9, 'it' is not defined.
test/package-install.js: line 105, col 9, 'after' is not defined.

test/pagination.js: line 1, col 1, Use the function form of "use strict".
test/pagination.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/pagination.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/pagination.js: line 7, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/pagination.js: line 8, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/pagination.js: line 9, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/pagination.js: line 18, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/pagination.js: line 19, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/pagination.js: line 29, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/pagination.js: line 30, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/pagination.js: line 4, col 16, 'require' is not defined.
test/pagination.js: line 5, col 20, 'require' is not defined.
test/pagination.js: line 7, col 1, 'describe' is not defined.
test/pagination.js: line 8, col 5, 'it' is not defined.
test/pagination.js: line 18, col 5, 'it' is not defined.
test/pagination.js: line 29, col 5, 'it' is not defined.

test/password.js: line 1, col 1, Use the function form of "use strict".
test/password.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/password.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/password.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/password.js: line 8, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/password.js: line 9, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/password.js: line 10, col 57, 'async functions' is only available in ES8 (use 'esversion: 8').
test/password.js: line 10, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/password.js: line 11, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/password.js: line 16, col 28, 'async functions' is only available in ES8 (use 'esversion: 8').
test/password.js: line 16, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/password.js: line 17, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/password.js: line 19, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/password.js: line 19, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/password.js: line 20, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/password.js: line 21, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/password.js: line 25, col 110, 'async functions' is only available in ES8 (use 'esversion: 8').
test/password.js: line 25, col 117, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/password.js: line 26, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/password.js: line 27, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/password.js: line 31, col 79, 'async functions' is only available in ES8 (use 'esversion: 8').
test/password.js: line 31, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/password.js: line 32, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/password.js: line 34, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/password.js: line 37, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/password.js: line 41, col 72, 'async functions' is only available in ES8 (use 'esversion: 8').
test/password.js: line 41, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/password.js: line 43, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/password.js: line 44, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/password.js: line 47, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/password.js: line 3, col 16, 'require' is not defined.
test/password.js: line 4, col 16, 'require' is not defined.
test/password.js: line 6, col 18, 'require' is not defined.
test/password.js: line 8, col 1, 'describe' is not defined.
test/password.js: line 9, col 5, 'describe' is not defined.
test/password.js: line 16, col 5, 'describe' is not defined.
test/password.js: line 10, col 9, 'it' is not defined.
test/password.js: line 19, col 9, 'it' is not defined.
test/password.js: line 25, col 9, 'it' is not defined.
test/password.js: line 31, col 9, 'it' is not defined.
test/password.js: line 41, col 9, 'it' is not defined.

test/plugins-installed.js: line 1, col 1, Use the function form of "use strict".
test/plugins-installed.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins-installed.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins-installed.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins-installed.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins-installed.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins-installed.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins-installed.js: line 10, col 15, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins-installed.js: line 12, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins-installed.js: line 13, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins-installed.js: line 14, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins-installed.js: line 3, col 15, 'require' is not defined.
test/plugins-installed.js: line 4, col 14, 'require' is not defined.
test/plugins-installed.js: line 5, col 12, 'require' is not defined.
test/plugins-installed.js: line 6, col 12, 'require' is not defined.
test/plugins-installed.js: line 16, col 13, 'require' is not defined.
test/plugins-installed.js: line 9, col 41, '__dirname' is not defined.
test/plugins-installed.js: line 14, col 39, '__dirname' is not defined.
test/plugins-installed.js: line 12, col 1, 'describe' is not defined.
test/plugins-installed.js: line 19, col 17, 'console' is not defined.

test/plugins.js: line 1, col 1, Use the function form of "use strict".
test/plugins.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 13, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 14, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 15, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 16, col 61, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 16, col 94, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 25, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 30, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 43, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 50, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/plugins.js: line 50, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 55, col 9, 'async functions' is only available in ES8 (use 'esversion: 8').
test/plugins.js: line 56, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 70, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 74, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/plugins.js: line 74, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 89, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 93, col 97, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 94, col 9, 'async functions' is only available in ES8 (use 'esversion: 8').
test/plugins.js: line 95, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 101, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 107, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 117, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 124, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 130, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 131, col 9, 'async functions' is only available in ES8 (use 'esversion: 8').
test/plugins.js: line 133, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 138, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 144, col 107, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 145, col 9, 'async functions' is only available in ES8 (use 'esversion: 8').
test/plugins.js: line 147, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 152, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 159, col 97, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 160, col 9, 'async functions' is only available in ES8 (use 'esversion: 8').
test/plugins.js: line 162, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 167, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 174, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 175, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 177, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 180, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 187, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 188, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 190, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 192, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 199, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 200, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 200, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 203, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 205, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 205, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 214, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 215, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 221, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 222, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 223, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 224, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 225, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 229, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 236, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 247, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 254, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 255, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 257, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 265, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/plugins.js: line 265, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 279, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 282, col 118, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 292, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 297, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 305, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 306, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/plugins.js: line 306, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 307, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 307, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 307, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 312, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/plugins.js: line 312, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 313, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 313, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 314, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 314, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 319, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/plugins.js: line 319, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 320, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 320, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 321, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 321, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 327, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 328, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 332, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 333, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 337, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 342, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 343, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 350, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 351, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 358, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 359, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 361, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/plugins.js: line 363, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 366, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 373, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 374, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 377, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 384, col 94, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 385, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 386, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 394, col 92, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 395, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 396, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/plugins.js: line 3, col 16, 'require' is not defined.
test/plugins.js: line 4, col 14, 'require' is not defined.
test/plugins.js: line 5, col 15, 'require' is not defined.
test/plugins.js: line 7, col 12, 'require' is not defined.
test/plugins.js: line 9, col 12, 'require' is not defined.
test/plugins.js: line 10, col 17, 'require' is not defined.
test/plugins.js: line 11, col 17, 'require' is not defined.
test/plugins.js: line 13, col 1, 'describe' is not defined.
test/plugins.js: line 221, col 5, 'describe' is not defined.
test/plugins.js: line 305, col 5, 'describe' is not defined.
test/plugins.js: line 327, col 5, 'describe' is not defined.
test/plugins.js: line 14, col 5, 'it' is not defined.
test/plugins.js: line 25, col 5, 'it' is not defined.
test/plugins.js: line 30, col 5, 'it' is not defined.
test/plugins.js: line 50, col 5, 'it' is not defined.
test/plugins.js: line 74, col 5, 'it' is not defined.
test/plugins.js: line 93, col 5, 'it' is not defined.
test/plugins.js: line 107, col 5, 'it' is not defined.
test/plugins.js: line 117, col 5, 'it' is not defined.
test/plugins.js: line 130, col 5, 'it' is not defined.
test/plugins.js: line 144, col 5, 'it' is not defined.
test/plugins.js: line 159, col 5, 'it' is not defined.
test/plugins.js: line 174, col 5, 'it' is not defined.
test/plugins.js: line 187, col 5, 'it' is not defined.
test/plugins.js: line 199, col 5, 'it' is not defined.
test/plugins.js: line 214, col 5, 'it' is not defined.
test/plugins.js: line 234, col 9, 'it' is not defined.
test/plugins.js: line 254, col 9, 'it' is not defined.
test/plugins.js: line 265, col 9, 'it' is not defined.
test/plugins.js: line 277, col 9, 'it' is not defined.
test/plugins.js: line 290, col 9, 'it' is not defined.
test/plugins.js: line 306, col 9, 'it' is not defined.
test/plugins.js: line 312, col 9, 'it' is not defined.
test/plugins.js: line 319, col 9, 'it' is not defined.
test/plugins.js: line 342, col 9, 'it' is not defined.
test/plugins.js: line 350, col 9, 'it' is not defined.
test/plugins.js: line 358, col 9, 'it' is not defined.
test/plugins.js: line 373, col 9, 'it' is not defined.
test/plugins.js: line 384, col 9, 'it' is not defined.
test/plugins.js: line 394, col 9, 'it' is not defined.
test/plugins.js: line 56, col 24, 'Promise' is not defined.
test/plugins.js: line 95, col 24, 'Promise' is not defined.
test/plugins.js: line 133, col 24, 'Promise' is not defined.
test/plugins.js: line 147, col 24, 'Promise' is not defined.
test/plugins.js: line 162, col 24, 'Promise' is not defined.
test/plugins.js: line 163, col 17, 'setTimeout' is not defined.
test/plugins.js: line 201, col 45, '__dirname' is not defined.
test/plugins.js: line 247, col 74, '__dirname' is not defined.
test/plugins.js: line 297, col 74, '__dirname' is not defined.
test/plugins.js: line 224, col 26, 'process' is not defined.
test/plugins.js: line 226, col 13, 'process' is not defined.
test/plugins.js: line 230, col 13, 'process' is not defined.
test/plugins.js: line 225, col 9, 'before' is not defined.
test/plugins.js: line 229, col 9, 'after' is not defined.
test/plugins.js: line 333, col 9, 'beforeEach' is not defined.
test/plugins.js: line 337, col 9, 'afterEach' is not defined.

test/posts.js: line 1, col 1, Use the function form of "use strict".
test/posts.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 18, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 19, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 20, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 21, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 22, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 23, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 24, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 25, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 26, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 28, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 29, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 30, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 31, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 32, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 33, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 34, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 36, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 36, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 40, col 10, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 45, col 10, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 54, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 54, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 55, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 55, col 36, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 55, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 55, col 67, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 56, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 58, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 63, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 64, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 79, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 79, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 80, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 81, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 82, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 83, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 84, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 85, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 87, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 91, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 111, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 111, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 119, col 65, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 119, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 127, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 128, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 135, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 136, col 83, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 136, col 90, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 138, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 154, col 36, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 154, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 155, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 160, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 165, col 73, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 165, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 166, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 167, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 167, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 169, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 169, col 51, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 173, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 174, col 101, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 184, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 185, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 193, col 80, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 193, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 201, col 36, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 201, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 202, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 207, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 212, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 212, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 213, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 218, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 223, col 73, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 223, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 224, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 225, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 225, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 227, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 227, col 51, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 231, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 231, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 232, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 234, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 235, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 249, col 81, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 249, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 250, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 252, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 253, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 268, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 269, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 269, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 270, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 270, col 99, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 272, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 276, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 276, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 277, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 277, col 101, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 279, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 284, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 285, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 286, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 292, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 293, col 105, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 304, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 305, col 9, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 306, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 313, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 322, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 323, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 324, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 326, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 326, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 327, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 327, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 334, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 334, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 343, col 36, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 343, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 345, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 349, col 100, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 349, col 107, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 350, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 353, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 353, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 354, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 354, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 354, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 354, col 90, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 359, col 37, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 359, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 361, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 365, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 365, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 366, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 368, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 372, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 372, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 373, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 373, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 376, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 378, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 383, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 384, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 385, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 386, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 387, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 394, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 403, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 411, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 411, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 420, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 420, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 429, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 429, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 433, col 50, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 438, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 438, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 439, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 443, col 50, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 448, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 448, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 449, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 454, col 43, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 461, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 461, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 462, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 463, col 18, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 464, col 27, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 469, col 50, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 474, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 474, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 478, col 50, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 483, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 483, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 484, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 488, col 50, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 493, col 32, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 493, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 494, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 505, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 505, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 509, col 106, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 509, col 113, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 522, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 522, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 524, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 531, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 531, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 532, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 539, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 540, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 549, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 550, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 557, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 557, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 558, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 567, col 65, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 567, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 568, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 578, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 581, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 581, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 582, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 589, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 589, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 592, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 594, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 598, col 94, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 598, col 101, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 599, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 604, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 605, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 606, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 607, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 609, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 609, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 610, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 617, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 625, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 634, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 634, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 643, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 643, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 652, col 65, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 652, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 661, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 661, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 663, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 667, col 76, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 667, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 668, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 669, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 670, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 671, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 672, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 674, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 684, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 685, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 686, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 693, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 694, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 704, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 710, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 712, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 722, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 723, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 724, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 731, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 732, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 734, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 738, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 740, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 748, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 751, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 755, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 764, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 765, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 766, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 767, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 768, col 41, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 772, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 773, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 774, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 775, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 777, col 41, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 782, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 783, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 784, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 790, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 797, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 797, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 806, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 806, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 815, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 815, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 816, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 816, col 65, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 820, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 820, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 822, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 822, col 72, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 826, col 85, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 826, col 92, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 828, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 828, col 76, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 832, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 832, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 834, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 834, col 76, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 838, col 31, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 838, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 839, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 839, col 70, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 843, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 843, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 844, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 844, col 76, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 848, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 848, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 849, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 853, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 853, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 854, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 861, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 861, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 862, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 869, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 869, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 870, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 876, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 876, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 877, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 881, col 36, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 881, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 882, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 886, col 36, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 886, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 887, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 891, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 891, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 892, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 898, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 903, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 904, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 905, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 912, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 913, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 920, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 921, col 84, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 928, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 929, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 937, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 938, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 944, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 945, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 946, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 947, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 948, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 949, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 951, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 958, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 964, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 964, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 965, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 971, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 971, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 972, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 978, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 978, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 979, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 980, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 980, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 980, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 980, col 88, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 981, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 981, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 988, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 989, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 995, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 995, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 997, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 997, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 997, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 997, col 88, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 998, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 998, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1003, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1003, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1005, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1005, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1005, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1005, col 88, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1006, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1006, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1011, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1011, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1013, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1013, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1013, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1013, col 88, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1014, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1014, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1020, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1021, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1027, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1028, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1034, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1034, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1035, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1040, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1041, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1047, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1047, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1048, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1050, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1051, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1051, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1056, col 76, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1056, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1057, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1058, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1059, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1061, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1067, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1068, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1075, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1076, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1077, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1077, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1080, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1087, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1088, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1088, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1097, col 84, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1097, col 91, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1098, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1105, col 81, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1105, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1106, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1108, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1110, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1111, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1120, col 116, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1120, col 123, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1121, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1125, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1126, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1135, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1135, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1136, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1136, col 33, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1145, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1150, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1158, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1159, col 71, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1159, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1160, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1162, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1164, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1167, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1172, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1175, col 100, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1175, col 107, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1179, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1182, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1187, col 78, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1187, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1192, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1194, col 30, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1197, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1205, col 21, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1205, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1206, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/posts.js: line 1208, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/posts.js: line 1208, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1212, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 1213, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/posts.js: line 4, col 16, 'require' is not defined.
test/posts.js: line 6, col 15, 'require' is not defined.
test/posts.js: line 7, col 14, 'require' is not defined.
test/posts.js: line 8, col 14, 'require' is not defined.
test/posts.js: line 12, col 12, 'require' is not defined.
test/posts.js: line 13, col 16, 'require' is not defined.
test/posts.js: line 14, col 15, 'require' is not defined.
test/posts.js: line 15, col 20, 'require' is not defined.
test/posts.js: line 16, col 20, 'require' is not defined.
test/posts.js: line 17, col 14, 'require' is not defined.
test/posts.js: line 18, col 16, 'require' is not defined.
test/posts.js: line 19, col 21, 'require' is not defined.
test/posts.js: line 20, col 18, 'require' is not defined.
test/posts.js: line 21, col 19, 'require' is not defined.
test/posts.js: line 22, col 14, 'require' is not defined.
test/posts.js: line 23, col 14, 'require' is not defined.
test/posts.js: line 24, col 17, 'require' is not defined.
test/posts.js: line 25, col 15, 'require' is not defined.
test/posts.js: line 26, col 17, 'require' is not defined.
test/posts.js: line 765, col 27, 'require' is not defined.
test/posts.js: line 773, col 27, 'require' is not defined.
test/posts.js: line 1214, col 13, 'require' is not defined.
test/posts.js: line 10, col 30, 'setTimeout' is not defined.
test/posts.js: line 28, col 1, 'describe' is not defined.
test/posts.js: line 135, col 5, 'describe' is not defined.
test/posts.js: line 268, col 5, 'describe' is not defined.
test/posts.js: line 284, col 5, 'describe' is not defined.
test/posts.js: line 304, col 5, 'describe' is not defined.
test/posts.js: line 383, col 5, 'describe' is not defined.
test/posts.js: line 604, col 5, 'describe' is not defined.
test/posts.js: line 684, col 5, 'describe' is not defined.
test/posts.js: line 722, col 5, 'describe' is not defined.
test/posts.js: line 782, col 5, 'describe' is not defined.
test/posts.js: line 903, col 5, 'describe' is not defined.
test/posts.js: line 944, col 5, 'describe' is not defined.
test/posts.js: line 1075, col 5, 'describe' is not defined.
test/posts.js: line 1087, col 9, 'describe' is not defined.
test/posts.js: line 1158, col 9, 'describe' is not defined.
test/posts.js: line 1205, col 1, 'describe' is not defined.
test/posts.js: line 36, col 5, 'before' is not defined.
test/posts.js: line 326, col 9, 'before' is not defined.
test/posts.js: line 387, col 9, 'before' is not defined.
test/posts.js: line 609, col 9, 'before' is not defined.
test/posts.js: line 784, col 9, 'before' is not defined.
test/posts.js: line 949, col 9, 'before' is not defined.
test/posts.js: line 1077, col 9, 'before' is not defined.
test/posts.js: line 1208, col 5, 'before' is not defined.
test/posts.js: line 54, col 5, 'it' is not defined.
test/posts.js: line 79, col 5, 'it' is not defined.
test/posts.js: line 111, col 5, 'it' is not defined.
test/posts.js: line 119, col 5, 'it' is not defined.
test/posts.js: line 127, col 5, 'it' is not defined.
test/posts.js: line 136, col 9, 'it' is not defined.
test/posts.js: line 154, col 9, 'it' is not defined.
test/posts.js: line 165, col 9, 'it' is not defined.
test/posts.js: line 173, col 9, 'it' is not defined.
test/posts.js: line 184, col 9, 'it' is not defined.
test/posts.js: line 193, col 9, 'it' is not defined.
test/posts.js: line 201, col 9, 'it' is not defined.
test/posts.js: line 212, col 9, 'it' is not defined.
test/posts.js: line 223, col 9, 'it' is not defined.
test/posts.js: line 231, col 9, 'it' is not defined.
test/posts.js: line 249, col 9, 'it' is not defined.
test/posts.js: line 269, col 9, 'it' is not defined.
test/posts.js: line 276, col 9, 'it' is not defined.
test/posts.js: line 285, col 9, 'it' is not defined.
test/posts.js: line 292, col 9, 'it' is not defined.
test/posts.js: line 334, col 9, 'it' is not defined.
test/posts.js: line 343, col 9, 'it' is not defined.
test/posts.js: line 349, col 9, 'it' is not defined.
test/posts.js: line 359, col 9, 'it' is not defined.
test/posts.js: line 365, col 9, 'it' is not defined.
test/posts.js: line 372, col 9, 'it' is not defined.
test/posts.js: line 411, col 9, 'it' is not defined.
test/posts.js: line 420, col 9, 'it' is not defined.
test/posts.js: line 429, col 9, 'it' is not defined.
test/posts.js: line 438, col 9, 'it' is not defined.
test/posts.js: line 448, col 9, 'it' is not defined.
test/posts.js: line 461, col 9, 'it' is not defined.
test/posts.js: line 474, col 9, 'it' is not defined.
test/posts.js: line 483, col 9, 'it' is not defined.
test/posts.js: line 493, col 9, 'it' is not defined.
test/posts.js: line 509, col 9, 'it' is not defined.
test/posts.js: line 522, col 9, 'it' is not defined.
test/posts.js: line 531, col 9, 'it' is not defined.
test/posts.js: line 539, col 9, 'it' is not defined.
test/posts.js: line 549, col 9, 'it' is not defined.
test/posts.js: line 557, col 9, 'it' is not defined.
test/posts.js: line 567, col 9, 'it' is not defined.
test/posts.js: line 581, col 9, 'it' is not defined.
test/posts.js: line 589, col 9, 'it' is not defined.
test/posts.js: line 598, col 9, 'it' is not defined.
test/posts.js: line 634, col 9, 'it' is not defined.
test/posts.js: line 643, col 9, 'it' is not defined.
test/posts.js: line 652, col 9, 'it' is not defined.
test/posts.js: line 661, col 9, 'it' is not defined.
test/posts.js: line 667, col 9, 'it' is not defined.
test/posts.js: line 685, col 9, 'it' is not defined.
test/posts.js: line 693, col 9, 'it' is not defined.
test/posts.js: line 704, col 5, 'it' is not defined.
test/posts.js: line 723, col 9, 'it' is not defined.
test/posts.js: line 731, col 9, 'it' is not defined.
test/posts.js: line 748, col 9, 'it' is not defined.
test/posts.js: line 764, col 9, 'it' is not defined.
test/posts.js: line 772, col 9, 'it' is not defined.
test/posts.js: line 797, col 9, 'it' is not defined.
test/posts.js: line 806, col 9, 'it' is not defined.
test/posts.js: line 815, col 9, 'it' is not defined.
test/posts.js: line 820, col 9, 'it' is not defined.
test/posts.js: line 826, col 9, 'it' is not defined.
test/posts.js: line 832, col 9, 'it' is not defined.
test/posts.js: line 838, col 9, 'it' is not defined.
test/posts.js: line 843, col 9, 'it' is not defined.
test/posts.js: line 848, col 9, 'it' is not defined.
test/posts.js: line 853, col 9, 'it' is not defined.
test/posts.js: line 861, col 9, 'it' is not defined.
test/posts.js: line 869, col 9, 'it' is not defined.
test/posts.js: line 876, col 9, 'it' is not defined.
test/posts.js: line 881, col 9, 'it' is not defined.
test/posts.js: line 886, col 9, 'it' is not defined.
test/posts.js: line 891, col 9, 'it' is not defined.
test/posts.js: line 904, col 9, 'it' is not defined.
test/posts.js: line 912, col 9, 'it' is not defined.
test/posts.js: line 920, col 9, 'it' is not defined.
test/posts.js: line 928, col 9, 'it' is not defined.
test/posts.js: line 937, col 5, 'it' is not defined.
test/posts.js: line 964, col 9, 'it' is not defined.
test/posts.js: line 971, col 9, 'it' is not defined.
test/posts.js: line 978, col 9, 'it' is not defined.
test/posts.js: line 988, col 9, 'it' is not defined.
test/posts.js: line 995, col 9, 'it' is not defined.
test/posts.js: line 1003, col 9, 'it' is not defined.
test/posts.js: line 1011, col 9, 'it' is not defined.
test/posts.js: line 1020, col 9, 'it' is not defined.
test/posts.js: line 1027, col 9, 'it' is not defined.
test/posts.js: line 1034, col 9, 'it' is not defined.
test/posts.js: line 1040, col 9, 'it' is not defined.
test/posts.js: line 1047, col 9, 'it' is not defined.
test/posts.js: line 1056, col 9, 'it' is not defined.
test/posts.js: line 1088, col 13, 'it' is not defined.
test/posts.js: line 1097, col 13, 'it' is not defined.
test/posts.js: line 1105, col 13, 'it' is not defined.
test/posts.js: line 1120, col 13, 'it' is not defined.
test/posts.js: line 1135, col 13, 'it' is not defined.
test/posts.js: line 1159, col 13, 'it' is not defined.
test/posts.js: line 1175, col 13, 'it' is not defined.
test/posts.js: line 1187, col 13, 'it' is not defined.
test/posts.js: line 1212, col 5, 'it' is not defined.
test/posts.js: line 732, col 30, 'global' is not defined.
test/posts.js: line 733, col 13, 'global' is not defined.
test/posts.js: line 742, col 21, 'global' is not defined.
test/posts.js: line 958, col 9, 'after' is not defined.
test/posts.js: line 1209, col 46, '__dirname' is not defined.

test/pubsub.js: line 1, col 1, Use the function form of "use strict".
test/pubsub.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/pubsub.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/pubsub.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/pubsub.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/pubsub.js: line 9, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/pubsub.js: line 10, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/pubsub.js: line 13, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/pubsub.js: line 21, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/pubsub.js: line 22, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/pubsub.js: line 31, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/pubsub.js: line 32, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/pubsub.js: line 34, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/pubsub.js: line 43, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/pubsub.js: line 44, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/pubsub.js: line 45, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/pubsub.js: line 3, col 16, 'require' is not defined.
test/pubsub.js: line 4, col 15, 'require' is not defined.
test/pubsub.js: line 6, col 12, 'require' is not defined.
test/pubsub.js: line 7, col 16, 'require' is not defined.
test/pubsub.js: line 9, col 1, 'describe' is not defined.
test/pubsub.js: line 10, col 5, 'it' is not defined.
test/pubsub.js: line 21, col 5, 'it' is not defined.
test/pubsub.js: line 31, col 5, 'it' is not defined.
test/pubsub.js: line 43, col 5, 'it' is not defined.

test/rewards.js: line 1, col 1, Use the function form of "use strict".
test/rewards.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/rewards.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/rewards.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/rewards.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/rewards.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/rewards.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/rewards.js: line 11, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/rewards.js: line 12, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/rewards.js: line 13, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/rewards.js: line 14, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/rewards.js: line 16, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/rewards.js: line 22, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/rewards.js: line 42, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/rewards.js: line 43, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/rewards.js: line 44, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/rewards.js: line 45, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/rewards.js: line 46, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/rewards.js: line 59, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/rewards.js: line 65, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/rewards.js: line 73, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/rewards.js: line 3, col 16, 'require' is not defined.
test/rewards.js: line 4, col 15, 'require' is not defined.
test/rewards.js: line 6, col 12, 'require' is not defined.
test/rewards.js: line 7, col 14, 'require' is not defined.
test/rewards.js: line 8, col 14, 'require' is not defined.
test/rewards.js: line 9, col 16, 'require' is not defined.
test/rewards.js: line 43, col 29, 'require' is not defined.
test/rewards.js: line 44, col 25, 'require' is not defined.
test/rewards.js: line 11, col 1, 'describe' is not defined.
test/rewards.js: line 42, col 5, 'describe' is not defined.
test/rewards.js: line 16, col 5, 'before' is not defined.
test/rewards.js: line 45, col 9, 'it' is not defined.
test/rewards.js: line 65, col 9, 'it' is not defined.

test/search-admin.js: line 1, col 1, Use the function form of "use strict".
test/search-admin.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search-admin.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search-admin.js: line 7, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search-admin.js: line 8, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search-admin.js: line 9, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search-admin.js: line 17, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search-admin.js: line 26, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search-admin.js: line 35, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search-admin.js: line 46, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search-admin.js: line 47, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search-admin.js: line 56, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search-admin.js: line 67, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search-admin.js: line 68, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search-admin.js: line 77, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search-admin.js: line 4, col 16, 'require' is not defined.
test/search-admin.js: line 5, col 16, 'require' is not defined.
test/search-admin.js: line 7, col 1, 'describe' is not defined.
test/search-admin.js: line 8, col 5, 'describe' is not defined.
test/search-admin.js: line 46, col 5, 'describe' is not defined.
test/search-admin.js: line 67, col 5, 'describe' is not defined.
test/search-admin.js: line 9, col 9, 'it' is not defined.
test/search-admin.js: line 17, col 9, 'it' is not defined.
test/search-admin.js: line 26, col 9, 'it' is not defined.
test/search-admin.js: line 35, col 9, 'it' is not defined.
test/search-admin.js: line 47, col 9, 'it' is not defined.
test/search-admin.js: line 56, col 9, 'it' is not defined.
test/search-admin.js: line 68, col 9, 'it' is not defined.
test/search-admin.js: line 77, col 9, 'it' is not defined.

test/search.js: line 1, col 1, Use the function form of "use strict".
test/search.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 15, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 16, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 17, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 19, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 20, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 21, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 22, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 23, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 24, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 25, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 26, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 28, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/search.js: line 28, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 47, col 10, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 55, col 10, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 69, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/search.js: line 69, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 70, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 71, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 71, col 20, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/search.js: line 74, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 74, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 84, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 88, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 99, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 103, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 114, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/search.js: line 114, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 123, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 131, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/search.js: line 131, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 132, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 133, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 139, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 143, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 149, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 154, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 161, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 166, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 172, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 176, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 184, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/search.js: line 184, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 191, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 204, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/search.js: line 204, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 205, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 208, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 208, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 219, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/search.js: line 219, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/search.js: line 220, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 222, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 222, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/search.js: line 4, col 16, 'require' is not defined.
test/search.js: line 5, col 15, 'require' is not defined.
test/search.js: line 7, col 12, 'require' is not defined.
test/search.js: line 8, col 16, 'require' is not defined.
test/search.js: line 9, col 20, 'require' is not defined.
test/search.js: line 10, col 14, 'require' is not defined.
test/search.js: line 11, col 16, 'require' is not defined.
test/search.js: line 12, col 20, 'require' is not defined.
test/search.js: line 13, col 17, 'require' is not defined.
test/search.js: line 70, col 22, 'require' is not defined.
test/search.js: line 132, col 34, 'require' is not defined.
test/search.js: line 15, col 1, 'describe' is not defined.
test/search.js: line 28, col 5, 'before' is not defined.
test/search.js: line 69, col 5, 'it' is not defined.
test/search.js: line 84, col 5, 'it' is not defined.
test/search.js: line 99, col 5, 'it' is not defined.
test/search.js: line 114, col 5, 'it' is not defined.
test/search.js: line 131, col 5, 'it' is not defined.
test/search.js: line 139, col 5, 'it' is not defined.
test/search.js: line 149, col 5, 'it' is not defined.
test/search.js: line 161, col 5, 'it' is not defined.
test/search.js: line 172, col 5, 'it' is not defined.
test/search.js: line 184, col 5, 'it' is not defined.
test/search.js: line 204, col 5, 'it' is not defined.
test/search.js: line 219, col 5, 'it' is not defined.

test/settings.js: line 1, col 1, Use the function form of "use strict".
test/settings.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/settings.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/settings.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/settings.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/settings.js: line 9, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/settings.js: line 10, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/settings.js: line 11, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/settings.js: line 13, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/settings.js: line 17, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/settings.js: line 23, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/settings.js: line 27, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/settings.js: line 29, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/settings.js: line 32, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/settings.js: line 39, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/settings.js: line 45, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/settings.js: line 46, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/settings.js: line 54, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/settings.js: line 55, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/settings.js: line 3, col 16, 'require' is not defined.
test/settings.js: line 4, col 15, 'require' is not defined.
test/settings.js: line 6, col 12, 'require' is not defined.
test/settings.js: line 7, col 18, 'require' is not defined.
test/settings.js: line 9, col 1, 'describe' is not defined.
test/settings.js: line 13, col 5, 'it' is not defined.
test/settings.js: line 17, col 5, 'it' is not defined.
test/settings.js: line 23, col 5, 'it' is not defined.
test/settings.js: line 27, col 5, 'it' is not defined.
test/settings.js: line 39, col 5, 'it' is not defined.
test/settings.js: line 45, col 5, 'it' is not defined.
test/settings.js: line 54, col 5, 'it' is not defined.
test/settings.js: line 32, col 13, 'setTimeout' is not defined.

test/socket.io.js: line 1, col 1, Use the function form of "use strict".
test/socket.io.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 18, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 19, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 20, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 22, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 24, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 25, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 26, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 27, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 28, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 29, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 31, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 31, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 32, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 51, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 51, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 52, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 52, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 58, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 59, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 66, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 67, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 74, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 75, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 82, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 83, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 84, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 87, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 87, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 88, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 95, col 29, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 95, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 96, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 98, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 106, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 107, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 114, col 31, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 114, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 115, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 117, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 121, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 122, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 124, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 132, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 133, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 135, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 143, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 144, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 145, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 146, col 36, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 146, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 147, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 149, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 153, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 153, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 154, col 56, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 156, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 160, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 160, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 161, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 170, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 170, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 171, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 174, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 178, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 178, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 179, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 189, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 189, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 190, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 190, col 9, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 195, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 196, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 202, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 203, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 205, col 9, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 208, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 215, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 219, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 220, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 222, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 230, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 231, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 237, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 238, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 245, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 246, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 247, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 254, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 255, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 261, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 262, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 263, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 269, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 270, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 276, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 277, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 283, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 284, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 291, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 292, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 298, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 299, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 307, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 308, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 316, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 317, col 100, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 328, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 329, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 335, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 336, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 338, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 340, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 341, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 355, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 356, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 358, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 360, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 361, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 371, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 372, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 382, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 383, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 387, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 392, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 393, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 399, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 404, col 16, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 406, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 415, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 416, col 102, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 418, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 426, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 427, col 104, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 434, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 437, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 444, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 454, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 461, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 469, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 470, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 477, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 478, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 484, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 486, col 84, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 494, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 495, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 501, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 502, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 509, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 511, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 520, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 520, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 524, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 524, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 525, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 527, col 18, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 527, col 28, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 538, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 538, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 543, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 543, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 544, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 554, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 555, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 556, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 558, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 561, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 569, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 570, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 572, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 580, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 581, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 583, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 591, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 592, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 594, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 596, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 605, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 606, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 608, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 616, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 617, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 618, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 619, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 620, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 622, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 625, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 627, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 628, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 630, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 639, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 646, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 647, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 649, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 650, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 656, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 657, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 663, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 663, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 669, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 670, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 676, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 676, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 677, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 678, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 680, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 681, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 686, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 686, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 688, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 688, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 696, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 701, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 701, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 704, col 60, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 706, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 706, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 714, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 719, col 79, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 719, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 721, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 725, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 726, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 734, col 31, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 734, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 741, col 32, 'async functions' is only available in ES8 (use 'esversion: 8').
test/socket.io.js: line 741, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/socket.io.js: line 742, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/socket.io.js: line 6, col 1, 'process' is not defined.
test/socket.io.js: line 437, col 30, 'process' is not defined.
test/socket.io.js: line 438, col 13, 'process' is not defined.
test/socket.io.js: line 447, col 17, 'process' is not defined.
test/socket.io.js: line 454, col 30, 'process' is not defined.
test/socket.io.js: line 455, col 13, 'process' is not defined.
test/socket.io.js: line 463, col 17, 'process' is not defined.
test/socket.io.js: line 8, col 14, 'require' is not defined.
test/socket.io.js: line 11, col 16, 'require' is not defined.
test/socket.io.js: line 12, col 15, 'require' is not defined.
test/socket.io.js: line 14, col 12, 'require' is not defined.
test/socket.io.js: line 15, col 14, 'require' is not defined.
test/socket.io.js: line 16, col 16, 'require' is not defined.
test/socket.io.js: line 17, col 20, 'require' is not defined.
test/socket.io.js: line 18, col 17, 'require' is not defined.
test/socket.io.js: line 19, col 14, 'require' is not defined.
test/socket.io.js: line 20, col 16, 'require' is not defined.
test/socket.io.js: line 22, col 21, 'require' is not defined.
test/socket.io.js: line 96, col 25, 'require' is not defined.
test/socket.io.js: line 115, col 25, 'require' is not defined.
test/socket.io.js: line 145, col 26, 'require' is not defined.
test/socket.io.js: line 203, col 25, 'require' is not defined.
test/socket.io.js: line 246, col 28, 'require' is not defined.
test/socket.io.js: line 262, col 28, 'require' is not defined.
test/socket.io.js: line 555, col 20, 'require' is not defined.
test/socket.io.js: line 556, col 22, 'require' is not defined.
test/socket.io.js: line 617, col 24, 'require' is not defined.
test/socket.io.js: line 618, col 23, 'require' is not defined.
test/socket.io.js: line 619, col 20, 'require' is not defined.
test/socket.io.js: line 620, col 22, 'require' is not defined.
test/socket.io.js: line 647, col 28, 'require' is not defined.
test/socket.io.js: line 743, col 19, 'require' is not defined.
test/socket.io.js: line 744, col 21, 'require' is not defined.
test/socket.io.js: line 745, col 20, 'require' is not defined.
test/socket.io.js: line 746, col 20, 'require' is not defined.
test/socket.io.js: line 10, col 30, 'setTimeout' is not defined.
test/socket.io.js: line 340, col 17, 'setTimeout' is not defined.
test/socket.io.js: line 360, col 17, 'setTimeout' is not defined.
test/socket.io.js: line 627, col 13, 'setTimeout' is not defined.
test/socket.io.js: line 681, col 42, 'setTimeout' is not defined.
test/socket.io.js: line 24, col 1, 'describe' is not defined.
test/socket.io.js: line 143, col 5, 'describe' is not defined.
test/socket.io.js: line 202, col 5, 'describe' is not defined.
test/socket.io.js: line 434, col 5, 'describe' is not defined.
test/socket.io.js: line 616, col 5, 'describe' is not defined.
test/socket.io.js: line 646, col 5, 'describe' is not defined.
test/socket.io.js: line 31, col 5, 'before' is not defined.
test/socket.io.js: line 208, col 9, 'before' is not defined.
test/socket.io.js: line 32, col 28, 'Promise' is not defined.
test/socket.io.js: line 688, col 47, 'Promise' is not defined.
test/socket.io.js: line 706, col 47, 'Promise' is not defined.
test/socket.io.js: line 51, col 5, 'it' is not defined.
test/socket.io.js: line 58, col 5, 'it' is not defined.
test/socket.io.js: line 66, col 5, 'it' is not defined.
test/socket.io.js: line 74, col 5, 'it' is not defined.
test/socket.io.js: line 82, col 5, 'it' is not defined.
test/socket.io.js: line 95, col 5, 'it' is not defined.
test/socket.io.js: line 106, col 5, 'it' is not defined.
test/socket.io.js: line 114, col 5, 'it' is not defined.
test/socket.io.js: line 121, col 5, 'it' is not defined.
test/socket.io.js: line 132, col 5, 'it' is not defined.
test/socket.io.js: line 146, col 9, 'it' is not defined.
test/socket.io.js: line 153, col 9, 'it' is not defined.
test/socket.io.js: line 160, col 9, 'it' is not defined.
test/socket.io.js: line 170, col 9, 'it' is not defined.
test/socket.io.js: line 178, col 9, 'it' is not defined.
test/socket.io.js: line 189, col 5, 'it' is not defined.
test/socket.io.js: line 195, col 5, 'it' is not defined.
test/socket.io.js: line 219, col 9, 'it' is not defined.
test/socket.io.js: line 230, col 9, 'it' is not defined.
test/socket.io.js: line 237, col 9, 'it' is not defined.
test/socket.io.js: line 245, col 5, 'it' is not defined.
test/socket.io.js: line 254, col 5, 'it' is not defined.
test/socket.io.js: line 261, col 5, 'it' is not defined.
test/socket.io.js: line 269, col 5, 'it' is not defined.
test/socket.io.js: line 276, col 5, 'it' is not defined.
test/socket.io.js: line 283, col 5, 'it' is not defined.
test/socket.io.js: line 291, col 5, 'it' is not defined.
test/socket.io.js: line 298, col 5, 'it' is not defined.
test/socket.io.js: line 307, col 5, 'it' is not defined.
test/socket.io.js: line 316, col 5, 'it' is not defined.
test/socket.io.js: line 328, col 5, 'it' is not defined.
test/socket.io.js: line 335, col 5, 'it' is not defined.
test/socket.io.js: line 355, col 5, 'it' is not defined.
test/socket.io.js: line 371, col 5, 'it' is not defined.
test/socket.io.js: line 382, col 5, 'it' is not defined.
test/socket.io.js: line 392, col 5, 'it' is not defined.
test/socket.io.js: line 399, col 5, 'it' is not defined.
test/socket.io.js: line 415, col 5, 'it' is not defined.
test/socket.io.js: line 426, col 5, 'it' is not defined.
test/socket.io.js: line 435, col 9, 'it' is not defined.
test/socket.io.js: line 452, col 9, 'it' is not defined.
test/socket.io.js: line 469, col 5, 'it' is not defined.
test/socket.io.js: line 477, col 5, 'it' is not defined.
test/socket.io.js: line 494, col 5, 'it' is not defined.
test/socket.io.js: line 501, col 5, 'it' is not defined.
test/socket.io.js: line 520, col 5, 'it' is not defined.
test/socket.io.js: line 524, col 5, 'it' is not defined.
test/socket.io.js: line 538, col 5, 'it' is not defined.
test/socket.io.js: line 543, col 5, 'it' is not defined.
test/socket.io.js: line 554, col 5, 'it' is not defined.
test/socket.io.js: line 569, col 5, 'it' is not defined.
test/socket.io.js: line 580, col 5, 'it' is not defined.
test/socket.io.js: line 591, col 5, 'it' is not defined.
test/socket.io.js: line 605, col 5, 'it' is not defined.
test/socket.io.js: line 622, col 9, 'it' is not defined.
test/socket.io.js: line 649, col 9, 'it' is not defined.
test/socket.io.js: line 656, col 9, 'it' is not defined.
test/socket.io.js: line 663, col 9, 'it' is not defined.
test/socket.io.js: line 669, col 9, 'it' is not defined.
test/socket.io.js: line 676, col 9, 'it' is not defined.
test/socket.io.js: line 686, col 9, 'it' is not defined.
test/socket.io.js: line 701, col 9, 'it' is not defined.
test/socket.io.js: line 719, col 9, 'it' is not defined.
test/socket.io.js: line 725, col 9, 'it' is not defined.
test/socket.io.js: line 734, col 5, 'it' is not defined.
test/socket.io.js: line 741, col 5, 'it' is not defined.
test/socket.io.js: line 215, col 9, 'after' is not defined.
test/socket.io.js: line 639, col 9, 'after' is not defined.
test/socket.io.js: line 625, col 42, '__dirname' is not defined.

test/template-helpers.js: line 1, col 1, Use the function form of "use strict".
test/template-helpers.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 9, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 10, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 11, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 16, col 99, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 17, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 29, col 97, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 30, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 42, col 101, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 43, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 55, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 56, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 61, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 62, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 67, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 72, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 73, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 79, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 84, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 85, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 88, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 93, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 94, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 104, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 105, col 28, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 109, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 110, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 115, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 116, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 121, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 122, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 127, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 128, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 133, col 106, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 134, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 139, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 140, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 145, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 146, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 150, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 154, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 155, col 28, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 171, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 172, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 173, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 174, col 28, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 178, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 179, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 180, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 181, col 28, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 185, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 186, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 187, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 188, col 28, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 192, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 193, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 194, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 195, col 28, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 199, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 200, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 201, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 202, col 28, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 206, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 207, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 208, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 209, col 28, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 213, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 214, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 219, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 220, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 225, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 226, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 231, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 232, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 237, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 238, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 243, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 244, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 249, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/template-helpers.js: line 250, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/template-helpers.js: line 3, col 15, 'require' is not defined.
test/template-helpers.js: line 4, col 16, 'require' is not defined.
test/template-helpers.js: line 6, col 12, 'require' is not defined.
test/template-helpers.js: line 7, col 17, 'require' is not defined.
test/template-helpers.js: line 9, col 1, 'describe' is not defined.
test/template-helpers.js: line 10, col 5, 'it' is not defined.
test/template-helpers.js: line 16, col 5, 'it' is not defined.
test/template-helpers.js: line 29, col 5, 'it' is not defined.
test/template-helpers.js: line 42, col 5, 'it' is not defined.
test/template-helpers.js: line 55, col 5, 'it' is not defined.
test/template-helpers.js: line 61, col 5, 'it' is not defined.
test/template-helpers.js: line 67, col 5, 'it' is not defined.
test/template-helpers.js: line 72, col 5, 'it' is not defined.
test/template-helpers.js: line 84, col 5, 'it' is not defined.
test/template-helpers.js: line 93, col 5, 'it' is not defined.
test/template-helpers.js: line 109, col 5, 'it' is not defined.
test/template-helpers.js: line 115, col 5, 'it' is not defined.
test/template-helpers.js: line 121, col 5, 'it' is not defined.
test/template-helpers.js: line 127, col 5, 'it' is not defined.
test/template-helpers.js: line 133, col 5, 'it' is not defined.
test/template-helpers.js: line 139, col 5, 'it' is not defined.
test/template-helpers.js: line 145, col 5, 'it' is not defined.
test/template-helpers.js: line 171, col 5, 'it' is not defined.
test/template-helpers.js: line 178, col 5, 'it' is not defined.
test/template-helpers.js: line 185, col 5, 'it' is not defined.
test/template-helpers.js: line 192, col 5, 'it' is not defined.
test/template-helpers.js: line 199, col 5, 'it' is not defined.
test/template-helpers.js: line 206, col 5, 'it' is not defined.
test/template-helpers.js: line 213, col 5, 'it' is not defined.
test/template-helpers.js: line 219, col 5, 'it' is not defined.
test/template-helpers.js: line 225, col 5, 'it' is not defined.
test/template-helpers.js: line 231, col 5, 'it' is not defined.
test/template-helpers.js: line 237, col 5, 'it' is not defined.
test/template-helpers.js: line 243, col 5, 'it' is not defined.
test/template-helpers.js: line 249, col 5, 'it' is not defined.

test/tokens.js: line 1, col 1, Use the function form of "use strict".
test/tokens.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 11, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 12, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 14, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 14, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 19, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 20, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 20, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 22, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 31, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 32, col 76, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 32, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 36, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 36, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 37, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 38, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 38, col 61, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 39, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 46, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 47, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 47, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 48, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 54, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 54, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 55, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 56, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 59, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 65, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 65, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 69, col 91, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 69, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 70, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 70, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 76, col 102, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 76, col 109, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 77, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 79, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 79, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 86, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 87, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 87, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 88, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 89, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 92, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 93, col 50, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 98, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 99, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 99, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 101, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 108, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 108, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 110, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 111, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 120, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 121, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 121, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 122, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 125, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 130, col 73, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 130, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 132, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 133, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 140, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 141, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 141, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 144, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 145, col 56, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 146, col 56, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 147, col 56, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 151, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 152, col 82, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 152, col 89, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 155, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 159, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 160, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 160, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 162, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 168, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 168, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 169, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/tokens.js: line 175, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
test/tokens.js: line 175, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/tokens.js: line 3, col 16, 'require' is not defined.
test/tokens.js: line 4, col 15, 'require' is not defined.
test/tokens.js: line 6, col 12, 'require' is not defined.
test/tokens.js: line 7, col 13, 'require' is not defined.
test/tokens.js: line 8, col 14, 'require' is not defined.
test/tokens.js: line 9, col 15, 'require' is not defined.
test/tokens.js: line 11, col 1, 'describe' is not defined.
test/tokens.js: line 19, col 5, 'describe' is not defined.
test/tokens.js: line 31, col 5, 'describe' is not defined.
test/tokens.js: line 46, col 5, 'describe' is not defined.
test/tokens.js: line 86, col 5, 'describe' is not defined.
test/tokens.js: line 98, col 5, 'describe' is not defined.
test/tokens.js: line 120, col 5, 'describe' is not defined.
test/tokens.js: line 140, col 5, 'describe' is not defined.
test/tokens.js: line 151, col 5, 'describe' is not defined.
test/tokens.js: line 159, col 5, 'describe' is not defined.
test/tokens.js: line 14, col 5, 'beforeEach' is not defined.
test/tokens.js: line 20, col 9, 'it' is not defined.
test/tokens.js: line 32, col 9, 'it' is not defined.
test/tokens.js: line 36, col 9, 'it' is not defined.
test/tokens.js: line 47, col 9, 'it' is not defined.
test/tokens.js: line 54, col 9, 'it' is not defined.
test/tokens.js: line 65, col 9, 'it' is not defined.
test/tokens.js: line 69, col 9, 'it' is not defined.
test/tokens.js: line 76, col 9, 'it' is not defined.
test/tokens.js: line 87, col 9, 'it' is not defined.
test/tokens.js: line 99, col 9, 'it' is not defined.
test/tokens.js: line 108, col 9, 'it' is not defined.
test/tokens.js: line 121, col 9, 'it' is not defined.
test/tokens.js: line 130, col 9, 'it' is not defined.
test/tokens.js: line 141, col 9, 'it' is not defined.
test/tokens.js: line 152, col 9, 'it' is not defined.
test/tokens.js: line 160, col 9, 'it' is not defined.
test/tokens.js: line 168, col 9, 'it' is not defined.
test/tokens.js: line 175, col 5, 'afterEach' is not defined.

test/topics.js: line 1, col 1, Use the function form of "use strict".
test/topics.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 18, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 19, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 20, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 21, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 22, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 23, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 24, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 25, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 26, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 28, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 29, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 30, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 31, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 32, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 33, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 34, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 36, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 36, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 40, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 56, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 57, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 57, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 66, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 72, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 80, col 37, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 80, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 81, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 85, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 85, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 91, col 33, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 91, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 92, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 96, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 97, col 111, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 103, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 104, col 104, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 110, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 111, col 102, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 117, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 118, col 105, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 124, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 125, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 132, col 76, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 132, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 133, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 139, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 139, col 47, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 153, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 153, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 154, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 158, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 159, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 159, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 170, col 74, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 170, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 171, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 178, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 179, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 179, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 193, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 193, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 203, col 92, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 203, col 99, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 204, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 210, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 212, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 212, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 227, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 227, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 241, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 242, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 243, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 245, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 251, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 262, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 263, col 102, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 271, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 271, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 272, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 275, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 282, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 282, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 289, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 290, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 296, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 297, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 303, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 304, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 310, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 311, col 129, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 317, col 79, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 317, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 318, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 318, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 332, col 109, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 332, col 116, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 333, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 333, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 340, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 343, col 32, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 348, col 110, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 348, col 117, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 349, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 349, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 356, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 358, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 358, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 362, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 362, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 363, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 364, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 365, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 366, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 369, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 379, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 380, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 381, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 383, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 389, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 401, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 402, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 422, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 423, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 431, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 432, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 439, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 440, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 447, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 448, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 449, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 449, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 450, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 452, col 22, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 454, col 66, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 458, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 458, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 459, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 460, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 460, col 72, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 469, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 469, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 470, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 471, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 471, col 72, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 476, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 481, col 73, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 481, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 482, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 483, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 484, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 484, col 72, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 489, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 494, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 494, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 495, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 496, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 496, col 72, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 501, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 506, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 506, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 507, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 508, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 509, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 509, col 72, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 514, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 519, col 72, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 519, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 520, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 521, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 522, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 522, col 72, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 527, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 532, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 532, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 533, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 534, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 535, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 535, col 72, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 540, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 545, col 68, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 545, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 546, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 547, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 547, col 72, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 552, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 557, col 100, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 557, col 107, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 558, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 559, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 559, col 72, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 564, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 569, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 569, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 570, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 570, col 64, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 574, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 574, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 575, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 576, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 576, col 73, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 581, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 581, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 582, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 583, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 583, col 73, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 588, col 59, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 588, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 589, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 590, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 590, col 73, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 596, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 596, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 597, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 603, col 77, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 603, col 84, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 604, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 610, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 610, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 611, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 612, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 612, col 73, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 615, col 22, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 616, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 622, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 623, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 624, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 625, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 626, col 121, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 628, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 638, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 639, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 640, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 641, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 643, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 643, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 644, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 653, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 659, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 660, col 93, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 667, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 667, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 669, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 673, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 673, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 675, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 679, col 33, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 679, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 681, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 685, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 685, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 687, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 691, col 32, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 691, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 693, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 697, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 697, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 699, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 703, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 704, col 104, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 706, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 714, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 715, col 102, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 717, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 725, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 725, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 726, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 727, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 731, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 732, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 732, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 733, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 734, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 735, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 737, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 737, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 738, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 739, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 741, col 13, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 742, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 742, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 745, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 746, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 747, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 750, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 751, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 752, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 754, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 755, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 757, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 757, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 770, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 770, col 59, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 770, col 79, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 773, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 781, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 781, col 75, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 789, col 74, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 789, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 790, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 796, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 797, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 810, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 810, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 812, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 812, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 816, col 90, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 816, col 97, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 817, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 833, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 834, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 835, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 836, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 837, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 837, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 838, col 13, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 855, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 856, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 857, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 863, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 864, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 870, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 871, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 877, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 878, col 92, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 880, col 38, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 880, col 97, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 888, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 889, col 37, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 889, col 99, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 893, col 96, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 895, col 45, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 895, col 107, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 907, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 908, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 909, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 910, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 911, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 911, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 913, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 919, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 919, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 921, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 921, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 922, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 922, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 926, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 926, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 928, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 935, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 935, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 936, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 937, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 947, col 70, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 947, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 950, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 951, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 951, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 956, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 957, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 958, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 959, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 960, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 961, col 9, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 962, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 962, col 77, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 967, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 967, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 969, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 975, col 18, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 979, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 983, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 984, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 990, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 995, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 996, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1002, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1003, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1009, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1009, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1015, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1019, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1019, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1024, col 29, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1026, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1030, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1030, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1031, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1032, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1033, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1034, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1038, col 56, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1039, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1042, col 56, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1047, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1048, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1050, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1057, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1065, col 33, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1065, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1066, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1066, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1066, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1071, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1071, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1072, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1072, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1072, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1074, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1075, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1078, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1078, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1079, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1079, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1079, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1083, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1083, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1084, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1084, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1084, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1088, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1088, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1089, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1092, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1092, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1092, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1098, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1098, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1099, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1099, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1099, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1104, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1104, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1105, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1105, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1105, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1107, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1108, col 32, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1111, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1111, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1112, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1114, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1114, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1114, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1118, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1118, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1119, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1119, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1119, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1123, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1127, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1127, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1128, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1128, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1128, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1132, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1132, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1133, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1133, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1133, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1138, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1138, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1139, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1139, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1139, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1150, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1150, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1151, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1151, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1151, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1155, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1155, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1156, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1156, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1156, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1160, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1160, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1161, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1161, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1161, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1178, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1179, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1180, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1181, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1187, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1194, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1195, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1201, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1202, col 99, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1211, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1212, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1213, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1214, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1214, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1215, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1216, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1217, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1222, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1223, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1230, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1231, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1239, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1240, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1241, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1242, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1243, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1243, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1244, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1244, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1249, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1249, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1256, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1256, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1263, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1263, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1264, col 61, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1265, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1269, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1270, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1276, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1277, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1279, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1287, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1288, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1294, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1294, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1296, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1298, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1305, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1306, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1312, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1313, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1315, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1317, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1326, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1327, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1329, col 94, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1331, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1340, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1340, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1347, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1347, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1354, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1354, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1356, col 48, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1361, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1361, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1362, col 55, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1363, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1364, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1370, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1371, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1378, col 66, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1378, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1379, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1379, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1385, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1385, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1386, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1388, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1392, col 77, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1392, col 84, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1393, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1397, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1400, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1400, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1401, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1401, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1404, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1408, col 82, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1408, col 89, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1409, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1409, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1410, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1414, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1419, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1419, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1420, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1421, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1423, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1428, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1429, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1430, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1432, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1432, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1437, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1438, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1445, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1446, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1448, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1455, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1456, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1463, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1464, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1466, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1473, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1474, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1483, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1484, col 90, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1488, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1500, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1501, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1507, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1508, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1516, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1517, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1523, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1524, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1530, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1531, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1537, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1538, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1540, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1548, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1549, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1551, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1560, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1560, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1561, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1562, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1563, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1570, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1572, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1574, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1579, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1580, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1582, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1585, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1594, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1595, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1601, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1602, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1608, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1609, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1611, col 125, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1613, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1623, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1623, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1624, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1626, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1627, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1627, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1631, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1632, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1634, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1642, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1642, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1643, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1644, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1644, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1646, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1655, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1655, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1656, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1657, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1657, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1658, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1659, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1659, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1661, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1662, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1679, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1679, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1680, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1682, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1688, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1692, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1692, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1693, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1695, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1701, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1705, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1705, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1706, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1708, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1714, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1715, col 40, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1718, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1718, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1719, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1721, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1727, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1728, col 40, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1731, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1731, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1732, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1733, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1733, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1734, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1735, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1738, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1754, col 83, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1754, col 90, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1755, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1756, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1757, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1758, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1760, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1761, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1766, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1767, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1790, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1790, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1791, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1793, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1809, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1809, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1810, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1812, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1823, col 89, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1823, col 96, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1824, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1826, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1845, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1851, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1852, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1853, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1854, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1855, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1856, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1861, col 130, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1871, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1871, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1880, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1880, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1882, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1887, col 59, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1887, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1896, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1897, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1900, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1909, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1910, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1910, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1919, col 37, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1919, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1920, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1927, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1932, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1933, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1940, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1941, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1941, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1948, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1948, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1949, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1950, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1951, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1955, col 57, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1955, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1956, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1959, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1963, col 76, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1963, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1964, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1965, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1968, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1976, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1977, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1978, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 1979, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 1979, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1984, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1990, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1991, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1998, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 1999, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2006, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2008, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2020, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2021, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2033, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2035, col 112, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2038, col 89, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2049, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2050, col 99, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2058, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2059, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2066, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2067, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2075, col 59, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2075, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2076, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2079, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2085, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2086, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2087, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2088, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2088, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2090, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2094, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2095, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2097, col 129, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2104, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2105, col 117, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2107, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2107, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2108, col 99, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2115, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2116, col 92, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2118, col 137, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2120, col 135, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2122, col 25, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2122, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2132, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2133, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2134, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2135, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2137, col 9, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2138, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2139, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2142, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2142, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2144, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2152, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2153, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2159, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2160, col 92, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2166, col 37, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2166, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2171, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2171, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2187, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2187, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2188, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2188, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2188, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2194, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2194, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2195, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2196, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2206, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2206, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2222, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2222, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2223, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2224, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2227, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2234, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2234, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2254, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2255, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2256, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2256, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2258, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2259, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2264, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2264, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2265, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2266, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2267, col 17, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2267, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2277, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2282, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2282, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2283, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2294, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2294, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2295, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2307, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2308, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2309, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2310, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2311, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2312, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2313, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2319, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2319, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2339, col 134, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2339, col 141, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2347, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2350, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2351, col 17, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2352, col 17, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2353, col 17, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2358, col 71, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2358, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2360, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2364, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2364, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2365, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2365, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2365, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2370, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2370, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2371, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2371, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2371, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2376, col 85, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2376, col 92, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2377, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2377, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2377, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2378, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2381, col 78, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2381, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2382, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2382, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2382, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2383, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2383, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2387, col 66, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2387, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2389, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2389, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2389, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2394, col 89, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2394, col 96, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2395, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2395, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2395, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2396, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2396, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2400, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2400, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2401, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2401, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2401, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2405, col 59, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2405, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2406, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2406, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2406, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2410, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2410, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2411, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2411, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2411, col 52, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2415, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2415, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2418, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2418, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2418, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2422, col 66, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2422, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2424, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2424, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2424, col 60, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2425, col 17, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2425, col 20, 'object spread property' is only available in ES9 (use 'esversion: 9').
test/topics.js: line 2432, col 91, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2432, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2433, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2433, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2433, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2438, col 79, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2438, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2439, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2439, col 32, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2439, col 35, 'object spread property' is only available in ES9 (use 'esversion: 9').
test/topics.js: line 2440, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2440, col 46, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2443, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2443, col 51, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2444, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2444, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2449, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2449, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2450, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2451, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2451, col 32, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2451, col 35, 'object spread property' is only available in ES9 (use 'esversion: 9').
test/topics.js: line 2451, col 57, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2451, col 60, 'object spread property' is only available in ES9 (use 'esversion: 9').
test/topics.js: line 2452, col 31, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2454, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2455, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2459, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2461, col 17, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2463, col 17, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2465, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2468, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2468, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2469, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2478, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2482, col 73, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2482, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2483, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2488, col 66, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2488, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2489, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2490, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2490, col 32, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2490, col 35, 'object spread property' is only available in ES9 (use 'esversion: 9').
test/topics.js: line 2490, col 57, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2490, col 60, 'object spread property' is only available in ES9 (use 'esversion: 9').
test/topics.js: line 2491, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2491, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2491, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2496, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2496, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2498, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2498, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2498, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2502, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2502, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2503, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2509, col 22, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2509, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2510, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/topics.js: line 2512, col 12, 'async functions' is only available in ES8 (use 'esversion: 8').
test/topics.js: line 2512, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2516, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 2517, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/topics.js: line 3, col 14, 'require' is not defined.
test/topics.js: line 4, col 16, 'require' is not defined.
test/topics.js: line 5, col 19, 'require' is not defined.
test/topics.js: line 6, col 18, 'require' is not defined.
test/topics.js: line 7, col 15, 'require' is not defined.
test/topics.js: line 8, col 14, 'require' is not defined.
test/topics.js: line 12, col 12, 'require' is not defined.
test/topics.js: line 13, col 14, 'require' is not defined.
test/topics.js: line 14, col 16, 'require' is not defined.
test/topics.js: line 15, col 15, 'require' is not defined.
test/topics.js: line 16, col 20, 'require' is not defined.
test/topics.js: line 17, col 20, 'require' is not defined.
test/topics.js: line 18, col 14, 'require' is not defined.
test/topics.js: line 19, col 14, 'require' is not defined.
test/topics.js: line 20, col 16, 'require' is not defined.
test/topics.js: line 21, col 15, 'require' is not defined.
test/topics.js: line 22, col 17, 'require' is not defined.
test/topics.js: line 23, col 22, 'require' is not defined.
test/topics.js: line 24, col 19, 'require' is not defined.
test/topics.js: line 25, col 18, 'require' is not defined.
test/topics.js: line 26, col 17, 'require' is not defined.
test/topics.js: line 855, col 30, 'require' is not defined.
test/topics.js: line 1089, col 32, 'require' is not defined.
test/topics.js: line 1112, col 26, 'require' is not defined.
test/topics.js: line 1179, col 30, 'require' is not defined.
test/topics.js: line 1240, col 30, 'require' is not defined.
test/topics.js: line 1429, col 30, 'require' is not defined.
test/topics.js: line 1430, col 29, 'require' is not defined.
test/topics.js: line 1580, col 26, 'require' is not defined.
test/topics.js: line 1852, col 30, 'require' is not defined.
test/topics.js: line 1920, col 29, 'require' is not defined.
test/topics.js: line 2518, col 13, 'require' is not defined.
test/topics.js: line 10, col 30, 'setTimeout' is not defined.
test/topics.js: line 28, col 1, 'describe' is not defined.
test/topics.js: line 56, col 5, 'describe' is not defined.
test/topics.js: line 241, col 5, 'describe' is not defined.
test/topics.js: line 379, col 5, 'describe' is not defined.
test/topics.js: line 447, col 9, 'describe' is not defined.
test/topics.js: line 622, col 5, 'describe' is not defined.
test/topics.js: line 638, col 5, 'describe' is not defined.
test/topics.js: line 833, col 5, 'describe' is not defined.
test/topics.js: line 907, col 5, 'describe' is not defined.
test/topics.js: line 956, col 5, 'describe' is not defined.
test/topics.js: line 1047, col 5, 'describe' is not defined.
test/topics.js: line 1178, col 5, 'describe' is not defined.
test/topics.js: line 1211, col 5, 'describe' is not defined.
test/topics.js: line 1239, col 5, 'describe' is not defined.
test/topics.js: line 1428, col 5, 'describe' is not defined.
test/topics.js: line 1851, col 5, 'describe' is not defined.
test/topics.js: line 1909, col 5, 'describe' is not defined.
test/topics.js: line 1940, col 5, 'describe' is not defined.
test/topics.js: line 1976, col 5, 'describe' is not defined.
test/topics.js: line 2085, col 5, 'describe' is not defined.
test/topics.js: line 2132, col 5, 'describe' is not defined.
test/topics.js: line 2254, col 5, 'describe' is not defined.
test/topics.js: line 2307, col 5, 'describe' is not defined.
test/topics.js: line 2509, col 1, 'describe' is not defined.
test/topics.js: line 36, col 5, 'before' is not defined.
test/topics.js: line 245, col 9, 'before' is not defined.
test/topics.js: line 383, col 9, 'before' is not defined.
test/topics.js: line 449, col 13, 'before' is not defined.
test/topics.js: line 643, col 9, 'before' is not defined.
test/topics.js: line 837, col 9, 'before' is not defined.
test/topics.js: line 911, col 9, 'before' is not defined.
test/topics.js: line 967, col 9, 'before' is not defined.
test/topics.js: line 1050, col 9, 'before' is not defined.
test/topics.js: line 1181, col 9, 'before' is not defined.
test/topics.js: line 1214, col 9, 'before' is not defined.
test/topics.js: line 1243, col 9, 'before' is not defined.
test/topics.js: line 1432, col 9, 'before' is not defined.
test/topics.js: line 1855, col 9, 'before' is not defined.
test/topics.js: line 1979, col 9, 'before' is not defined.
test/topics.js: line 2088, col 9, 'before' is not defined.
test/topics.js: line 2142, col 9, 'before' is not defined.
test/topics.js: line 2256, col 9, 'before' is not defined.
test/topics.js: line 2319, col 9, 'before' is not defined.
test/topics.js: line 2512, col 5, 'before' is not defined.
test/topics.js: line 57, col 9, 'it' is not defined.
test/topics.js: line 66, col 9, 'it' is not defined.
test/topics.js: line 80, col 9, 'it' is not defined.
test/topics.js: line 85, col 9, 'it' is not defined.
test/topics.js: line 91, col 9, 'it' is not defined.
test/topics.js: line 96, col 9, 'it' is not defined.
test/topics.js: line 103, col 9, 'it' is not defined.
test/topics.js: line 110, col 9, 'it' is not defined.
test/topics.js: line 117, col 9, 'it' is not defined.
test/topics.js: line 124, col 9, 'it' is not defined.
test/topics.js: line 132, col 9, 'it' is not defined.
test/topics.js: line 153, col 9, 'it' is not defined.
test/topics.js: line 170, col 9, 'it' is not defined.
test/topics.js: line 203, col 9, 'it' is not defined.
test/topics.js: line 262, col 9, 'it' is not defined.
test/topics.js: line 271, col 9, 'it' is not defined.
test/topics.js: line 282, col 9, 'it' is not defined.
test/topics.js: line 289, col 9, 'it' is not defined.
test/topics.js: line 296, col 9, 'it' is not defined.
test/topics.js: line 303, col 9, 'it' is not defined.
test/topics.js: line 310, col 9, 'it' is not defined.
test/topics.js: line 317, col 9, 'it' is not defined.
test/topics.js: line 332, col 9, 'it' is not defined.
test/topics.js: line 348, col 9, 'it' is not defined.
test/topics.js: line 362, col 9, 'it' is not defined.
test/topics.js: line 401, col 9, 'it' is not defined.
test/topics.js: line 422, col 9, 'it' is not defined.
test/topics.js: line 431, col 9, 'it' is not defined.
test/topics.js: line 439, col 9, 'it' is not defined.
test/topics.js: line 458, col 13, 'it' is not defined.
test/topics.js: line 469, col 13, 'it' is not defined.
test/topics.js: line 481, col 13, 'it' is not defined.
test/topics.js: line 494, col 13, 'it' is not defined.
test/topics.js: line 506, col 13, 'it' is not defined.
test/topics.js: line 519, col 13, 'it' is not defined.
test/topics.js: line 532, col 13, 'it' is not defined.
test/topics.js: line 545, col 13, 'it' is not defined.
test/topics.js: line 557, col 13, 'it' is not defined.
test/topics.js: line 569, col 13, 'it' is not defined.
test/topics.js: line 574, col 13, 'it' is not defined.
test/topics.js: line 581, col 13, 'it' is not defined.
test/topics.js: line 588, col 13, 'it' is not defined.
test/topics.js: line 596, col 13, 'it' is not defined.
test/topics.js: line 603, col 13, 'it' is not defined.
test/topics.js: line 610, col 13, 'it' is not defined.
test/topics.js: line 623, col 9, 'it' is not defined.
test/topics.js: line 659, col 9, 'it' is not defined.
test/topics.js: line 667, col 9, 'it' is not defined.
test/topics.js: line 673, col 9, 'it' is not defined.
test/topics.js: line 679, col 9, 'it' is not defined.
test/topics.js: line 685, col 9, 'it' is not defined.
test/topics.js: line 691, col 9, 'it' is not defined.
test/topics.js: line 697, col 9, 'it' is not defined.
test/topics.js: line 703, col 9, 'it' is not defined.
test/topics.js: line 714, col 9, 'it' is not defined.
test/topics.js: line 725, col 9, 'it' is not defined.
test/topics.js: line 789, col 9, 'it' is not defined.
test/topics.js: line 810, col 9, 'it' is not defined.
test/topics.js: line 816, col 9, 'it' is not defined.
test/topics.js: line 856, col 9, 'it' is not defined.
test/topics.js: line 863, col 9, 'it' is not defined.
test/topics.js: line 870, col 9, 'it' is not defined.
test/topics.js: line 877, col 9, 'it' is not defined.
test/topics.js: line 888, col 9, 'it' is not defined.
test/topics.js: line 919, col 9, 'it' is not defined.
test/topics.js: line 926, col 9, 'it' is not defined.
test/topics.js: line 947, col 9, 'it' is not defined.
test/topics.js: line 983, col 9, 'it' is not defined.
test/topics.js: line 990, col 9, 'it' is not defined.
test/topics.js: line 995, col 9, 'it' is not defined.
test/topics.js: line 1002, col 9, 'it' is not defined.
test/topics.js: line 1009, col 9, 'it' is not defined.
test/topics.js: line 1019, col 9, 'it' is not defined.
test/topics.js: line 1030, col 9, 'it' is not defined.
test/topics.js: line 1065, col 9, 'it' is not defined.
test/topics.js: line 1071, col 9, 'it' is not defined.
test/topics.js: line 1078, col 9, 'it' is not defined.
test/topics.js: line 1083, col 9, 'it' is not defined.
test/topics.js: line 1088, col 9, 'it' is not defined.
test/topics.js: line 1098, col 9, 'it' is not defined.
test/topics.js: line 1104, col 9, 'it' is not defined.
test/topics.js: line 1111, col 9, 'it' is not defined.
test/topics.js: line 1118, col 9, 'it' is not defined.
test/topics.js: line 1127, col 9, 'it' is not defined.
test/topics.js: line 1132, col 9, 'it' is not defined.
test/topics.js: line 1138, col 9, 'it' is not defined.
test/topics.js: line 1150, col 9, 'it' is not defined.
test/topics.js: line 1155, col 9, 'it' is not defined.
test/topics.js: line 1160, col 9, 'it' is not defined.
test/topics.js: line 1194, col 9, 'it' is not defined.
test/topics.js: line 1201, col 9, 'it' is not defined.
test/topics.js: line 1222, col 9, 'it' is not defined.
test/topics.js: line 1230, col 9, 'it' is not defined.
test/topics.js: line 1249, col 9, 'it' is not defined.
test/topics.js: line 1256, col 9, 'it' is not defined.
test/topics.js: line 1263, col 9, 'it' is not defined.
test/topics.js: line 1269, col 9, 'it' is not defined.
test/topics.js: line 1276, col 9, 'it' is not defined.
test/topics.js: line 1287, col 9, 'it' is not defined.
test/topics.js: line 1294, col 9, 'it' is not defined.
test/topics.js: line 1305, col 9, 'it' is not defined.
test/topics.js: line 1312, col 9, 'it' is not defined.
test/topics.js: line 1326, col 9, 'it' is not defined.
test/topics.js: line 1340, col 9, 'it' is not defined.
test/topics.js: line 1347, col 9, 'it' is not defined.
test/topics.js: line 1354, col 9, 'it' is not defined.
test/topics.js: line 1361, col 9, 'it' is not defined.
test/topics.js: line 1370, col 9, 'it' is not defined.
test/topics.js: line 1378, col 9, 'it' is not defined.
test/topics.js: line 1392, col 9, 'it' is not defined.
test/topics.js: line 1408, col 9, 'it' is not defined.
test/topics.js: line 1419, col 9, 'it' is not defined.
test/topics.js: line 1437, col 9, 'it' is not defined.
test/topics.js: line 1445, col 9, 'it' is not defined.
test/topics.js: line 1455, col 9, 'it' is not defined.
test/topics.js: line 1463, col 9, 'it' is not defined.
test/topics.js: line 1473, col 9, 'it' is not defined.
test/topics.js: line 1483, col 9, 'it' is not defined.
test/topics.js: line 1500, col 9, 'it' is not defined.
test/topics.js: line 1507, col 9, 'it' is not defined.
test/topics.js: line 1516, col 9, 'it' is not defined.
test/topics.js: line 1523, col 9, 'it' is not defined.
test/topics.js: line 1530, col 9, 'it' is not defined.
test/topics.js: line 1537, col 9, 'it' is not defined.
test/topics.js: line 1548, col 9, 'it' is not defined.
test/topics.js: line 1560, col 9, 'it' is not defined.
test/topics.js: line 1579, col 9, 'it' is not defined.
test/topics.js: line 1594, col 9, 'it' is not defined.
test/topics.js: line 1601, col 9, 'it' is not defined.
test/topics.js: line 1608, col 9, 'it' is not defined.
test/topics.js: line 1623, col 9, 'it' is not defined.
test/topics.js: line 1631, col 9, 'it' is not defined.
test/topics.js: line 1642, col 9, 'it' is not defined.
test/topics.js: line 1655, col 9, 'it' is not defined.
test/topics.js: line 1679, col 9, 'it' is not defined.
test/topics.js: line 1692, col 9, 'it' is not defined.
test/topics.js: line 1705, col 9, 'it' is not defined.
test/topics.js: line 1718, col 9, 'it' is not defined.
test/topics.js: line 1731, col 9, 'it' is not defined.
test/topics.js: line 1754, col 9, 'it' is not defined.
test/topics.js: line 1790, col 9, 'it' is not defined.
test/topics.js: line 1809, col 9, 'it' is not defined.
test/topics.js: line 1823, col 9, 'it' is not defined.
test/topics.js: line 1871, col 9, 'it' is not defined.
test/topics.js: line 1880, col 9, 'it' is not defined.
test/topics.js: line 1887, col 9, 'it' is not defined.
test/topics.js: line 1896, col 9, 'it' is not defined.
test/topics.js: line 1910, col 9, 'it' is not defined.
test/topics.js: line 1919, col 9, 'it' is not defined.
test/topics.js: line 1932, col 5, 'it' is not defined.
test/topics.js: line 1941, col 9, 'it' is not defined.
test/topics.js: line 1948, col 9, 'it' is not defined.
test/topics.js: line 1955, col 9, 'it' is not defined.
test/topics.js: line 1963, col 9, 'it' is not defined.
test/topics.js: line 1990, col 9, 'it' is not defined.
test/topics.js: line 1998, col 9, 'it' is not defined.
test/topics.js: line 2006, col 9, 'it' is not defined.
test/topics.js: line 2020, col 9, 'it' is not defined.
test/topics.js: line 2033, col 9, 'it' is not defined.
test/topics.js: line 2049, col 9, 'it' is not defined.
test/topics.js: line 2058, col 9, 'it' is not defined.
test/topics.js: line 2066, col 9, 'it' is not defined.
test/topics.js: line 2075, col 9, 'it' is not defined.
test/topics.js: line 2094, col 9, 'it' is not defined.
test/topics.js: line 2104, col 9, 'it' is not defined.
test/topics.js: line 2115, col 9, 'it' is not defined.
test/topics.js: line 2152, col 9, 'it' is not defined.
test/topics.js: line 2159, col 9, 'it' is not defined.
test/topics.js: line 2166, col 9, 'it' is not defined.
test/topics.js: line 2187, col 9, 'it' is not defined.
test/topics.js: line 2194, col 9, 'it' is not defined.
test/topics.js: line 2222, col 9, 'it' is not defined.
test/topics.js: line 2264, col 9, 'it' is not defined.
test/topics.js: line 2282, col 9, 'it' is not defined.
test/topics.js: line 2294, col 9, 'it' is not defined.
test/topics.js: line 2339, col 9, 'it' is not defined.
test/topics.js: line 2358, col 9, 'it' is not defined.
test/topics.js: line 2364, col 9, 'it' is not defined.
test/topics.js: line 2370, col 9, 'it' is not defined.
test/topics.js: line 2376, col 9, 'it' is not defined.
test/topics.js: line 2381, col 9, 'it' is not defined.
test/topics.js: line 2387, col 9, 'it' is not defined.
test/topics.js: line 2394, col 9, 'it' is not defined.
test/topics.js: line 2400, col 9, 'it' is not defined.
test/topics.js: line 2405, col 9, 'it' is not defined.
test/topics.js: line 2410, col 9, 'it' is not defined.
test/topics.js: line 2415, col 9, 'it' is not defined.
test/topics.js: line 2422, col 9, 'it' is not defined.
test/topics.js: line 2432, col 9, 'it' is not defined.
test/topics.js: line 2438, col 9, 'it' is not defined.
test/topics.js: line 2449, col 9, 'it' is not defined.
test/topics.js: line 2468, col 9, 'it' is not defined.
test/topics.js: line 2482, col 9, 'it' is not defined.
test/topics.js: line 2488, col 9, 'it' is not defined.
test/topics.js: line 2496, col 9, 'it' is not defined.
test/topics.js: line 2502, col 9, 'it' is not defined.
test/topics.js: line 2516, col 5, 'it' is not defined.
test/topics.js: line 742, col 77, 'Promise' is not defined.
test/topics.js: line 2171, col 44, 'Promise' is not defined.
test/topics.js: line 2206, col 44, 'Promise' is not defined.
test/topics.js: line 2234, col 52, 'Promise' is not defined.
test/topics.js: line 2266, col 32, 'Promise' is not defined.
test/topics.js: line 1984, col 9, 'after' is not defined.
test/topics.js: line 2513, col 46, '__dirname' is not defined.

test/translator.js: line 1, col 1, Use the function form of "use strict".
test/translator.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 8, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 11, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 12, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 13, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 14, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 20, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 21, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 27, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 28, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 34, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/translator.js: line 34, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 35, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 39, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/translator.js: line 39, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 40, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 46, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 47, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 48, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 54, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 55, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 56, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 58, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 63, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 64, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 66, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 71, col 92, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 72, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 74, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 79, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 80, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 82, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 87, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 88, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 90, col 118, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 95, col 90, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 96, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 98, col 121, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 103, col 102, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 104, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 106, col 129, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 111, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 112, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 114, col 115, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 119, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 120, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 122, col 116, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 127, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 128, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 130, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 131, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 136, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 137, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 139, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 140, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 145, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 147, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 149, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 150, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 155, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 156, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 158, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 159, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 159, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 160, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 165, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 166, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 168, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 169, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 169, col 25, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 170, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 175, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 176, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 177, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 182, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 183, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 184, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 189, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 190, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 191, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 196, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 197, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 198, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 203, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 204, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 205, col 89, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 210, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 211, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 212, col 121, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 217, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 218, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 219, col 201, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 226, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 227, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 228, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 233, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 234, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 235, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 240, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 241, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 248, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 249, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 250, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 252, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 253, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 266, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 271, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 272, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 274, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 279, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 280, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 284, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 289, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 290, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 291, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 299, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 300, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 309, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 310, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 319, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 320, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 328, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 337, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 338, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/translator.js: line 338, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 340, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 345, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 346, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/translator.js: line 346, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 355, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 356, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 360, col 91, 'async functions' is only available in ES8 (use 'esversion: 8').
test/translator.js: line 360, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/translator.js: line 370, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 371, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/translator.js: line 5, col 16, 'require' is not defined.
test/translator.js: line 6, col 14, 'require' is not defined.
test/translator.js: line 9, col 12, 'require' is not defined.
test/translator.js: line 11, col 1, 'describe' is not defined.
test/translator.js: line 12, col 5, 'describe' is not defined.
test/translator.js: line 46, col 1, 'describe' is not defined.
test/translator.js: line 54, col 5, 'describe' is not defined.
test/translator.js: line 226, col 1, 'describe' is not defined.
test/translator.js: line 248, col 1, 'describe' is not defined.
test/translator.js: line 289, col 1, 'describe' is not defined.
test/translator.js: line 290, col 5, 'describe' is not defined.
test/translator.js: line 299, col 5, 'describe' is not defined.
test/translator.js: line 309, col 5, 'describe' is not defined.
test/translator.js: line 319, col 5, 'describe' is not defined.
test/translator.js: line 337, col 5, 'describe' is not defined.
test/translator.js: line 345, col 5, 'describe' is not defined.
test/translator.js: line 13, col 9, 'it' is not defined.
test/translator.js: line 20, col 9, 'it' is not defined.
test/translator.js: line 27, col 9, 'it' is not defined.
test/translator.js: line 34, col 9, 'it' is not defined.
test/translator.js: line 39, col 9, 'it' is not defined.
test/translator.js: line 47, col 5, 'it' is not defined.
test/translator.js: line 55, col 9, 'it' is not defined.
test/translator.js: line 63, col 9, 'it' is not defined.
test/translator.js: line 71, col 9, 'it' is not defined.
test/translator.js: line 79, col 9, 'it' is not defined.
test/translator.js: line 87, col 9, 'it' is not defined.
test/translator.js: line 95, col 9, 'it' is not defined.
test/translator.js: line 103, col 9, 'it' is not defined.
test/translator.js: line 111, col 9, 'it' is not defined.
test/translator.js: line 119, col 9, 'it' is not defined.
test/translator.js: line 127, col 9, 'it' is not defined.
test/translator.js: line 136, col 9, 'it' is not defined.
test/translator.js: line 145, col 9, 'it' is not defined.
test/translator.js: line 155, col 9, 'it' is not defined.
test/translator.js: line 165, col 9, 'it' is not defined.
test/translator.js: line 175, col 9, 'it' is not defined.
test/translator.js: line 182, col 9, 'it' is not defined.
test/translator.js: line 189, col 9, 'it' is not defined.
test/translator.js: line 196, col 9, 'it' is not defined.
test/translator.js: line 203, col 9, 'it' is not defined.
test/translator.js: line 210, col 9, 'it' is not defined.
test/translator.js: line 217, col 9, 'it' is not defined.
test/translator.js: line 227, col 5, 'it' is not defined.
test/translator.js: line 233, col 5, 'it' is not defined.
test/translator.js: line 240, col 5, 'it' is not defined.
test/translator.js: line 249, col 5, 'it' is not defined.
test/translator.js: line 271, col 5, 'it' is not defined.
test/translator.js: line 279, col 5, 'it' is not defined.
test/translator.js: line 291, col 9, 'it' is not defined.
test/translator.js: line 300, col 9, 'it' is not defined.
test/translator.js: line 310, col 9, 'it' is not defined.
test/translator.js: line 320, col 9, 'it' is not defined.
test/translator.js: line 328, col 9, 'it' is not defined.
test/translator.js: line 338, col 9, 'it' is not defined.
test/translator.js: line 346, col 9, 'it' is not defined.
test/translator.js: line 360, col 9, 'it' is not defined.

test/upgrade.js: line 1, col 1, Use the function form of "use strict".
test/upgrade.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/upgrade.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/upgrade.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/upgrade.js: line 8, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/upgrade.js: line 9, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/upgrade.js: line 9, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/upgrade.js: line 10, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/upgrade.js: line 14, col 30, 'async functions' is only available in ES8 (use 'esversion: 8').
test/upgrade.js: line 14, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/upgrade.js: line 15, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/upgrade.js: line 24, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/upgrade.js: line 24, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/upgrade.js: line 30, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/upgrade.js: line 30, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/upgrade.js: line 31, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/upgrade.js: line 3, col 16, 'require' is not defined.
test/upgrade.js: line 5, col 12, 'require' is not defined.
test/upgrade.js: line 6, col 17, 'require' is not defined.
test/upgrade.js: line 8, col 1, 'describe' is not defined.
test/upgrade.js: line 9, col 5, 'it' is not defined.
test/upgrade.js: line 14, col 5, 'it' is not defined.
test/upgrade.js: line 24, col 5, 'it' is not defined.
test/upgrade.js: line 30, col 5, 'it' is not defined.

test/uploads.js: line 1, col 1, Use the function form of "use strict".
test/uploads.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 10, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 18, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 19, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 20, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 21, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 23, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 23, col 28, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 23, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 24, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 24, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 25, col 33, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 25, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 26, col 27, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 30, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 31, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 32, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 33, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 34, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 35, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 36, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 38, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 55, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 64, col 141, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 75, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 76, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 77, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 79, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 79, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 80, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 84, col 79, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 84, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 85, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 88, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 89, col 18, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 91, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 91, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 91, col 69, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 106, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 107, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 108, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 110, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 110, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 112, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 116, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 116, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 117, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 117, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 117, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 124, col 75, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 124, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 125, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 125, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 125, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 131, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 131, col 62, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 134, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 134, col 56, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 138, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 139, col 110, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 145, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 146, col 117, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 152, col 59, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 152, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 153, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 156, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 156, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 156, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 167, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 167, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 168, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 170, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 170, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 170, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 179, col 83, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 179, col 90, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 180, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 180, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 180, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 186, col 70, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 186, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 187, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 187, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 187, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 193, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 194, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 200, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 201, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 207, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 208, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 214, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 215, col 84, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 221, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 222, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 228, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 229, col 129, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 235, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 236, col 129, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 242, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 243, col 107, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 249, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 250, col 138, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 256, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 257, col 138, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 263, col 65, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 263, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 264, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 265, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 266, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 267, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 267, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 267, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 272, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 272, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 276, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 277, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 284, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 285, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 286, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 287, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 288, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 290, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 290, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 291, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 292, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 297, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 297, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 298, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 298, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 298, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 301, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 304, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 304, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 305, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 305, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 305, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 310, col 77, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 310, col 84, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 311, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 311, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 311, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 316, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 316, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 317, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 317, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 317, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 320, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 323, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 323, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 324, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 324, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 324, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 326, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 329, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 329, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 330, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 330, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 330, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 332, col 39, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 335, col 37, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 335, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 336, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 336, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 336, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 342, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 342, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 343, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 344, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 344, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 345, col 17, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 356, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 356, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 356, col 71, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 361, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 361, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 362, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 362, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 362, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 374, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 374, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 375, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 375, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 375, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 385, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 386, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 386, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 387, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 387, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 392, col 71, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 392, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 393, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 393, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 401, col 65, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 401, col 72, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 402, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 402, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 410, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 410, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 411, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 411, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 419, col 80, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 419, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 420, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 420, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 422, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 426, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 426, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 427, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 427, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 427, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 447, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 448, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 449, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 449, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 450, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 450, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 451, col 42, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 454, col 73, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 454, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 455, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 458, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 467, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 468, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 470, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 470, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 471, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 471, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 472, col 42, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 475, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 475, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 476, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 477, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 477, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 478, col 37, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 484, col 71, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 484, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 486, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 491, col 89, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 491, col 96, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 494, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 499, col 82, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 499, col 89, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 502, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/uploads.js: line 507, col 19, 'async functions' is only available in ES8 (use 'esversion: 8').
test/uploads.js: line 507, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/uploads.js: line 3, col 15, 'require' is not defined.
test/uploads.js: line 4, col 16, 'require' is not defined.
test/uploads.js: line 5, col 15, 'require' is not defined.
test/uploads.js: line 6, col 14, 'require' is not defined.
test/uploads.js: line 7, col 12, 'require' is not defined.
test/uploads.js: line 9, col 12, 'require' is not defined.
test/uploads.js: line 10, col 20, 'require' is not defined.
test/uploads.js: line 11, col 16, 'require' is not defined.
test/uploads.js: line 12, col 15, 'require' is not defined.
test/uploads.js: line 13, col 14, 'require' is not defined.
test/uploads.js: line 14, col 16, 'require' is not defined.
test/uploads.js: line 15, col 20, 'require' is not defined.
test/uploads.js: line 16, col 14, 'require' is not defined.
test/uploads.js: line 17, col 20, 'require' is not defined.
test/uploads.js: line 18, col 17, 'require' is not defined.
test/uploads.js: line 19, col 14, 'require' is not defined.
test/uploads.js: line 20, col 15, 'require' is not defined.
test/uploads.js: line 21, col 17, 'require' is not defined.
test/uploads.js: line 87, col 13, 'require' is not defined.
test/uploads.js: line 265, col 26, 'require' is not defined.
test/uploads.js: line 25, col 11, 'Promise' is not defined.
test/uploads.js: line 477, col 23, 'Promise' is not defined.
test/uploads.js: line 30, col 1, 'describe' is not defined.
test/uploads.js: line 75, col 5, 'describe' is not defined.
test/uploads.js: line 106, col 5, 'describe' is not defined.
test/uploads.js: line 284, col 5, 'describe' is not defined.
test/uploads.js: line 385, col 9, 'describe' is not defined.
test/uploads.js: line 447, col 5, 'describe' is not defined.
test/uploads.js: line 448, col 9, 'describe' is not defined.
test/uploads.js: line 467, col 9, 'describe' is not defined.
test/uploads.js: line 38, col 5, 'before' is not defined.
test/uploads.js: line 79, col 9, 'before' is not defined.
test/uploads.js: line 110, col 9, 'before' is not defined.
test/uploads.js: line 290, col 9, 'before' is not defined.
test/uploads.js: line 449, col 13, 'before' is not defined.
test/uploads.js: line 470, col 13, 'before' is not defined.
test/uploads.js: line 84, col 9, 'it' is not defined.
test/uploads.js: line 116, col 9, 'it' is not defined.
test/uploads.js: line 124, col 9, 'it' is not defined.
test/uploads.js: line 138, col 9, 'it' is not defined.
test/uploads.js: line 145, col 9, 'it' is not defined.
test/uploads.js: line 152, col 9, 'it' is not defined.
test/uploads.js: line 167, col 9, 'it' is not defined.
test/uploads.js: line 179, col 9, 'it' is not defined.
test/uploads.js: line 186, col 9, 'it' is not defined.
test/uploads.js: line 193, col 9, 'it' is not defined.
test/uploads.js: line 200, col 9, 'it' is not defined.
test/uploads.js: line 207, col 9, 'it' is not defined.
test/uploads.js: line 214, col 9, 'it' is not defined.
test/uploads.js: line 221, col 9, 'it' is not defined.
test/uploads.js: line 228, col 9, 'it' is not defined.
test/uploads.js: line 235, col 9, 'it' is not defined.
test/uploads.js: line 242, col 9, 'it' is not defined.
test/uploads.js: line 249, col 9, 'it' is not defined.
test/uploads.js: line 256, col 9, 'it' is not defined.
test/uploads.js: line 263, col 9, 'it' is not defined.
test/uploads.js: line 297, col 9, 'it' is not defined.
test/uploads.js: line 304, col 9, 'it' is not defined.
test/uploads.js: line 310, col 9, 'it' is not defined.
test/uploads.js: line 316, col 9, 'it' is not defined.
test/uploads.js: line 323, col 9, 'it' is not defined.
test/uploads.js: line 329, col 9, 'it' is not defined.
test/uploads.js: line 335, col 9, 'it' is not defined.
test/uploads.js: line 342, col 9, 'it' is not defined.
test/uploads.js: line 361, col 9, 'it' is not defined.
test/uploads.js: line 374, col 9, 'it' is not defined.
test/uploads.js: line 386, col 13, 'it' is not defined.
test/uploads.js: line 392, col 13, 'it' is not defined.
test/uploads.js: line 401, col 13, 'it' is not defined.
test/uploads.js: line 410, col 13, 'it' is not defined.
test/uploads.js: line 419, col 13, 'it' is not defined.
test/uploads.js: line 426, col 13, 'it' is not defined.
test/uploads.js: line 454, col 13, 'it' is not defined.
test/uploads.js: line 484, col 13, 'it' is not defined.
test/uploads.js: line 491, col 13, 'it' is not defined.
test/uploads.js: line 499, col 13, 'it' is not defined.
test/uploads.js: line 91, col 118, '__dirname' is not defined.
test/uploads.js: line 117, col 114, '__dirname' is not defined.
test/uploads.js: line 125, col 114, '__dirname' is not defined.
test/uploads.js: line 156, col 114, '__dirname' is not defined.
test/uploads.js: line 170, col 114, '__dirname' is not defined.
test/uploads.js: line 180, col 114, '__dirname' is not defined.
test/uploads.js: line 187, col 114, '__dirname' is not defined.
test/uploads.js: line 194, col 47, '__dirname' is not defined.
test/uploads.js: line 201, col 47, '__dirname' is not defined.
test/uploads.js: line 208, col 34, '__dirname' is not defined.
test/uploads.js: line 215, col 34, '__dirname' is not defined.
test/uploads.js: line 267, col 104, '__dirname' is not defined.
test/uploads.js: line 298, col 119, '__dirname' is not defined.
test/uploads.js: line 305, col 131, '__dirname' is not defined.
test/uploads.js: line 311, col 131, '__dirname' is not defined.
test/uploads.js: line 317, col 131, '__dirname' is not defined.
test/uploads.js: line 324, col 128, '__dirname' is not defined.
test/uploads.js: line 330, col 122, '__dirname' is not defined.
test/uploads.js: line 336, col 122, '__dirname' is not defined.
test/uploads.js: line 346, col 27, '__dirname' is not defined.
test/uploads.js: line 362, col 120, '__dirname' is not defined.
test/uploads.js: line 375, col 120, '__dirname' is not defined.
test/uploads.js: line 451, col 91, '__dirname' is not defined.
test/uploads.js: line 472, col 91, '__dirname' is not defined.
test/uploads.js: line 281, col 9, 'after' is not defined.
test/uploads.js: line 444, col 9, 'after' is not defined.
test/uploads.js: line 464, col 13, 'after' is not defined.
test/uploads.js: line 507, col 13, 'after' is not defined.

test/user.js: line 1, col 1, Use the function form of "use strict".
test/user.js: line 3, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 9, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 9, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 11, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 12, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 13, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 14, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 15, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 16, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 17, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 18, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 19, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 20, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 21, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 22, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 23, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 24, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 25, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 27, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 28, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 29, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 30, col 5, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 32, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 34, col 5, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 37, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 48, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 57, col 12, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 61, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 71, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 73, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 74, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 74, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 82, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 82, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 83, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 84, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 85, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 87, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 99, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 100, col 110, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 107, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 108, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 114, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 115, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 121, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 122, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 123, col 18, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 126, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 132, col 72, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 132, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 133, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 134, col 13, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 142, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 142, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 149, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 150, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 150, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 152, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 153, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 157, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 157, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 158, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 159, col 13, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 175, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 176, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 176, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 177, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 178, col 18, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 181, col 28, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 184, col 18, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 184, col 29, 'for of' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 189, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 197, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 198, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 199, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 206, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 207, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 215, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 216, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 225, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 226, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 230, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 231, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 239, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 244, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 245, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 245, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 251, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 252, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 260, col 15, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 260, col 22, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 266, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 267, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 268, col 84, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 274, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 281, col 96, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 285, col 84, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 291, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 298, col 105, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 302, col 17, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 308, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 315, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 315, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 317, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 317, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 318, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 319, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 319, col 61, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 319, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 320, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 320, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 330, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 330, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 331, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 331, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 337, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 338, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 339, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 340, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 340, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 345, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 346, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 355, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 355, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 356, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 360, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 360, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 369, col 46, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 369, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 378, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 378, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 387, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 387, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 396, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 396, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 405, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 405, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 406, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 408, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 413, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 413, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 414, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 419, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 419, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 420, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 421, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 427, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 427, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 428, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 429, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 435, col 59, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 435, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 436, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 440, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 440, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 441, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 444, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 451, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 451, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 455, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 467, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 468, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 469, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 470, col 111, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 477, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 478, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 480, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 488, col 103, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 488, col 110, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 489, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 492, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 505, col 105, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 505, col 112, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 506, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 509, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 522, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 522, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 523, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 524, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 525, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 526, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 530, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 538, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 539, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 540, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 547, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 548, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 555, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 556, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 563, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 564, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 574, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 579, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 581, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 594, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 595, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 602, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 602, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 603, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 608, col 111, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 608, col 118, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 609, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 610, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 616, col 93, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 616, col 100, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 618, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 619, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 625, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 632, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 641, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 642, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 649, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 650, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 657, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 658, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 665, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 666, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 674, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 675, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 685, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 686, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 687, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 688, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 690, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 690, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 691, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 697, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 700, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 700, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 709, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 709, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 718, col 58, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 718, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 727, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 728, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 730, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 730, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 735, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 747, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 747, col 69, 'spread operator' is only available in ES6 (use 'esversion: 6').
test/user.js: line 747, col 72, 'object spread property' is only available in ES9 (use 'esversion: 9').
test/user.js: line 752, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 752, col 53, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 753, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 766, col 89, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 766, col 96, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 767, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 772, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 772, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 773, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 775, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 779, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 779, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 780, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 781, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 790, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 790, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 791, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 793, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 802, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 802, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 803, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 805, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 808, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 812, col 91, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 812, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 813, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 824, col 38, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 824, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 826, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 826, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 830, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 830, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 832, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 832, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 836, col 111, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 836, col 118, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 837, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 838, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 839, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 841, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 841, col 49, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 842, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 848, col 73, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 848, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 850, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 850, col 56, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 855, col 82, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 855, col 89, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 864, col 76, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 864, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 865, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 866, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 867, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 872, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 877, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 881, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 881, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 882, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 889, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 890, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 891, col 118, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 894, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 894, col 94, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 903, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 903, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 904, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 906, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 906, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 911, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 912, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 920, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 921, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 927, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 928, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 935, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 935, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 937, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 941, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 941, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 942, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 943, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 943, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 943, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 944, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 957, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 961, col 68, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 961, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 970, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 970, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 979, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 979, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 982, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 983, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 986, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 988, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 998, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1005, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1010, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1016, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1017, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1019, col 57, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1019, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1020, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1022, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1022, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1027, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1027, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1028, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1029, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1030, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1035, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1036, col 17, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1038, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1048, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1048, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1053, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1054, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1060, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1061, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1067, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1076, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1081, col 24, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1087, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1088, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1100, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1110, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1111, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1113, col 84, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1120, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1120, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1121, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1124, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1129, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1130, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1132, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1134, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1143, col 40, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1143, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1144, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1144, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1144, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1144, col 105, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1149, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1149, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1150, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1150, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1150, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1150, col 114, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1157, col 37, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1157, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1158, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1158, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1158, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1158, col 110, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1163, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1163, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1164, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1164, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1164, col 58, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1164, col 116, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1169, col 32, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1170, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1177, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1177, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1184, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1184, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1184, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1184, col 102, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1191, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1192, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1193, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1195, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1195, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1202, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1203, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1209, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1209, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1210, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1211, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1211, col 73, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1212, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1212, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1217, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1217, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1219, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1225, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1226, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1228, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1236, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1236, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1238, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1246, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1247, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1253, col 80, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1253, col 87, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1256, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1256, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1257, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1258, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1264, col 95, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1264, col 102, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1267, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1268, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1268, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1280, col 92, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1280, col 99, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1284, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1285, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1285, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1291, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1291, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1292, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1292, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1297, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1299, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1312, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1318, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1319, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1321, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1321, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1322, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1323, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1323, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1324, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1324, col 49, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1324, col 66, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1330, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1336, col 91, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1337, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1345, col 75, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1345, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1347, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1354, col 76, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1354, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1356, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1363, col 75, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1363, col 82, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1365, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1370, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1371, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1372, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1372, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1379, col 35, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1379, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1380, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1382, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1392, col 31, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1392, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1393, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1397, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1397, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1398, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1402, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1402, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1403, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1405, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1410, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1410, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1414, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1414, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1415, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1416, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1416, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1420, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1421, col 85, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1421, col 92, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1422, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1427, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1427, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1427, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1429, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1429, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1433, col 92, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1433, col 99, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1434, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1440, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1440, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1440, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1443, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1443, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1447, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1447, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1448, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1452, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1452, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1452, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1456, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1456, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1457, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1462, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1462, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1462, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1466, col 57, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1466, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1467, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1467, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1467, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1471, col 91, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1471, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1472, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1476, col 20, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1478, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1478, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1478, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1484, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1485, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1486, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1488, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1489, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1495, col 68, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1495, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1505, col 54, 'Trailing comma in arguments lists' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1509, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1509, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1514, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1519, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1527, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1531, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1532, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1533, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1534, col 19, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1534, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1534, col 77, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1539, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1539, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1540, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1549, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1549, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1550, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1552, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1556, col 77, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1556, col 84, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1557, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1559, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1569, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1570, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1576, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1577, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1583, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1584, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1590, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1591, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1593, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1593, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1594, col 96, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1601, col 41, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1601, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1602, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1622, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1626, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1626, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1627, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1647, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1652, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1652, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1653, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1669, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1669, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1670, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1675, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1682, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1682, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1683, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1687, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1687, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1688, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1692, col 56, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1692, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1693, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1697, col 53, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1697, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1698, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1702, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1702, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1703, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1707, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1707, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1708, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1725, col 43, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1725, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1726, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1730, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1730, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1731, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1735, col 45, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1735, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1736, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1740, col 48, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1740, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1741, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1744, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1749, col 33, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1750, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1751, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1752, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1755, col 77, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1762, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1767, col 49, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1767, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1775, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1775, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1776, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1776, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1776, col 59, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1776, col 114, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1781, col 69, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1781, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1782, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1782, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1792, col 66, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1792, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1793, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1793, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1803, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1803, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1805, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1809, col 47, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1809, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1818, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1819, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1821, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1825, col 71, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1825, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1834, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1839, col 26, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1840, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1841, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1842, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1844, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1845, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1846, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1847, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1849, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1851, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1851, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1852, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1874, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1875, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1876, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1878, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1878, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1879, col 18, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1882, col 71, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1882, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1883, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1883, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1888, col 87, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1888, col 94, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1889, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1889, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1890, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1897, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1898, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1899, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1901, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1901, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1902, col 18, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1905, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1905, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1906, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1906, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1911, col 83, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1911, col 90, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1913, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1913, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1918, col 78, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1918, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1920, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1920, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1924, col 93, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1924, col 100, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1925, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1925, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1929, col 86, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1929, col 93, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1930, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1930, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1935, col 91, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1935, col 98, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1936, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1936, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1941, col 57, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1941, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1942, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1942, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1946, col 55, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1946, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1947, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1947, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1951, col 67, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1951, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1952, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1952, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1956, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1956, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1958, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1958, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1960, col 57, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1964, col 79, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1964, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1965, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1965, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1969, col 79, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1969, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1970, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1970, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1971, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1977, col 82, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1977, col 89, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1978, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1978, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1979, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1986, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1987, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1988, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1990, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1990, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1991, col 18, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 1994, col 39, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 1994, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 1996, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2001, col 84, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2001, col 91, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2002, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2002, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2007, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2008, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2009, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2011, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2012, col 54, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2018, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2019, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2022, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2022, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2025, col 21, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2025, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2026, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2027, col 73, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2034, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2035, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2041, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2042, col 94, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2048, col 66, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2049, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2050, col 24, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2050, col 93, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2052, col 92, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2059, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2060, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2066, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2067, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2068, col 121, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2070, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2070, col 102, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2078, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2079, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2081, col 36, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2081, col 101, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2084, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2093, col 79, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2093, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2094, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2095, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2096, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2096, col 44, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2098, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2098, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2107, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2108, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2113, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2114, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2115, col 13, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2117, col 20, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2117, col 27, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2118, col 18, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2121, col 72, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2121, col 79, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2122, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2122, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2122, col 63, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2123, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2131, col 81, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2131, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2132, col 17, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2132, col 17, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2132, col 67, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2133, col 21, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2141, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2142, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2143, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2149, col 44, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2149, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2150, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2151, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2156, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2156, col 70, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2157, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2160, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2160, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2161, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2168, col 51, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2168, col 58, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2169, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2170, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2172, col 17, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2176, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2179, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2179, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2180, col 35, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2187, col 95, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2187, col 102, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2188, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2189, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2193, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2194, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2197, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2204, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2205, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2210, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2215, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2216, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2218, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2226, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2227, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2228, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2234, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2240, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2241, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2242, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2243, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2244, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2246, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2246, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2252, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2256, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2258, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2263, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2266, col 14, 'destructuring assignment' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2269, col 20, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2275, col 9, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2275, col 37, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2276, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2276, col 34, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2276, col 65, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2277, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2277, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2277, col 48, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2277, col 85, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2278, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2286, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2286, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2298, col 50, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2298, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2302, col 62, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2302, col 69, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2307, col 52, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2307, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2312, col 64, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2312, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2319, col 74, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2319, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2323, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2329, col 86, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2329, col 93, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2334, col 76, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2334, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2339, col 88, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2339, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2346, col 74, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2346, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2353, col 86, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2353, col 93, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2358, col 76, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2358, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2363, col 88, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2363, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2370, col 78, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2370, col 85, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2375, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2381, col 90, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2381, col 97, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2387, col 74, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2387, col 81, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2394, col 86, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2394, col 93, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2399, col 76, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2399, col 83, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2404, col 88, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2404, col 95, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2411, col 68, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2411, col 75, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2412, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2419, col 60, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2419, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2427, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2427, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2427, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2430, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2430, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2430, col 55, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2435, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2436, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2437, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2442, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2448, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2449, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2450, col 116, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2452, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2460, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2461, col 118, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2463, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2472, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2473, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2474, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2476, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2486, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2487, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2494, col 76, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2495, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2502, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2503, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2504, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2506, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2515, col 80, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2516, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2523, col 78, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2524, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2531, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2532, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2536, col 88, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2537, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2545, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2546, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2547, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2557, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2558, col 86, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2568, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2577, col 101, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2587, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2596, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2597, col 103, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2601, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2608, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2609, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2617, col 71, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2618, col 74, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2627, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2628, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2629, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2634, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2634, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2638, col 34, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2638, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2643, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2644, col 52, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2645, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2651, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2652, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2654, col 56, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2656, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2664, col 51, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2665, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2672, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2673, col 47, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2680, col 63, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2680, col 70, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2682, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2688, col 25, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2688, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2689, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/user.js: line 2691, col 16, 'async functions' is only available in ES8 (use 'esversion: 8').
test/user.js: line 2691, col 23, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2695, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 2696, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/user.js: line 3, col 16, 'require' is not defined.
test/user.js: line 4, col 12, 'require' is not defined.
test/user.js: line 5, col 14, 'require' is not defined.
test/user.js: line 6, col 15, 'require' is not defined.
test/user.js: line 7, col 19, 'require' is not defined.
test/user.js: line 8, col 13, 'require' is not defined.
test/user.js: line 9, col 24, 'require' is not defined.
test/user.js: line 11, col 12, 'require' is not defined.
test/user.js: line 12, col 14, 'require' is not defined.
test/user.js: line 13, col 16, 'require' is not defined.
test/user.js: line 14, col 20, 'require' is not defined.
test/user.js: line 15, col 15, 'require' is not defined.
test/user.js: line 16, col 16, 'require' is not defined.
test/user.js: line 17, col 19, 'require' is not defined.
test/user.js: line 18, col 17, 'require' is not defined.
test/user.js: line 19, col 14, 'require' is not defined.
test/user.js: line 20, col 14, 'require' is not defined.
test/user.js: line 21, col 20, 'require' is not defined.
test/user.js: line 22, col 17, 'require' is not defined.
test/user.js: line 23, col 15, 'require' is not defined.
test/user.js: line 24, col 20, 'require' is not defined.
test/user.js: line 25, col 17, 'require' is not defined.
test/user.js: line 32, col 21, 'require' is not defined.
test/user.js: line 523, col 35, 'require' is not defined.
test/user.js: line 1028, col 39, 'require' is not defined.
test/user.js: line 1485, col 28, 'require' is not defined.
test/user.js: line 2067, col 36, 'require' is not defined.
test/user.js: line 2697, col 17, 'require' is not defined.
test/user.js: line 27, col 1, 'describe' is not defined.
test/user.js: line 73, col 5, 'describe' is not defined.
test/user.js: line 175, col 5, 'describe' is not defined.
test/user.js: line 197, col 5, 'describe' is not defined.
test/user.js: line 225, col 5, 'describe' is not defined.
test/user.js: line 244, col 5, 'describe' is not defined.
test/user.js: line 266, col 5, 'describe' is not defined.
test/user.js: line 337, col 5, 'describe' is not defined.
test/user.js: line 467, col 5, 'describe' is not defined.
test/user.js: line 538, col 5, 'describe' is not defined.
test/user.js: line 685, col 5, 'describe' is not defined.
test/user.js: line 727, col 9, 'describe' is not defined.
test/user.js: line 1016, col 9, 'describe' is not defined.
test/user.js: line 1191, col 5, 'describe' is not defined.
test/user.js: line 1318, col 5, 'describe' is not defined.
test/user.js: line 1370, col 5, 'describe' is not defined.
test/user.js: line 1420, col 9, 'describe' is not defined.
test/user.js: line 1484, col 5, 'describe' is not defined.
test/user.js: line 1749, col 5, 'describe' is not defined.
test/user.js: line 1839, col 5, 'describe' is not defined.
test/user.js: line 1874, col 9, 'describe' is not defined.
test/user.js: line 1897, col 9, 'describe' is not defined.
test/user.js: line 1986, col 9, 'describe' is not defined.
test/user.js: line 2007, col 9, 'describe' is not defined.
test/user.js: line 2113, col 9, 'describe' is not defined.
test/user.js: line 2141, col 5, 'describe' is not defined.
test/user.js: line 2204, col 5, 'describe' is not defined.
test/user.js: line 2226, col 5, 'describe' is not defined.
test/user.js: line 2435, col 5, 'describe' is not defined.
test/user.js: line 2448, col 9, 'describe' is not defined.
test/user.js: line 2472, col 9, 'describe' is not defined.
test/user.js: line 2502, col 9, 'describe' is not defined.
test/user.js: line 2531, col 9, 'describe' is not defined.
test/user.js: line 2545, col 9, 'describe' is not defined.
test/user.js: line 2557, col 9, 'describe' is not defined.
test/user.js: line 2627, col 5, 'describe' is not defined.
test/user.js: line 2643, col 5, 'describe' is not defined.
test/user.js: line 2688, col 5, 'describe' is not defined.
test/user.js: line 37, col 5, 'before' is not defined.
test/user.js: line 226, col 9, 'before' is not defined.
test/user.js: line 245, col 9, 'before' is not defined.
test/user.js: line 340, col 9, 'before' is not defined.
test/user.js: line 469, col 9, 'before' is not defined.
test/user.js: line 690, col 9, 'before' is not defined.
test/user.js: line 1195, col 9, 'before' is not defined.
test/user.js: line 1321, col 9, 'before' is not defined.
test/user.js: line 1372, col 9, 'before' is not defined.
test/user.js: line 1752, col 9, 'before' is not defined.
test/user.js: line 1851, col 9, 'before' is not defined.
test/user.js: line 1878, col 13, 'before' is not defined.
test/user.js: line 1901, col 13, 'before' is not defined.
test/user.js: line 1990, col 13, 'before' is not defined.
test/user.js: line 2117, col 13, 'before' is not defined.
test/user.js: line 2246, col 9, 'before' is not defined.
test/user.js: line 2437, col 9, 'before' is not defined.
test/user.js: line 2532, col 13, 'before' is not defined.
test/user.js: line 2691, col 9, 'before' is not defined.
test/user.js: line 57, col 5, 'after' is not defined.
test/user.js: line 239, col 9, 'after' is not defined.
test/user.js: line 260, col 9, 'after' is not defined.
test/user.js: line 1762, col 9, 'after' is not defined.
test/user.js: line 2269, col 9, 'after' is not defined.
test/user.js: line 61, col 5, 'beforeEach' is not defined.
test/user.js: line 74, col 9, 'it' is not defined.
test/user.js: line 82, col 9, 'it' is not defined.
test/user.js: line 99, col 9, 'it' is not defined.
test/user.js: line 107, col 9, 'it' is not defined.
test/user.js: line 114, col 9, 'it' is not defined.
test/user.js: line 121, col 9, 'it' is not defined.
test/user.js: line 132, col 9, 'it' is not defined.
test/user.js: line 157, col 9, 'it' is not defined.
test/user.js: line 176, col 9, 'it' is not defined.
test/user.js: line 198, col 9, 'it' is not defined.
test/user.js: line 206, col 9, 'it' is not defined.
test/user.js: line 215, col 9, 'it' is not defined.
test/user.js: line 230, col 9, 'it' is not defined.
test/user.js: line 251, col 9, 'it' is not defined.
test/user.js: line 267, col 9, 'it' is not defined.
test/user.js: line 281, col 9, 'it' is not defined.
test/user.js: line 298, col 9, 'it' is not defined.
test/user.js: line 315, col 9, 'it' is not defined.
test/user.js: line 345, col 9, 'it' is not defined.
test/user.js: line 355, col 9, 'it' is not defined.
test/user.js: line 360, col 9, 'it' is not defined.
test/user.js: line 369, col 9, 'it' is not defined.
test/user.js: line 378, col 9, 'it' is not defined.
test/user.js: line 387, col 9, 'it' is not defined.
test/user.js: line 396, col 9, 'it' is not defined.
test/user.js: line 405, col 9, 'it' is not defined.
test/user.js: line 413, col 9, 'it' is not defined.
test/user.js: line 419, col 9, 'it' is not defined.
test/user.js: line 427, col 9, 'it' is not defined.
test/user.js: line 435, col 9, 'it' is not defined.
test/user.js: line 440, col 9, 'it' is not defined.
test/user.js: line 451, col 9, 'it' is not defined.
test/user.js: line 477, col 9, 'it' is not defined.
test/user.js: line 488, col 9, 'it' is not defined.
test/user.js: line 505, col 9, 'it' is not defined.
test/user.js: line 522, col 9, 'it' is not defined.
test/user.js: line 539, col 9, 'it' is not defined.
test/user.js: line 547, col 9, 'it' is not defined.
test/user.js: line 555, col 9, 'it' is not defined.
test/user.js: line 563, col 9, 'it' is not defined.
test/user.js: line 574, col 9, 'it' is not defined.
test/user.js: line 594, col 9, 'it' is not defined.
test/user.js: line 602, col 9, 'it' is not defined.
test/user.js: line 608, col 9, 'it' is not defined.
test/user.js: line 616, col 9, 'it' is not defined.
test/user.js: line 625, col 9, 'it' is not defined.
test/user.js: line 641, col 9, 'it' is not defined.
test/user.js: line 649, col 9, 'it' is not defined.
test/user.js: line 657, col 9, 'it' is not defined.
test/user.js: line 665, col 9, 'it' is not defined.
test/user.js: line 674, col 9, 'it' is not defined.
test/user.js: line 700, col 9, 'it' is not defined.
test/user.js: line 709, col 9, 'it' is not defined.
test/user.js: line 718, col 9, 'it' is not defined.
test/user.js: line 730, col 13, 'it' is not defined.
test/user.js: line 766, col 13, 'it' is not defined.
test/user.js: line 772, col 9, 'it' is not defined.
test/user.js: line 779, col 9, 'it' is not defined.
test/user.js: line 790, col 9, 'it' is not defined.
test/user.js: line 802, col 9, 'it' is not defined.
test/user.js: line 812, col 9, 'it' is not defined.
test/user.js: line 824, col 9, 'it' is not defined.
test/user.js: line 830, col 9, 'it' is not defined.
test/user.js: line 836, col 9, 'it' is not defined.
test/user.js: line 848, col 9, 'it' is not defined.
test/user.js: line 855, col 9, 'it' is not defined.
test/user.js: line 864, col 9, 'it' is not defined.
test/user.js: line 881, col 9, 'it' is not defined.
test/user.js: line 889, col 9, 'it' is not defined.
test/user.js: line 903, col 9, 'it' is not defined.
test/user.js: line 911, col 9, 'it' is not defined.
test/user.js: line 920, col 9, 'it' is not defined.
test/user.js: line 927, col 9, 'it' is not defined.
test/user.js: line 935, col 9, 'it' is not defined.
test/user.js: line 941, col 9, 'it' is not defined.
test/user.js: line 961, col 9, 'it' is not defined.
test/user.js: line 970, col 9, 'it' is not defined.
test/user.js: line 979, col 9, 'it' is not defined.
test/user.js: line 986, col 9, 'it' is not defined.
test/user.js: line 1005, col 9, 'it' is not defined.
test/user.js: line 1019, col 13, 'it' is not defined.
test/user.js: line 1027, col 13, 'it' is not defined.
test/user.js: line 1053, col 13, 'it' is not defined.
test/user.js: line 1060, col 13, 'it' is not defined.
test/user.js: line 1076, col 13, 'it' is not defined.
test/user.js: line 1087, col 13, 'it' is not defined.
test/user.js: line 1100, col 13, 'it' is not defined.
test/user.js: line 1110, col 13, 'it' is not defined.
test/user.js: line 1120, col 13, 'it' is not defined.
test/user.js: line 1129, col 13, 'it' is not defined.
test/user.js: line 1143, col 9, 'it' is not defined.
test/user.js: line 1149, col 9, 'it' is not defined.
test/user.js: line 1157, col 9, 'it' is not defined.
test/user.js: line 1163, col 9, 'it' is not defined.
test/user.js: line 1177, col 9, 'it' is not defined.
test/user.js: line 1202, col 9, 'it' is not defined.
test/user.js: line 1209, col 9, 'it' is not defined.
test/user.js: line 1217, col 9, 'it' is not defined.
test/user.js: line 1225, col 9, 'it' is not defined.
test/user.js: line 1236, col 9, 'it' is not defined.
test/user.js: line 1246, col 9, 'it' is not defined.
test/user.js: line 1253, col 9, 'it' is not defined.
test/user.js: line 1264, col 9, 'it' is not defined.
test/user.js: line 1280, col 9, 'it' is not defined.
test/user.js: line 1291, col 9, 'it' is not defined.
test/user.js: line 1336, col 9, 'it' is not defined.
test/user.js: line 1345, col 9, 'it' is not defined.
test/user.js: line 1354, col 9, 'it' is not defined.
test/user.js: line 1363, col 9, 'it' is not defined.
test/user.js: line 1379, col 9, 'it' is not defined.
test/user.js: line 1392, col 9, 'it' is not defined.
test/user.js: line 1397, col 9, 'it' is not defined.
test/user.js: line 1402, col 9, 'it' is not defined.
test/user.js: line 1410, col 9, 'it' is not defined.
test/user.js: line 1414, col 9, 'it' is not defined.
test/user.js: line 1421, col 13, 'it' is not defined.
test/user.js: line 1433, col 13, 'it' is not defined.
test/user.js: line 1447, col 13, 'it' is not defined.
test/user.js: line 1456, col 13, 'it' is not defined.
test/user.js: line 1466, col 13, 'it' is not defined.
test/user.js: line 1471, col 13, 'it' is not defined.
test/user.js: line 1488, col 9, 'it' is not defined.
test/user.js: line 1495, col 9, 'it' is not defined.
test/user.js: line 1509, col 9, 'it' is not defined.
test/user.js: line 1531, col 9, 'it' is not defined.
test/user.js: line 1539, col 9, 'it' is not defined.
test/user.js: line 1549, col 9, 'it' is not defined.
test/user.js: line 1556, col 9, 'it' is not defined.
test/user.js: line 1569, col 9, 'it' is not defined.
test/user.js: line 1576, col 9, 'it' is not defined.
test/user.js: line 1583, col 9, 'it' is not defined.
test/user.js: line 1590, col 9, 'it' is not defined.
test/user.js: line 1601, col 9, 'it' is not defined.
test/user.js: line 1626, col 9, 'it' is not defined.
test/user.js: line 1652, col 9, 'it' is not defined.
test/user.js: line 1669, col 9, 'it' is not defined.
test/user.js: line 1682, col 9, 'it' is not defined.
test/user.js: line 1687, col 9, 'it' is not defined.
test/user.js: line 1692, col 9, 'it' is not defined.
test/user.js: line 1697, col 9, 'it' is not defined.
test/user.js: line 1702, col 9, 'it' is not defined.
test/user.js: line 1707, col 9, 'it' is not defined.
test/user.js: line 1725, col 9, 'it' is not defined.
test/user.js: line 1730, col 9, 'it' is not defined.
test/user.js: line 1735, col 9, 'it' is not defined.
test/user.js: line 1740, col 9, 'it' is not defined.
test/user.js: line 1767, col 9, 'it' is not defined.
test/user.js: line 1781, col 9, 'it' is not defined.
test/user.js: line 1792, col 9, 'it' is not defined.
test/user.js: line 1803, col 9, 'it' is not defined.
test/user.js: line 1809, col 9, 'it' is not defined.
test/user.js: line 1825, col 9, 'it' is not defined.
test/user.js: line 1882, col 13, 'it' is not defined.
test/user.js: line 1888, col 13, 'it' is not defined.
test/user.js: line 1905, col 13, 'it' is not defined.
test/user.js: line 1911, col 13, 'it' is not defined.
test/user.js: line 1918, col 13, 'it' is not defined.
test/user.js: line 1924, col 13, 'it' is not defined.
test/user.js: line 1929, col 13, 'it' is not defined.
test/user.js: line 1935, col 13, 'it' is not defined.
test/user.js: line 1941, col 13, 'it' is not defined.
test/user.js: line 1946, col 13, 'it' is not defined.
test/user.js: line 1951, col 13, 'it' is not defined.
test/user.js: line 1956, col 13, 'it' is not defined.
test/user.js: line 1964, col 13, 'it' is not defined.
test/user.js: line 1969, col 13, 'it' is not defined.
test/user.js: line 1977, col 13, 'it' is not defined.
test/user.js: line 1994, col 13, 'it' is not defined.
test/user.js: line 2001, col 13, 'it' is not defined.
test/user.js: line 2008, col 13, 'it' is not defined.
test/user.js: line 2018, col 13, 'it' is not defined.
test/user.js: line 2034, col 13, 'it' is not defined.
test/user.js: line 2041, col 13, 'it' is not defined.
test/user.js: line 2048, col 13, 'it' is not defined.
test/user.js: line 2059, col 13, 'it' is not defined.
test/user.js: line 2066, col 13, 'it' is not defined.
test/user.js: line 2078, col 13, 'it' is not defined.
test/user.js: line 2093, col 13, 'it' is not defined.
test/user.js: line 2121, col 13, 'it' is not defined.
test/user.js: line 2131, col 13, 'it' is not defined.
test/user.js: line 2142, col 9, 'it' is not defined.
test/user.js: line 2149, col 9, 'it' is not defined.
test/user.js: line 2168, col 9, 'it' is not defined.
test/user.js: line 2187, col 9, 'it' is not defined.
test/user.js: line 2205, col 9, 'it' is not defined.
test/user.js: line 2210, col 9, 'it' is not defined.
test/user.js: line 2215, col 9, 'it' is not defined.
test/user.js: line 2286, col 9, 'it' is not defined.
test/user.js: line 2298, col 9, 'it' is not defined.
test/user.js: line 2302, col 9, 'it' is not defined.
test/user.js: line 2307, col 9, 'it' is not defined.
test/user.js: line 2312, col 9, 'it' is not defined.
test/user.js: line 2319, col 9, 'it' is not defined.
test/user.js: line 2329, col 9, 'it' is not defined.
test/user.js: line 2334, col 9, 'it' is not defined.
test/user.js: line 2339, col 9, 'it' is not defined.
test/user.js: line 2346, col 9, 'it' is not defined.
test/user.js: line 2353, col 9, 'it' is not defined.
test/user.js: line 2358, col 9, 'it' is not defined.
test/user.js: line 2363, col 9, 'it' is not defined.
test/user.js: line 2370, col 9, 'it' is not defined.
test/user.js: line 2381, col 9, 'it' is not defined.
test/user.js: line 2387, col 9, 'it' is not defined.
test/user.js: line 2394, col 9, 'it' is not defined.
test/user.js: line 2399, col 9, 'it' is not defined.
test/user.js: line 2404, col 9, 'it' is not defined.
test/user.js: line 2411, col 9, 'it' is not defined.
test/user.js: line 2419, col 9, 'it' is not defined.
test/user.js: line 2449, col 13, 'it' is not defined.
test/user.js: line 2460, col 13, 'it' is not defined.
test/user.js: line 2473, col 13, 'it' is not defined.
test/user.js: line 2486, col 13, 'it' is not defined.
test/user.js: line 2494, col 13, 'it' is not defined.
test/user.js: line 2503, col 13, 'it' is not defined.
test/user.js: line 2515, col 13, 'it' is not defined.
test/user.js: line 2523, col 13, 'it' is not defined.
test/user.js: line 2536, col 13, 'it' is not defined.
test/user.js: line 2546, col 13, 'it' is not defined.
test/user.js: line 2558, col 13, 'it' is not defined.
test/user.js: line 2577, col 13, 'it' is not defined.
test/user.js: line 2596, col 13, 'it' is not defined.
test/user.js: line 2608, col 13, 'it' is not defined.
test/user.js: line 2617, col 13, 'it' is not defined.
test/user.js: line 2628, col 9, 'it' is not defined.
test/user.js: line 2634, col 9, 'it' is not defined.
test/user.js: line 2638, col 9, 'it' is not defined.
test/user.js: line 2644, col 9, 'it' is not defined.
test/user.js: line 2651, col 9, 'it' is not defined.
test/user.js: line 2664, col 9, 'it' is not defined.
test/user.js: line 2672, col 5, 'it' is not defined.
test/user.js: line 2680, col 5, 'it' is not defined.
test/user.js: line 2695, col 9, 'it' is not defined.
test/user.js: line 142, col 40, 'Promise' is not defined.
test/user.js: line 167, col 19, 'Promise' is not defined.
test/user.js: line 319, col 31, 'Promise' is not defined.
test/user.js: line 1307, col 19, 'Promise' is not defined.
test/user.js: line 1323, col 19, 'Promise' is not defined.
test/user.js: line 1866, col 19, 'Promise' is not defined.
test/user.js: line 2160, col 51, 'Promise' is not defined.
test/user.js: line 2179, col 51, 'Promise' is not defined.
test/user.js: line 1268, col 36, 'Map' is not defined.
test/user.js: line 1285, col 36, 'Map' is not defined.
test/user.js: line 2692, col 50, '__dirname' is not defined.

test/utils.js: line 1, col 1, Use the function form of "use strict".
test/utils.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 5, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 6, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 6, col 1, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 7, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 8, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 10, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 13, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 18, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 18, col 5, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 20, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 23, col 44, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 39, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 47, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 52, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 57, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 58, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 59, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 63, col 37, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 64, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 68, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 72, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 76, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 80, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 81, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 85, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 89, col 31, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 94, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 95, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 96, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 99, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 100, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 105, col 34, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 106, col 54, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 108, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 108, col 13, 'destructuring binding' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 109, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 110, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 115, col 29, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 116, col 41, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 117, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 122, col 64, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 132, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 133, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 138, col 36, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 147, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 152, col 73, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 157, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 161, col 35, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 165, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 172, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 194, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 195, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 196, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 197, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 205, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 210, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 215, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 220, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 225, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 230, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 235, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 240, col 50, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 245, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 246, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 252, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 257, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 262, col 45, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 267, col 46, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 268, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 274, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 276, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 277, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 282, col 62, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 290, col 57, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 298, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 299, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 304, col 55, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 305, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 310, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 311, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 318, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 319, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 326, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 331, col 54, 'async functions' is only available in ES8 (use 'esversion: 8').
test/utils.js: line 331, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 332, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 339, col 25, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 340, col 60, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 345, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 350, col 67, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 355, col 65, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 360, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 361, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 366, col 84, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 367, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 373, col 30, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 374, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 376, col 43, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 381, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 382, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 387, col 63, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 392, col 68, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 398, col 32, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 399, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 400, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 402, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 407, col 53, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 414, col 48, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 420, col 61, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 428, col 28, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 429, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 434, col 42, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 435, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 440, col 39, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 441, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 442, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 443, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 444, col 14, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 445, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 446, col 40, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 452, col 38, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 453, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 454, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 455, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 456, col 9, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 457, col 14, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 458, col 13, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 459, col 26, 'template literal syntax' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 465, col 59, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 472, col 40, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 473, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 474, col 21, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 480, col 42, 'async functions' is only available in ES8 (use 'esversion: 8').
test/utils.js: line 480, col 49, 'arrow function syntax (=>)' is only available in ES6 (use 'esversion: 6').
test/utils.js: line 481, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 482, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 483, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 484, col 9, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).
test/utils.js: line 4, col 16, 'require' is not defined.
test/utils.js: line 5, col 19, 'require' is not defined.
test/utils.js: line 6, col 19, 'require' is not defined.
test/utils.js: line 7, col 17, 'require' is not defined.
test/utils.js: line 8, col 12, 'require' is not defined.
test/utils.js: line 16, col 21, 'require' is not defined.
test/utils.js: line 20, col 19, 'require' is not defined.
test/utils.js: line 107, col 20, 'require' is not defined.
test/utils.js: line 107, col 34, 'require' is not defined.
test/utils.js: line 108, col 38, 'require' is not defined.
test/utils.js: line 172, col 24, 'require' is not defined.
test/utils.js: line 481, col 22, 'require' is not defined.
test/utils.js: line 10, col 1, 'describe' is not defined.
test/utils.js: line 57, col 5, 'describe' is not defined.
test/utils.js: line 94, col 5, 'describe' is not defined.
test/utils.js: line 105, col 5, 'describe' is not defined.
test/utils.js: line 115, col 5, 'describe' is not defined.
test/utils.js: line 339, col 5, 'describe' is not defined.
test/utils.js: line 373, col 5, 'describe' is not defined.
test/utils.js: line 398, col 5, 'describe' is not defined.
test/utils.js: line 14, col 5, 'global' is not defined.
test/utils.js: line 15, col 5, 'global' is not defined.
test/utils.js: line 16, col 5, 'global' is not defined.
test/utils.js: line 17, col 5, 'global' is not defined.
test/utils.js: line 17, col 16, 'global' is not defined.
test/utils.js: line 18, col 19, 'global' is not defined.
test/utils.js: line 140, col 9, 'global' is not defined.
test/utils.js: line 141, col 9, 'global' is not defined.
test/utils.js: line 143, col 9, 'global' is not defined.
test/utils.js: line 166, col 9, 'global' is not defined.
test/utils.js: line 283, col 9, 'global' is not defined.
test/utils.js: line 291, col 9, 'global' is not defined.
test/utils.js: line 23, col 5, 'it' is not defined.
test/utils.js: line 39, col 5, 'it' is not defined.
test/utils.js: line 47, col 5, 'it' is not defined.
test/utils.js: line 52, col 5, 'it' is not defined.
test/utils.js: line 58, col 9, 'it' is not defined.
test/utils.js: line 63, col 9, 'it' is not defined.
test/utils.js: line 68, col 9, 'it' is not defined.
test/utils.js: line 72, col 9, 'it' is not defined.
test/utils.js: line 76, col 9, 'it' is not defined.
test/utils.js: line 80, col 9, 'it' is not defined.
test/utils.js: line 85, col 9, 'it' is not defined.
test/utils.js: line 89, col 9, 'it' is not defined.
test/utils.js: line 95, col 9, 'it' is not defined.
test/utils.js: line 99, col 9, 'it' is not defined.
test/utils.js: line 106, col 9, 'it' is not defined.
test/utils.js: line 116, col 9, 'it' is not defined.
test/utils.js: line 122, col 9, 'it' is not defined.
test/utils.js: line 132, col 5, 'it' is not defined.
test/utils.js: line 138, col 5, 'it' is not defined.
test/utils.js: line 147, col 5, 'it' is not defined.
test/utils.js: line 152, col 5, 'it' is not defined.
test/utils.js: line 157, col 5, 'it' is not defined.
test/utils.js: line 161, col 5, 'it' is not defined.
test/utils.js: line 165, col 5, 'it' is not defined.
test/utils.js: line 194, col 5, 'it' is not defined.
test/utils.js: line 205, col 5, 'it' is not defined.
test/utils.js: line 210, col 5, 'it' is not defined.
test/utils.js: line 215, col 5, 'it' is not defined.
test/utils.js: line 220, col 5, 'it' is not defined.
test/utils.js: line 225, col 5, 'it' is not defined.
test/utils.js: line 230, col 5, 'it' is not defined.
test/utils.js: line 235, col 5, 'it' is not defined.
test/utils.js: line 240, col 5, 'it' is not defined.
test/utils.js: line 245, col 5, 'it' is not defined.
test/utils.js: line 252, col 5, 'it' is not defined.
test/utils.js: line 257, col 5, 'it' is not defined.
test/utils.js: line 262, col 5, 'it' is not defined.
test/utils.js: line 267, col 5, 'it' is not defined.
test/utils.js: line 274, col 5, 'it' is not defined.
test/utils.js: line 282, col 5, 'it' is not defined.
test/utils.js: line 290, col 5, 'it' is not defined.
test/utils.js: line 298, col 5, 'it' is not defined.
test/utils.js: line 304, col 5, 'it' is not defined.
test/utils.js: line 310, col 5, 'it' is not defined.
test/utils.js: line 318, col 5, 'it' is not defined.
test/utils.js: line 326, col 5, 'it' is not defined.
test/utils.js: line 331, col 5, 'it' is not defined.
test/utils.js: line 340, col 9, 'it' is not defined.
test/utils.js: line 345, col 9, 'it' is not defined.
test/utils.js: line 350, col 9, 'it' is not defined.
test/utils.js: line 355, col 9, 'it' is not defined.
test/utils.js: line 360, col 9, 'it' is not defined.
test/utils.js: line 366, col 9, 'it' is not defined.
test/utils.js: line 376, col 9, 'it' is not defined.
test/utils.js: line 381, col 9, 'it' is not defined.
test/utils.js: line 387, col 9, 'it' is not defined.
test/utils.js: line 392, col 9, 'it' is not defined.
test/utils.js: line 402, col 9, 'it' is not defined.
test/utils.js: line 407, col 9, 'it' is not defined.
test/utils.js: line 414, col 9, 'it' is not defined.
test/utils.js: line 420, col 9, 'it' is not defined.
test/utils.js: line 428, col 5, 'it' is not defined.
test/utils.js: line 434, col 5, 'it' is not defined.
test/utils.js: line 440, col 5, 'it' is not defined.
test/utils.js: line 452, col 5, 'it' is not defined.
test/utils.js: line 465, col 5, 'it' is not defined.
test/utils.js: line 472, col 5, 'it' is not defined.
test/utils.js: line 480, col 5, 'it' is not defined.
test/utils.js: line 333, col 34, 'URLSearchParams' is not defined.
test/utils.js: line 473, col 20, 'process' is not defined.
test/utils.js: line 475, col 13, 'process' is not defined.
test/utils.js: line 474, col 9, 'setTimeout' is not defined.

23376 errors
